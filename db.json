{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/pacman/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/pacman/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/pacman/source/img/favicon.ico","path":"img/favicon.ico","modified":0,"renderable":1},{"_id":"themes/pacman/source/img/sun.png","path":"img/sun.png","modified":0,"renderable":1},{"_id":"themes/pacman/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/pacman/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/pacman/source/font/coveredbyyourgrace-webfont.ttf","path":"font/coveredbyyourgrace-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/pacman/source/img/logo.svg","path":"img/logo.svg","modified":0,"renderable":1},{"_id":"themes/pacman/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/pacman/source/font/fontawesome-webfont.eot","path":"font/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/pacman/source/js/jquery-2.1.0.min.js","path":"js/jquery-2.1.0.min.js","modified":0,"renderable":1},{"_id":"themes/pacman/source/font/coveredbyyourgrace-webfont.eot","path":"font/coveredbyyourgrace-webfont.eot","modified":0,"renderable":1},{"_id":"themes/pacman/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/pacman/source/font/FontAwesome.otf","path":"font/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/pacman/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/pacman/source/font/coveredbyyourgrace-webfont.svg","path":"font/coveredbyyourgrace-webfont.svg","modified":0,"renderable":1},{"_id":"themes/pacman/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/pacman/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/pacman/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/pacman/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/pacman/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/pacman/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/pacman/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/pacman/source/font/fontawesome-webfont.ttf","path":"font/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/pacman/source/img/author.jpg","path":"img/author.jpg","modified":0,"renderable":1},{"_id":"themes/pacman/source/font/fontawesome-webfont.svg","path":"font/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/pacman/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/pacman/source/font/coveredbyyourgrace-webfont.woff","path":"font/coveredbyyourgrace-webfont.woff","modified":0,"renderable":1},{"_id":"themes/pacman/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/pacman/source/font/fontawesome-webfont.woff","path":"font/fontawesome-webfont.woff","modified":0,"renderable":1}],"Cache":[{"_id":"themes/pacman/LICENSE","hash":"4847e5a63399a0ef85af6844fd19a48c69a8869c","modified":1466187524000},{"_id":"themes/pacman/_config.yml","hash":"458584e72993769c9eb1ec6a9da3d460f39088db","modified":1466513387000},{"_id":"source/categories/index.md","hash":"0cd66956e5d0d89f637935eb035a6f47bdd56204","modified":1466230449000},{"_id":"source/tags/index.md","hash":"b9911f522acb439658c2da88ca0f4e6daa9d257a","modified":1466513260000},{"_id":"themes/pacman/.git/FETCH_HEAD","hash":"a6dd8646425ddbf3948f54aa06e10e94f0b83d49","modified":1466188286000},{"_id":"themes/pacman/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1466187524000},{"_id":"themes/pacman/.git/ORIG_HEAD","hash":"70324d8fb61c49f6ec262f392ff6cff3ac8f80ca","modified":1466188286000},{"_id":"themes/pacman/.git/config","hash":"666d315476d2ef210b176a935de64a711fb43e93","modified":1466187524000},{"_id":"themes/pacman/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1466187501000},{"_id":"themes/pacman/.git/packed-refs","hash":"e45d41cd8a82b23bb1e924b8f9212cfc77f36e07","modified":1466187524000},{"_id":"themes/pacman/.git/index","hash":"c30567b2a7774da4e5d60687c99f650c009813c1","modified":1466187524000},{"_id":"themes/pacman/layout/archive.ejs","hash":"a18842e3d719fe3ca9b977a6995f8facc75c8673","modified":1466187524000},{"_id":"themes/pacman/layout/category.ejs","hash":"9b740fc33f6f028df60f0bc4312bf3ebd03aa8ea","modified":1466230271000},{"_id":"themes/pacman/layout/index.ejs","hash":"335172db243f1410a858e3efadf5b5d773b571b1","modified":1466318839000},{"_id":"themes/pacman/layout/layout.ejs","hash":"47ec9adc95f5734fd1f7ed170fc5103fc4ae74b2","modified":1466258418000},{"_id":"themes/pacman/layout/page.ejs","hash":"bd6bbf2ea8e183bd835867ff617dc6366b56748c","modified":1466187524000},{"_id":"themes/pacman/layout/post.ejs","hash":"3114134775bdde5a83cf14feb019606fa2b2b2be","modified":1466187524000},{"_id":"themes/pacman/layout/tag.ejs","hash":"45150a2365768b6b67880193c9264ad2bb4814db","modified":1466187524000},{"_id":"themes/pacman/languages/default.yml","hash":"9ffaaf4dbe83f1f343ea702e59493dc6f3f46877","modified":1466187524000},{"_id":"themes/pacman/languages/zh-CN.yml","hash":"680d877a531f8df04b30b462a5131b5d3a8ca372","modified":1466187524000},{"_id":"themes/pacman/languages/zh-TW.yml","hash":"08a6eae3c1e48f96690ca4c29ce67f8d6ff9a8bd","modified":1466187524000},{"_id":"themes/pacman/scripts/fancybox.js","hash":"4c130fc242cf9b59b5df6ca5eae3b14302311e8c","modified":1466187524000},{"_id":"themes/pacman/README.md","hash":"9f0be78dbd1f34f44a955cf02bbe03f979c7a1e6","modified":1466187524000},{"_id":"source/about/index.md","hash":"070782d7eec030516dc0f1e3879ba787f89c57dc","modified":1466221686000},{"_id":"themes/pacman/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1466187501000},{"_id":"themes/pacman/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1466187501000},{"_id":"themes/pacman/.git/logs/HEAD","hash":"8d15f7eb3e2b1de7d0c19bb368d4805882c56b64","modified":1466187524000},{"_id":"themes/pacman/layout/_widget/about.ejs","hash":"18318a3639d872966f3d6442102f353895606e26","modified":1466325396000},{"_id":"themes/pacman/layout/_widget/archive.ejs","hash":"b82d7fb0d1119738a9f9bb747d415e8c99e454ae","modified":1466187524000},{"_id":"themes/pacman/layout/_widget/article.ejs","hash":"447ef89ac461e0418c81f7350ae965ce9cb2e6ee","modified":1466857162000},{"_id":"themes/pacman/layout/_widget/links.ejs","hash":"0d5ef5c05694fb61020fedffbdebe02cb6361c8d","modified":1466187524000},{"_id":"themes/pacman/layout/_widget/category.ejs","hash":"690b340f317e348f1e89ef291c4f2461ba953437","modified":1466322702000},{"_id":"themes/pacman/layout/_widget/rss.ejs","hash":"ebfb11bdd603cd6e4dcf3949cc52e38009615c25","modified":1466187524000},{"_id":"themes/pacman/layout/_widget/tagcloud.ejs","hash":"317d420f5448c7452290e37f0ed8516cb73f4068","modified":1466187524000},{"_id":"themes/pacman/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1466187501000},{"_id":"themes/pacman/layout/_widget/tag.ejs","hash":"ec62e051dc8bb8b4ab3add0f597e9826e02df998","modified":1466513374000},{"_id":"themes/pacman/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1466187524000},{"_id":"themes/pacman/source/css/style.styl","hash":"fd9224ce13feac0a9b406c28d9bafbd4deda42f5","modified":1466264663000},{"_id":"themes/pacman/source/img/favicon.ico","hash":"8be13e6581cdd811db96c2c30f04d37fc2663647","modified":1466236351000},{"_id":"themes/pacman/source/img/sun.png","hash":"de4408b898c023ec01bbd0801f253fcbf29afc5a","modified":1466234828000},{"_id":"themes/pacman/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1466187524000},{"_id":"themes/pacman/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1466187501000},{"_id":"themes/pacman/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1466187501000},{"_id":"themes/pacman/.git/refs/heads/master","hash":"70324d8fb61c49f6ec262f392ff6cff3ac8f80ca","modified":1466187524000},{"_id":"themes/pacman/layout/_partial/baidu_tongji.ejs","hash":"a982a478cb21c2110afa5d4e1a1aac738d403a9e","modified":1466195273000},{"_id":"themes/pacman/layout/_partial/pagination.ejs","hash":"6cf37f844f150af4bbe212610da61e5140317de9","modified":1466187524000},{"_id":"themes/pacman/layout/_partial/sidebar.ejs","hash":"565979955cecaab9105b23f668aa63bf97e9c20e","modified":1466187524000},{"_id":"themes/pacman/layout/_partial/tags.ejs","hash":"c5c858742b29e6364da2e1d098e7d6cd8cef038f","modified":1466187524000},{"_id":"themes/pacman/layout/_partial/google_analytics.ejs","hash":"7ebccafcfdaca5cb5b8f4f06548f1d50958726ef","modified":1466187524000},{"_id":"themes/pacman/layout/_partial/post/footer.ejs","hash":"a4dc14cd47d22f1b73860bc3c7f424eae3d282dd","modified":1466187524000},{"_id":"themes/pacman/layout/_partial/post/catetags.ejs","hash":"fa03892b35dc344de7a722b9393978286c0376fe","modified":1466187524000},{"_id":"themes/pacman/layout/_partial/post/gallery.ejs","hash":"6bd8723f24b192158e6e840bf14028503ad50045","modified":1466187524000},{"_id":"themes/pacman/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1466187524000},{"_id":"themes/pacman/source/css/_partial/aside.styl","hash":"f0b0b125fd5cb96a1b82473704bad5e22cf8b958","modified":1466514811000},{"_id":"themes/pacman/source/css/_partial/helper.styl","hash":"016bb83fd19e1ea0e8279e77f87829837e172a62","modified":1466777393000},{"_id":"themes/pacman/layout/_partial/after_footer.ejs","hash":"db09ae62aa29b4c6495c698f9bb14d718a637423","modified":1466187524000},{"_id":"themes/pacman/source/css/_partial/gallery.styl","hash":"b85a32c4bc71f720d74143a17a202fe8fa067950","modified":1466187524000},{"_id":"themes/pacman/source/font/coveredbyyourgrace-webfont.ttf","hash":"194ccb4acf77a03dc25bcc174edb266143704fec","modified":1466187524000},{"_id":"themes/pacman/source/img/logo.svg","hash":"cef3f0bb4bf3661dd3a58c81b9a7be79601a0bfb","modified":1466187524000},{"_id":"themes/pacman/source/fancybox/jquery.fancybox.js","hash":"58193c802f307ec9bc9e586c0e8a13ebef45d2f8","modified":1466187524000},{"_id":"themes/pacman/source/font/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1466187524000},{"_id":"themes/pacman/layout/_partial/footer.ejs","hash":"abca156f1474f13978487ad11d73dbbb67327e81","modified":1466196790000},{"_id":"themes/pacman/layout/_partial/header.ejs","hash":"d49468a4c87dd4f6e20719ec1a3e6d945aaa7033","modified":1466197356000},{"_id":"themes/pacman/layout/_partial/categories.ejs","hash":"69ac84c3c44231cb5570e1f0e089a857ae7cf60d","modified":1466514908000},{"_id":"themes/pacman/layout/_partial/head.ejs","hash":"4cbf45c319b1a92725f538b9f48d0e21c767517e","modified":1466195307000},{"_id":"themes/pacman/source/js/jquery-2.1.0.min.js","hash":"0faaa0c56f563693cdeafa299f97e3d5bd6fcdd8","modified":1466187524000},{"_id":"themes/pacman/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1466187501000},{"_id":"themes/pacman/source/css/_base/font.styl","hash":"772749cc7c6a47410bb667f8127b37767d029283","modified":1466187524000},{"_id":"themes/pacman/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1466187501000},{"_id":"themes/pacman/source/css/_base/code.styl","hash":"577798b3c101be20b7ceb3d1e0421b4c4426d0ce","modified":1466187524000},{"_id":"themes/pacman/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1466187501000},{"_id":"themes/pacman/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1466187501000},{"_id":"themes/pacman/layout/_partial/search.ejs","hash":"5f1c22e78158cdb77f2af28517b6cbe96150fdd5","modified":1466187524000},{"_id":"themes/pacman/source/font/coveredbyyourgrace-webfont.eot","hash":"a17d0f10534303e40f210c506ebb8703fa23b7de","modified":1466187524000},{"_id":"themes/pacman/source/css/_partial/duoshuo.styl","hash":"3ec423b734639614fbd11ec2c3445d3a03f5231d","modified":1466187524000},{"_id":"themes/pacman/source/css/_partial/footer.styl","hash":"feab5937c488345cdb5919bec7272cf036e209d3","modified":1466197005000},{"_id":"themes/pacman/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1466187524000},{"_id":"themes/pacman/source/css/_partial/index.styl","hash":"a00aafe86d0238bf58f093834b6ae7406e918ec0","modified":1466228966000},{"_id":"themes/pacman/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1466187524000},{"_id":"themes/pacman/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1466187501000},{"_id":"themes/pacman/layout/_partial/post/comment.ejs","hash":"f0e21c685c0e3fe78c9b5f5f6d4eb9c1b5cf036f","modified":1466193899000},{"_id":"themes/pacman/.git/logs/refs/heads/master","hash":"8d15f7eb3e2b1de7d0c19bb368d4805882c56b64","modified":1466187524000},{"_id":"themes/pacman/source/font/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1466187524000},{"_id":"themes/pacman/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"83cdfea43632b613771691a11f56f99d85fb6dbd","modified":1466187524000},{"_id":"themes/pacman/layout/_partial/article.ejs","hash":"8e446ec97c30774807657fc9fb7bceb6905699aa","modified":1466187524000},{"_id":"themes/pacman/layout/_partial/post/header.ejs","hash":"953e6feaf7b156fab79165342e9bca0ef54384ba","modified":1466187524000},{"_id":"themes/pacman/layout/_partial/post/jiathis.ejs","hash":"5043a5058887cf6ad15182cfde345d36cb6ab323","modified":1466187524000},{"_id":"themes/pacman/layout/_partial/post/pagination.ejs","hash":"7b2c70d381d6d6f8a55d89180a9bc0f27118812e","modified":1466187524000},{"_id":"themes/pacman/.git/logs/refs/remotes/origin/HEAD","hash":"8d15f7eb3e2b1de7d0c19bb368d4805882c56b64","modified":1466187524000},{"_id":"themes/pacman/source/css/_partial/header.styl","hash":"ccefcb427c687f92b7fcd3b5c430a1bb306e2168","modified":1466197481000},{"_id":"source/_posts/front-end-getting-started.md","hash":"89f2405f82227fd1f04b2b87647b7d4060bfed27","modified":1466776465000},{"_id":"themes/pacman/source/font/coveredbyyourgrace-webfont.svg","hash":"739808e56a56e10a03bc93d03eb55abd19590942","modified":1466187524000},{"_id":"themes/pacman/layout/_partial/archive.ejs","hash":"ac0ce2ca7f4f361b2ae886ec8c6fb77f41527097","modified":1466515191000},{"_id":"themes/pacman/source/fancybox/jquery.fancybox.css","hash":"2e54d51d21e68ebc4bb870f6e57d3bfb660d4f9c","modified":1466187524000},{"_id":"source/_posts/first-blog.md","hash":"98c1c8f0c44a8a42f6871c5a51234f53442350e5","modified":1466776636000},{"_id":"themes/pacman/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1466187524000},{"_id":"themes/pacman/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1466187524000},{"_id":"themes/pacman/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1466187524000},{"_id":"themes/pacman/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1466187524000},{"_id":"themes/pacman/.git/objects/pack/pack-80f322aac6ea3c399a9de53417442933b148d37d.idx","hash":"13435a991a751ed05e65fdf11368cd604d206705","modified":1466187523000},{"_id":"themes/pacman/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1466187524000},{"_id":"themes/pacman/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"4c9c395d705d22af7da06870d18f434e2a2eeaf9","modified":1466187524000},{"_id":"themes/pacman/source/css/_base/variable.styl","hash":"0e2781381b966936c806545a3f248131bc67f5bf","modified":1466195942000},{"_id":"source/_posts/responsive-waterfall.md","hash":"653d81a5f6f8f5dbce0e9bbfcffab019cd9ee7f7","modified":1466777547000},{"_id":"themes/pacman/source/font/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1466187524000},{"_id":"themes/pacman/source/img/author.jpg","hash":"caa1bf1ac1aec5052d6cce57955daef13ed1aa49","modified":1466237336000},{"_id":"themes/pacman/source/font/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1466187524000},{"_id":"themes/pacman/source/fancybox/helpers/jquery.fancybox-media.js","hash":"e14c32cc6823b81b2f758512f13ed8eb9ef2b454","modified":1466187524000},{"_id":"source/_posts/picture-align.md","hash":"1da367de3ec25f2e5498eefff23ba036273fa287","modified":1466777733000},{"_id":"source/_posts/drag-and-drop.md","hash":"dc1b881574e7731f6d466d02472c3299e1344b5c","modified":1466777234000},{"_id":"themes/pacman/source/css/_partial/article.styl","hash":"a2f9b88cc70f602b1159cb13dceb30da92e54c07","modified":1466845686000},{"_id":"themes/pacman/layout/_partial/post/article.ejs","hash":"0eb8eb6bca7303c400411f9a28d5aee0b7145e81","modified":1466319010000},{"_id":"source/_posts/about-position.md","hash":"386cff3aaa752dd74815549f6d9a62fac32f7442","modified":1466846820000},{"_id":"source/_posts/picture-cut.md","hash":"d03a214eaf8b2cdc6ca5bb07581b4425799f2c99","modified":1466777654000},{"_id":"themes/pacman/source/css/_base/public.styl","hash":"769199fe3c23ac349a4e99cd66bad696d6f5e4e2","modified":1466846126000},{"_id":"source/_posts/position-object.md","hash":"0fd96ec9c9f9ec9b7449c14d9100fc301d46c867","modified":1466776993000},{"_id":"themes/pacman/source/font/coveredbyyourgrace-webfont.woff","hash":"c6f8dc1a2f6ce914f120e80a876b8fd77b98888e","modified":1466187524000},{"_id":"themes/pacman/source/fancybox/jquery.fancybox.pack.js","hash":"2da892a02778236b64076e5e8802ef0566e1d9e8","modified":1466187524000},{"_id":"themes/pacman/source/font/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1466187524000},{"_id":"themes/pacman/.git/objects/pack/pack-80f322aac6ea3c399a9de53417442933b148d37d.pack","hash":"03a7d5dde8bd7fdc382bb4518ef76437679004a4","modified":1466187523000}],"Category":[{"name":"web乱炖","_id":"cipv4ddeu0005q0l54ls1uv0z"},{"name":"jQuery杂烩","_id":"cipv4ddga000eq0l5rae0psyl"},{"name":"js什锦","_id":"cipv4ddhn000nq0l5qjmiakze"},{"name":"CSS炒饭","_id":"cipv4ddie000sq0l5vyjivfqt"}],"Data":[],"Page":[{"title":"categories","date":"2016-06-18T06:13:19.000Z","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2016-06-18 14:13:19\nlayout: categories\n---\n","updated":"2016-06-18T06:14:09.000Z","path":"categories/index.html","comments":1,"_id":"cipv4ddcq0000q0l5b5zd5tnc","content":"","excerpt":"","more":""},{"title":"tags","date":"2016-06-21T12:42:19.000Z","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-06-21 20:42:19\nlayout: tags\n---\n","updated":"2016-06-21T12:47:40.000Z","path":"tags/index.html","comments":1,"_id":"cipv4ddct0001q0l527z7ub95","content":"","excerpt":"","more":""},{"title":"关于我","date":"2016-06-18T03:11:52.000Z","_content":"### 热爱前端，热爱生活\n\n也思考过为什么自己这么热爱前端，而不是其他任何语言。\n<!---->\n但不管原因是什么，本骚年爱这样无拘无束的语言，爱这种容许无限大脑洞的平台。\n<!---->\n骚年热爱钻研原理，像jQuery源码解析、AngularJs的实现原理、解剖React虚拟DOM等等。但毕竟还不是老司机，只能膜拜大神们的大作，然后写点学习笔记，又或是项目遇到的问题记下来呗。\n<!---->\n热爱生活呀，即使现在少了发现幸福片段、记录喜悦心情的时候，但依然爱这个世界，死心塌地哈哈。\n\n### 欢迎大牛指导，以及小伙伴们切磋\n\n一直抱着期盼在某年某月某日会遇到一些前端的大牛们，看看他们是如何架构、使用些什么工具、写代码的时候都在考虑些什么。\n<!---->\n也一直期待着有一堆志气相投的小伙伴们，一起分享各自的想法，一起切磋，一起解决问题。\n<!---->\n> 邮箱：wangbeishan@163.com\n> QQ: 1780096742\n> Github: [https://github.com/godbasin](https://github.com/godbasin)\n\n### 许个愿吧\n\n互联网的世界，是允许弱小的人许下大愿望的呀。\n:)","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2016-06-18 11:11:52\n---\n### 热爱前端，热爱生活\n\n也思考过为什么自己这么热爱前端，而不是其他任何语言。\n<!---->\n但不管原因是什么，本骚年爱这样无拘无束的语言，爱这种容许无限大脑洞的平台。\n<!---->\n骚年热爱钻研原理，像jQuery源码解析、AngularJs的实现原理、解剖React虚拟DOM等等。但毕竟还不是老司机，只能膜拜大神们的大作，然后写点学习笔记，又或是项目遇到的问题记下来呗。\n<!---->\n热爱生活呀，即使现在少了发现幸福片段、记录喜悦心情的时候，但依然爱这个世界，死心塌地哈哈。\n\n### 欢迎大牛指导，以及小伙伴们切磋\n\n一直抱着期盼在某年某月某日会遇到一些前端的大牛们，看看他们是如何架构、使用些什么工具、写代码的时候都在考虑些什么。\n<!---->\n也一直期待着有一堆志气相投的小伙伴们，一起分享各自的想法，一起切磋，一起解决问题。\n<!---->\n> 邮箱：wangbeishan@163.com\n> QQ: 1780096742\n> Github: [https://github.com/godbasin](https://github.com/godbasin)\n\n### 许个愿吧\n\n互联网的世界，是允许弱小的人许下大愿望的呀。\n:)","updated":"2016-06-18T03:48:06.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cipv4dddb0002q0l5u4wp9uak","content":"<h3 id=\"热爱前端，热爱生活\"><a href=\"#热爱前端，热爱生活\" class=\"headerlink\" title=\"热爱前端，热爱生活\"></a>热爱前端，热爱生活</h3><p>也思考过为什么自己这么热爱前端，而不是其他任何语言。<br><!----><br>但不管原因是什么，本骚年爱这样无拘无束的语言，爱这种容许无限大脑洞的平台。<br><!----><br>骚年热爱钻研原理，像jQuery源码解析、AngularJs的实现原理、解剖React虚拟DOM等等。但毕竟还不是老司机，只能膜拜大神们的大作，然后写点学习笔记，又或是项目遇到的问题记下来呗。<br><!----><br>热爱生活呀，即使现在少了发现幸福片段、记录喜悦心情的时候，但依然爱这个世界，死心塌地哈哈。</p>\n<h3 id=\"欢迎大牛指导，以及小伙伴们切磋\"><a href=\"#欢迎大牛指导，以及小伙伴们切磋\" class=\"headerlink\" title=\"欢迎大牛指导，以及小伙伴们切磋\"></a>欢迎大牛指导，以及小伙伴们切磋</h3><p>一直抱着期盼在某年某月某日会遇到一些前端的大牛们，看看他们是如何架构、使用些什么工具、写代码的时候都在考虑些什么。<br><!----><br>也一直期待着有一堆志气相投的小伙伴们，一起分享各自的想法，一起切磋，一起解决问题。<br><!----></p>\n<blockquote>\n<p>邮箱：wangbeishan@163.com<br>QQ: 1780096742<br>Github: <a href=\"https://github.com/godbasin\" target=\"_blank\" rel=\"external\">https://github.com/godbasin</a></p>\n</blockquote>\n<h3 id=\"许个愿吧\"><a href=\"#许个愿吧\" class=\"headerlink\" title=\"许个愿吧\"></a>许个愿吧</h3><p>互联网的世界，是允许弱小的人许下大愿望的呀。<br>:)</p>\n","excerpt":"","more":"<h3 id=\"热爱前端，热爱生活\"><a href=\"#热爱前端，热爱生活\" class=\"headerlink\" title=\"热爱前端，热爱生活\"></a>热爱前端，热爱生活</h3><p>也思考过为什么自己这么热爱前端，而不是其他任何语言。<br><!----><br>但不管原因是什么，本骚年爱这样无拘无束的语言，爱这种容许无限大脑洞的平台。<br><!----><br>骚年热爱钻研原理，像jQuery源码解析、AngularJs的实现原理、解剖React虚拟DOM等等。但毕竟还不是老司机，只能膜拜大神们的大作，然后写点学习笔记，又或是项目遇到的问题记下来呗。<br><!----><br>热爱生活呀，即使现在少了发现幸福片段、记录喜悦心情的时候，但依然爱这个世界，死心塌地哈哈。</p>\n<h3 id=\"欢迎大牛指导，以及小伙伴们切磋\"><a href=\"#欢迎大牛指导，以及小伙伴们切磋\" class=\"headerlink\" title=\"欢迎大牛指导，以及小伙伴们切磋\"></a>欢迎大牛指导，以及小伙伴们切磋</h3><p>一直抱着期盼在某年某月某日会遇到一些前端的大牛们，看看他们是如何架构、使用些什么工具、写代码的时候都在考虑些什么。<br><!----><br>也一直期待着有一堆志气相投的小伙伴们，一起分享各自的想法，一起切磋，一起解决问题。<br><!----></p>\n<blockquote>\n<p>邮箱：wangbeishan@163.com<br>QQ: 1780096742<br>Github: <a href=\"https://github.com/godbasin\">https://github.com/godbasin</a></p>\n</blockquote>\n<h3 id=\"许个愿吧\"><a href=\"#许个愿吧\" class=\"headerlink\" title=\"许个愿吧\"></a>许个愿吧</h3><p>互联网的世界，是允许弱小的人许下大愿望的呀。<br>:)</p>\n"}],"Post":[{"title":"我的前端入门之路","date":"2016-06-24T13:30:30.000Z","_content":"曾经作为物理学院的一名理工女，如今成为一名热爱代码的前端工程师。其中的过程也是颇为丰富，作为记录也好，参考也好，我都想写下来呢。仅供参考哦。\n<!--more-->\n\n## 入门基础学习\n------\n前端基础三剑客（瞎编的）： HTML、CSS、javascript\n\n### 充分利用网络资源\n- 最基础的语法可参考[W3C](http://www.w3school.com.cn/)，这也是一本很好的词典哦\n\n### HTML + CSS\n- [Bootstrap](http://www.bootcss.com/)，大家都在用的样式框架\n- [Font Awesome](http://www.bootcss.com/p/font-awesome/)，图标字体库\n- [jQuery Mobile](http://jquerymobile.com/)，移动web应用程序的框架\n- [jQuery UI](https://jqueryui.com/)，建立在jQuery库上的一组用户界面交互、特效、小部件及主题\n- 大家不妨用的时候也阅读一下这些框架/库的源码，有助于理解CSS特性哦\n\n### HTML5\n- 每一项都值得你去深入探究哦\n  - 用于绘画的canvas元素，可做图片裁剪、创作游戏等等\n  - 用于媒介回放的video和audio元素，可插入音乐和视频哦\n  - 对本地离线存储的更好的支持，离线你的API哈哈\n  - 新的特殊内容元素，比如article、footer、header、nav、section，让你的代码更好懂\n  - 新的表单控件，比如calendar、date、time、email、url、search，记得考虑兼容哦\n  - 实时通信的websocket，建议同时解一下socket.io\n  - 超实用的File API，可以做图片预览等等\n  - 当然少不了sessionStorage和localStorage，可以作为页面间的通讯哦\n\n### CSS3\n- 可以实现超级酷炫的动画效果，还有漂酿的样式哦\n- [w3cPlus](http://www.w3cplus.com/content/css3-gradient)上的CSS3教程不错哦\n  - 背景和边框，好看的按钮和阴影\n  - 文本效果，可以使用自己设计的字体哦\n  - 2D/3D 转换，配合动画和过渡一起使用哦\n  - 动画和过渡效果，快使用酷炫的交互效果吧\n\n### javascript\n- 原生javascript是基础中的基础，但也是能力最强大的主角呀\n- 推荐的书《JavaScript高级程序设计》，《JavaScript 权威指南》，花点钱买本正版吧，收益终身呀\n  - 基础的ECMAScript，js的自由度很高的哦\n  - DOM，若说浏览器是画布，DOM是画布上的内容，javascript就是画笔吧（瞎编+1）\n  - BOM，包括常用的window对象、location对象、history对象等等\n\n## 学会使用和了解框架和库\n-----\n### CSS框架\n- 上面提到的[Bootstrap](http://www.bootcss.com/)，[Font Awesome](http://www.bootcss.com/p/font-awesome/)，[jQuery Mobile](http://jquerymobile.com/)，[jQuery UI](https://jqueryui.com/)都可以去了解看看哦\n\n### LESS/SASS\n- [LESS](http://www.bootcss.com/p/lesscss/)将CSS赋予了动态语言的特性，如变量，继承，运算，函数等\n- [SASS](http://sass.bootcss.com/docs/sass-reference/)让CSS语言更强大、优雅。它允许你使用变量、嵌套规则、mixins、导入等众多功能，并且完全兼容CSS语法\n\n### jQuery库\n- 不得不说这是很强大的js库，曾经在我刚开始工作时帮助我解决了很多问题呢\n- 这里有份[《jQuery API中文文档》](http://www.css88.com/jqapi-1.9/)，查询专用哦\n  - jQuery可以帮忙解决初期的很多问题哦，例如：\n  - 1.消除了JavaScript跨平台兼容问题\n  - 2.丰富的DOM选择器，超便利的$()选择器哦\n  - 3.可以很容易地浏览文档、选择元素、处理事件以及添加效果\n  - 4.ajax操作支持，后面版本的还支持Promise哦\n  - 5.允许开发者定制插件，[jQuery form插件](http://www.cnblogs.com/heyuquan/p/form-plug-async-submit.html)不错哦\n\n### [zepto库](http://www.css88.com/doc/zeptojs_api/)\n- 轻量级的jQuery库，适合移动端\n- 个人觉得了解一下就够了。。除了touch事件有些参考价值，还是jQuery强大多了\n\n\n### MVC/MVVM框架\n- 这是待开拓的一大片领土，每个框架都有自己的特色和优势，很有意思哦\n- 虽然说纷繁琳目，但其实选一个喜欢的用起来就好啦，当然生产环境的话得考虑稳定性、社区、维护这些哦\n- [AngularJS](http://www.apjs.net/)，MVVM\n- [React](http://reactjs.cn/)，MVC的V\n- [Underscore](http://www.bootcss.com/p/underscore/)，JavaScript工具库\n- [Backbone](http://www.css88.com/doc/backbone/)，MVC，基于underscore.js\n- [Vue](http://cn.vuejs.org/)，国人MVVM的VM\n- [Avalon](http://avalonjs.github.io/)，国人MVVM\n\n\n## 前端开发工具\n-----\n### 编辑器\n- DW(Dreamweaver)挺老了，比较重量级\n- Sublime Text，很多人在用的\n- Hbuilder，本人在用，感觉还不错\n- Vim，听说很好用\n\n### Chrome开发者工具/Firebug\n- 浏览器调试工具，很强大哦，只需在浏览器右键-检查就能打开啦\n\n### Gulp/Grunt\n- 基于任务的javascript命令行构建工具\n- 用于任务自动化，创建工作区等\n\n### Mocha/Jasmine/Karma\n- Mocha/Jasmine是常用的前端测试框架\n- Karma是驱动测试的Runner\n\n### 其它前端工具\n- 这里有篇[《各式 Web 前端開發工具整理》](https://github.com/doggy8088/frontend-tools)\n\n\n\n## 成为一枚优质前端工程师\n-----\n### 注意代码规范\n- 良好的代码规范对团队合作很有帮助哦\n- 本骚年在这方面有警觉，但还是欠缺实践呢...\n\n### 针对性研究\n- [《理解Promise》](https://blog.coding.net/blog/how-do-promises-work)\n- [《XMLHttpRequest Level 2使用指南》](http://www.ruanyifeng.com/blog/2012/09/xmlhttprequest_level_2.html)\n- [《浏览器的渲染原理简介》](http://coolshell.cn/articles/9666.html)\n- [《Javascript装载和执行》](http://coolshell.cn/articles/9749.html#jtss-tsina)\n- [《一个对前端模板技术的全面总结》](http://www.html-js.com/article/Regularjs-Chinese-guidelines-for-a-comprehensive-summary-of-the-front-template-technology?utm_source=tuicool&utm_medium=referral)\n- [《浅谈HTML5单页面架构》](http://www.cnblogs.com/kenkofox/p/4643760.html)\n\n### 深入理解库/框架原理\n- 学习研究源代码是个很好的爱好哦，对个人提升也很有帮助呢\n- 当然像Bootstrap这样的优秀样式框架很值得阅读，建议直接翻开源码，配合浏览器调试工具一起学习吧\n- [《深入理解JavaScript系列》](http://www.sxrczx.com/docs/js/2286877.html)\n- [《jQuery源码分析系列》](http://www.cnblogs.com/aaronjs/p/3279314.html)\n- [《触碰jQuery：AJAX异步详解》](http://www.cnblogs.com/heyuquan/archive/2013/05/13/3076465.html)\n- React精华之虚拟DOM：[《如何实现一个Virtual DOM算法》](https://github.com/livoras/blog/issues/13)\n- [《Angular学习笔记》](https://www.zouyesheng.com/angular.html)\n- [《Angular源码分析系列》](http://www.html-js.com/article/2145)\n\n### 了解后台工作\n- 了解和你一起合作的小伙伴们也是很重要的哦\n- PHP、JAVA、Nodejs等服务端语言\n- MySQL、MongoDB等数据库\n\n## 培养你的热情\n-----\n你热爱前端吗？不清楚？\n那你喜欢逻辑吗，喜欢设计吗，想要将自己大大的脑洞里面装的所有有趣的都分享出来吗？\n我喜欢思考，喜欢想象，热爱学习，沉迷那种把想法写成成果的喜悦。\n如果你的热情跟不上，可以尝试一下设计些小项目：\n### 博客\n这是最大众的选择，但即使是这样普通的网页，依然可以刷上你喜欢的颜色，添加有趣的装饰，贴一些你的想法，分享自己的喜怒哀乐。\n还有什么比拥有一个专属自己的空间更值得开心呢？\n- 搭建方式： \n  - 1.使用现有工具快速搭建。可选择使用wordpress（基于PHP），或者是hexo(基于nodejs)。网上google教程，一搜一大堆，度娘和谷哥无论生活还是学习都是一强力工具呢（很可惜我的认知能力就到这里了。。）\n  - 2.网上下载一些喜欢的博客资源，然后根据自己的爱好进行修改\n  - 3.从基础开始，自己搭建。可以从静态页面开始，用最基础的HTML+CSS+javascript(jQuery)来编写你的静态页面吧。一步步实现自己的设计还是个很有成就感的事情呢。[看我用静态页面和PHP搭的很多bug的博客](http://www.godbasin.com/)\n\n### 游戏\n当然首先你自己得是个爱玩游戏的骚年。相信你会对自己在游戏中加入的小想法和念头沾沾自喜的。\n- 编写选择：\n  - 1.idea不足的时候，可以选择自己喜欢的一款游戏，使用前端去编写。\n  - 2.又或者可以下载已有的游戏，改成成自己喜欢的样子。\n  - 3.脑洞够大的你，当然要写一份自己设计的游戏啦。\n看我的[《打嗝的巴士》](http://o969gatx6.bkt.clouddn.com/index.html)和[《弹珠》](http://o969lbf8k.bkt.clouddn.com/ballt.html)\n\n### 动态页面\n一个简单但却动效十足的交互页面也是很有意思的哦。可参考[《酷炫HTML5》](http://o95scrds5.bkt.clouddn.com/index.html)\n当然这跟HTML5没多大关系，主要用的CSS3，不得不说CSS3太好玩了。\n\n### 静态网页\n静态网页可能没有前面的有意思，但也不妨为一种练习设计和基础的方式。\n当然酷酷的你肯定可以设计漂亮的静态页面，又或者你可以用多种库和框架练练手呢。\n参考入门初期写的一些网页： [《被删动漫》](http://o95u5v08d.bkt.clouddn.com/index.html)和[《Restaurant》](http://o95u208de.bkt.clouddn.com/index.html)\n\n## 结束语\n-----\n一年多来，我学到的也就这篇文章差不多的东西。\n前端很繁荣呢，还有很多很多的领域等待开拓和研究，相信你和我一样都满怀着好奇心和期待呢。\n每天期待去上班的，不能只是我一个呀。让你的工作成为你美好生活的一部分吧。","source":"_posts/front-end-getting-started.md","raw":"---\ntitle: 我的前端入门之路\ndate: 2016-06-24 21:30:30\ncategories: web乱炖\ntags: 分享\n---\n曾经作为物理学院的一名理工女，如今成为一名热爱代码的前端工程师。其中的过程也是颇为丰富，作为记录也好，参考也好，我都想写下来呢。仅供参考哦。\n<!--more-->\n\n## 入门基础学习\n------\n前端基础三剑客（瞎编的）： HTML、CSS、javascript\n\n### 充分利用网络资源\n- 最基础的语法可参考[W3C](http://www.w3school.com.cn/)，这也是一本很好的词典哦\n\n### HTML + CSS\n- [Bootstrap](http://www.bootcss.com/)，大家都在用的样式框架\n- [Font Awesome](http://www.bootcss.com/p/font-awesome/)，图标字体库\n- [jQuery Mobile](http://jquerymobile.com/)，移动web应用程序的框架\n- [jQuery UI](https://jqueryui.com/)，建立在jQuery库上的一组用户界面交互、特效、小部件及主题\n- 大家不妨用的时候也阅读一下这些框架/库的源码，有助于理解CSS特性哦\n\n### HTML5\n- 每一项都值得你去深入探究哦\n  - 用于绘画的canvas元素，可做图片裁剪、创作游戏等等\n  - 用于媒介回放的video和audio元素，可插入音乐和视频哦\n  - 对本地离线存储的更好的支持，离线你的API哈哈\n  - 新的特殊内容元素，比如article、footer、header、nav、section，让你的代码更好懂\n  - 新的表单控件，比如calendar、date、time、email、url、search，记得考虑兼容哦\n  - 实时通信的websocket，建议同时解一下socket.io\n  - 超实用的File API，可以做图片预览等等\n  - 当然少不了sessionStorage和localStorage，可以作为页面间的通讯哦\n\n### CSS3\n- 可以实现超级酷炫的动画效果，还有漂酿的样式哦\n- [w3cPlus](http://www.w3cplus.com/content/css3-gradient)上的CSS3教程不错哦\n  - 背景和边框，好看的按钮和阴影\n  - 文本效果，可以使用自己设计的字体哦\n  - 2D/3D 转换，配合动画和过渡一起使用哦\n  - 动画和过渡效果，快使用酷炫的交互效果吧\n\n### javascript\n- 原生javascript是基础中的基础，但也是能力最强大的主角呀\n- 推荐的书《JavaScript高级程序设计》，《JavaScript 权威指南》，花点钱买本正版吧，收益终身呀\n  - 基础的ECMAScript，js的自由度很高的哦\n  - DOM，若说浏览器是画布，DOM是画布上的内容，javascript就是画笔吧（瞎编+1）\n  - BOM，包括常用的window对象、location对象、history对象等等\n\n## 学会使用和了解框架和库\n-----\n### CSS框架\n- 上面提到的[Bootstrap](http://www.bootcss.com/)，[Font Awesome](http://www.bootcss.com/p/font-awesome/)，[jQuery Mobile](http://jquerymobile.com/)，[jQuery UI](https://jqueryui.com/)都可以去了解看看哦\n\n### LESS/SASS\n- [LESS](http://www.bootcss.com/p/lesscss/)将CSS赋予了动态语言的特性，如变量，继承，运算，函数等\n- [SASS](http://sass.bootcss.com/docs/sass-reference/)让CSS语言更强大、优雅。它允许你使用变量、嵌套规则、mixins、导入等众多功能，并且完全兼容CSS语法\n\n### jQuery库\n- 不得不说这是很强大的js库，曾经在我刚开始工作时帮助我解决了很多问题呢\n- 这里有份[《jQuery API中文文档》](http://www.css88.com/jqapi-1.9/)，查询专用哦\n  - jQuery可以帮忙解决初期的很多问题哦，例如：\n  - 1.消除了JavaScript跨平台兼容问题\n  - 2.丰富的DOM选择器，超便利的$()选择器哦\n  - 3.可以很容易地浏览文档、选择元素、处理事件以及添加效果\n  - 4.ajax操作支持，后面版本的还支持Promise哦\n  - 5.允许开发者定制插件，[jQuery form插件](http://www.cnblogs.com/heyuquan/p/form-plug-async-submit.html)不错哦\n\n### [zepto库](http://www.css88.com/doc/zeptojs_api/)\n- 轻量级的jQuery库，适合移动端\n- 个人觉得了解一下就够了。。除了touch事件有些参考价值，还是jQuery强大多了\n\n\n### MVC/MVVM框架\n- 这是待开拓的一大片领土，每个框架都有自己的特色和优势，很有意思哦\n- 虽然说纷繁琳目，但其实选一个喜欢的用起来就好啦，当然生产环境的话得考虑稳定性、社区、维护这些哦\n- [AngularJS](http://www.apjs.net/)，MVVM\n- [React](http://reactjs.cn/)，MVC的V\n- [Underscore](http://www.bootcss.com/p/underscore/)，JavaScript工具库\n- [Backbone](http://www.css88.com/doc/backbone/)，MVC，基于underscore.js\n- [Vue](http://cn.vuejs.org/)，国人MVVM的VM\n- [Avalon](http://avalonjs.github.io/)，国人MVVM\n\n\n## 前端开发工具\n-----\n### 编辑器\n- DW(Dreamweaver)挺老了，比较重量级\n- Sublime Text，很多人在用的\n- Hbuilder，本人在用，感觉还不错\n- Vim，听说很好用\n\n### Chrome开发者工具/Firebug\n- 浏览器调试工具，很强大哦，只需在浏览器右键-检查就能打开啦\n\n### Gulp/Grunt\n- 基于任务的javascript命令行构建工具\n- 用于任务自动化，创建工作区等\n\n### Mocha/Jasmine/Karma\n- Mocha/Jasmine是常用的前端测试框架\n- Karma是驱动测试的Runner\n\n### 其它前端工具\n- 这里有篇[《各式 Web 前端開發工具整理》](https://github.com/doggy8088/frontend-tools)\n\n\n\n## 成为一枚优质前端工程师\n-----\n### 注意代码规范\n- 良好的代码规范对团队合作很有帮助哦\n- 本骚年在这方面有警觉，但还是欠缺实践呢...\n\n### 针对性研究\n- [《理解Promise》](https://blog.coding.net/blog/how-do-promises-work)\n- [《XMLHttpRequest Level 2使用指南》](http://www.ruanyifeng.com/blog/2012/09/xmlhttprequest_level_2.html)\n- [《浏览器的渲染原理简介》](http://coolshell.cn/articles/9666.html)\n- [《Javascript装载和执行》](http://coolshell.cn/articles/9749.html#jtss-tsina)\n- [《一个对前端模板技术的全面总结》](http://www.html-js.com/article/Regularjs-Chinese-guidelines-for-a-comprehensive-summary-of-the-front-template-technology?utm_source=tuicool&utm_medium=referral)\n- [《浅谈HTML5单页面架构》](http://www.cnblogs.com/kenkofox/p/4643760.html)\n\n### 深入理解库/框架原理\n- 学习研究源代码是个很好的爱好哦，对个人提升也很有帮助呢\n- 当然像Bootstrap这样的优秀样式框架很值得阅读，建议直接翻开源码，配合浏览器调试工具一起学习吧\n- [《深入理解JavaScript系列》](http://www.sxrczx.com/docs/js/2286877.html)\n- [《jQuery源码分析系列》](http://www.cnblogs.com/aaronjs/p/3279314.html)\n- [《触碰jQuery：AJAX异步详解》](http://www.cnblogs.com/heyuquan/archive/2013/05/13/3076465.html)\n- React精华之虚拟DOM：[《如何实现一个Virtual DOM算法》](https://github.com/livoras/blog/issues/13)\n- [《Angular学习笔记》](https://www.zouyesheng.com/angular.html)\n- [《Angular源码分析系列》](http://www.html-js.com/article/2145)\n\n### 了解后台工作\n- 了解和你一起合作的小伙伴们也是很重要的哦\n- PHP、JAVA、Nodejs等服务端语言\n- MySQL、MongoDB等数据库\n\n## 培养你的热情\n-----\n你热爱前端吗？不清楚？\n那你喜欢逻辑吗，喜欢设计吗，想要将自己大大的脑洞里面装的所有有趣的都分享出来吗？\n我喜欢思考，喜欢想象，热爱学习，沉迷那种把想法写成成果的喜悦。\n如果你的热情跟不上，可以尝试一下设计些小项目：\n### 博客\n这是最大众的选择，但即使是这样普通的网页，依然可以刷上你喜欢的颜色，添加有趣的装饰，贴一些你的想法，分享自己的喜怒哀乐。\n还有什么比拥有一个专属自己的空间更值得开心呢？\n- 搭建方式： \n  - 1.使用现有工具快速搭建。可选择使用wordpress（基于PHP），或者是hexo(基于nodejs)。网上google教程，一搜一大堆，度娘和谷哥无论生活还是学习都是一强力工具呢（很可惜我的认知能力就到这里了。。）\n  - 2.网上下载一些喜欢的博客资源，然后根据自己的爱好进行修改\n  - 3.从基础开始，自己搭建。可以从静态页面开始，用最基础的HTML+CSS+javascript(jQuery)来编写你的静态页面吧。一步步实现自己的设计还是个很有成就感的事情呢。[看我用静态页面和PHP搭的很多bug的博客](http://www.godbasin.com/)\n\n### 游戏\n当然首先你自己得是个爱玩游戏的骚年。相信你会对自己在游戏中加入的小想法和念头沾沾自喜的。\n- 编写选择：\n  - 1.idea不足的时候，可以选择自己喜欢的一款游戏，使用前端去编写。\n  - 2.又或者可以下载已有的游戏，改成成自己喜欢的样子。\n  - 3.脑洞够大的你，当然要写一份自己设计的游戏啦。\n看我的[《打嗝的巴士》](http://o969gatx6.bkt.clouddn.com/index.html)和[《弹珠》](http://o969lbf8k.bkt.clouddn.com/ballt.html)\n\n### 动态页面\n一个简单但却动效十足的交互页面也是很有意思的哦。可参考[《酷炫HTML5》](http://o95scrds5.bkt.clouddn.com/index.html)\n当然这跟HTML5没多大关系，主要用的CSS3，不得不说CSS3太好玩了。\n\n### 静态网页\n静态网页可能没有前面的有意思，但也不妨为一种练习设计和基础的方式。\n当然酷酷的你肯定可以设计漂亮的静态页面，又或者你可以用多种库和框架练练手呢。\n参考入门初期写的一些网页： [《被删动漫》](http://o95u5v08d.bkt.clouddn.com/index.html)和[《Restaurant》](http://o95u208de.bkt.clouddn.com/index.html)\n\n## 结束语\n-----\n一年多来，我学到的也就这篇文章差不多的东西。\n前端很繁荣呢，还有很多很多的领域等待开拓和研究，相信你和我一样都满怀着好奇心和期待呢。\n每天期待去上班的，不能只是我一个呀。让你的工作成为你美好生活的一部分吧。","slug":"front-end-getting-started","published":1,"updated":"2016-06-24T13:54:25.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cipv4ddel0003q0l5425nof5h","content":"<p>曾经作为物理学院的一名理工女，如今成为一名热爱代码的前端工程师。其中的过程也是颇为丰富，作为记录也好，参考也好，我都想写下来呢。仅供参考哦。<br><a id=\"more\"></a></p>\n<h2 id=\"入门基础学习\"><a href=\"#入门基础学习\" class=\"headerlink\" title=\"入门基础学习\"></a>入门基础学习</h2><hr>\n<p>前端基础三剑客（瞎编的）： HTML、CSS、javascript</p>\n<h3 id=\"充分利用网络资源\"><a href=\"#充分利用网络资源\" class=\"headerlink\" title=\"充分利用网络资源\"></a>充分利用网络资源</h3><ul>\n<li>最基础的语法可参考<a href=\"http://www.w3school.com.cn/\" target=\"_blank\" rel=\"external\">W3C</a>，这也是一本很好的词典哦</li>\n</ul>\n<h3 id=\"HTML-CSS\"><a href=\"#HTML-CSS\" class=\"headerlink\" title=\"HTML + CSS\"></a>HTML + CSS</h3><ul>\n<li><a href=\"http://www.bootcss.com/\" target=\"_blank\" rel=\"external\">Bootstrap</a>，大家都在用的样式框架</li>\n<li><a href=\"http://www.bootcss.com/p/font-awesome/\" target=\"_blank\" rel=\"external\">Font Awesome</a>，图标字体库</li>\n<li><a href=\"http://jquerymobile.com/\" target=\"_blank\" rel=\"external\">jQuery Mobile</a>，移动web应用程序的框架</li>\n<li><a href=\"https://jqueryui.com/\" target=\"_blank\" rel=\"external\">jQuery UI</a>，建立在jQuery库上的一组用户界面交互、特效、小部件及主题</li>\n<li>大家不妨用的时候也阅读一下这些框架/库的源码，有助于理解CSS特性哦</li>\n</ul>\n<h3 id=\"HTML5\"><a href=\"#HTML5\" class=\"headerlink\" title=\"HTML5\"></a>HTML5</h3><ul>\n<li>每一项都值得你去深入探究哦<ul>\n<li>用于绘画的canvas元素，可做图片裁剪、创作游戏等等</li>\n<li>用于媒介回放的video和audio元素，可插入音乐和视频哦</li>\n<li>对本地离线存储的更好的支持，离线你的API哈哈</li>\n<li>新的特殊内容元素，比如article、footer、header、nav、section，让你的代码更好懂</li>\n<li>新的表单控件，比如calendar、date、time、email、url、search，记得考虑兼容哦</li>\n<li>实时通信的websocket，建议同时解一下socket.io</li>\n<li>超实用的File API，可以做图片预览等等</li>\n<li>当然少不了sessionStorage和localStorage，可以作为页面间的通讯哦</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"CSS3\"><a href=\"#CSS3\" class=\"headerlink\" title=\"CSS3\"></a>CSS3</h3><ul>\n<li>可以实现超级酷炫的动画效果，还有漂酿的样式哦</li>\n<li><a href=\"http://www.w3cplus.com/content/css3-gradient\" target=\"_blank\" rel=\"external\">w3cPlus</a>上的CSS3教程不错哦<ul>\n<li>背景和边框，好看的按钮和阴影</li>\n<li>文本效果，可以使用自己设计的字体哦</li>\n<li>2D/3D 转换，配合动画和过渡一起使用哦</li>\n<li>动画和过渡效果，快使用酷炫的交互效果吧</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"javascript\"><a href=\"#javascript\" class=\"headerlink\" title=\"javascript\"></a>javascript</h3><ul>\n<li>原生javascript是基础中的基础，但也是能力最强大的主角呀</li>\n<li>推荐的书《JavaScript高级程序设计》，《JavaScript 权威指南》，花点钱买本正版吧，收益终身呀<ul>\n<li>基础的ECMAScript，js的自由度很高的哦</li>\n<li>DOM，若说浏览器是画布，DOM是画布上的内容，javascript就是画笔吧（瞎编+1）</li>\n<li>BOM，包括常用的window对象、location对象、history对象等等</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"学会使用和了解框架和库\"><a href=\"#学会使用和了解框架和库\" class=\"headerlink\" title=\"学会使用和了解框架和库\"></a>学会使用和了解框架和库</h2><hr>\n<h3 id=\"CSS框架\"><a href=\"#CSS框架\" class=\"headerlink\" title=\"CSS框架\"></a>CSS框架</h3><ul>\n<li>上面提到的<a href=\"http://www.bootcss.com/\" target=\"_blank\" rel=\"external\">Bootstrap</a>，<a href=\"http://www.bootcss.com/p/font-awesome/\" target=\"_blank\" rel=\"external\">Font Awesome</a>，<a href=\"http://jquerymobile.com/\" target=\"_blank\" rel=\"external\">jQuery Mobile</a>，<a href=\"https://jqueryui.com/\" target=\"_blank\" rel=\"external\">jQuery UI</a>都可以去了解看看哦</li>\n</ul>\n<h3 id=\"LESS-SASS\"><a href=\"#LESS-SASS\" class=\"headerlink\" title=\"LESS/SASS\"></a>LESS/SASS</h3><ul>\n<li><a href=\"http://www.bootcss.com/p/lesscss/\" target=\"_blank\" rel=\"external\">LESS</a>将CSS赋予了动态语言的特性，如变量，继承，运算，函数等</li>\n<li><a href=\"http://sass.bootcss.com/docs/sass-reference/\" target=\"_blank\" rel=\"external\">SASS</a>让CSS语言更强大、优雅。它允许你使用变量、嵌套规则、mixins、导入等众多功能，并且完全兼容CSS语法</li>\n</ul>\n<h3 id=\"jQuery库\"><a href=\"#jQuery库\" class=\"headerlink\" title=\"jQuery库\"></a>jQuery库</h3><ul>\n<li>不得不说这是很强大的js库，曾经在我刚开始工作时帮助我解决了很多问题呢</li>\n<li>这里有份<a href=\"http://www.css88.com/jqapi-1.9/\" target=\"_blank\" rel=\"external\">《jQuery API中文文档》</a>，查询专用哦<ul>\n<li>jQuery可以帮忙解决初期的很多问题哦，例如：</li>\n<li>1.消除了JavaScript跨平台兼容问题</li>\n<li>2.丰富的DOM选择器，超便利的$()选择器哦</li>\n<li>3.可以很容易地浏览文档、选择元素、处理事件以及添加效果</li>\n<li>4.ajax操作支持，后面版本的还支持Promise哦</li>\n<li>5.允许开发者定制插件，<a href=\"http://www.cnblogs.com/heyuquan/p/form-plug-async-submit.html\" target=\"_blank\" rel=\"external\">jQuery form插件</a>不错哦</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"zepto库\"><a href=\"#zepto库\" class=\"headerlink\" title=\"zepto库\"></a><a href=\"http://www.css88.com/doc/zeptojs_api/\" target=\"_blank\" rel=\"external\">zepto库</a></h3><ul>\n<li>轻量级的jQuery库，适合移动端</li>\n<li>个人觉得了解一下就够了。。除了touch事件有些参考价值，还是jQuery强大多了</li>\n</ul>\n<h3 id=\"MVC-MVVM框架\"><a href=\"#MVC-MVVM框架\" class=\"headerlink\" title=\"MVC/MVVM框架\"></a>MVC/MVVM框架</h3><ul>\n<li>这是待开拓的一大片领土，每个框架都有自己的特色和优势，很有意思哦</li>\n<li>虽然说纷繁琳目，但其实选一个喜欢的用起来就好啦，当然生产环境的话得考虑稳定性、社区、维护这些哦</li>\n<li><a href=\"http://www.apjs.net/\" target=\"_blank\" rel=\"external\">AngularJS</a>，MVVM</li>\n<li><a href=\"http://reactjs.cn/\" target=\"_blank\" rel=\"external\">React</a>，MVC的V</li>\n<li><a href=\"http://www.bootcss.com/p/underscore/\" target=\"_blank\" rel=\"external\">Underscore</a>，JavaScript工具库</li>\n<li><a href=\"http://www.css88.com/doc/backbone/\" target=\"_blank\" rel=\"external\">Backbone</a>，MVC，基于underscore.js</li>\n<li><a href=\"http://cn.vuejs.org/\" target=\"_blank\" rel=\"external\">Vue</a>，国人MVVM的VM</li>\n<li><a href=\"http://avalonjs.github.io/\" target=\"_blank\" rel=\"external\">Avalon</a>，国人MVVM</li>\n</ul>\n<h2 id=\"前端开发工具\"><a href=\"#前端开发工具\" class=\"headerlink\" title=\"前端开发工具\"></a>前端开发工具</h2><hr>\n<h3 id=\"编辑器\"><a href=\"#编辑器\" class=\"headerlink\" title=\"编辑器\"></a>编辑器</h3><ul>\n<li>DW(Dreamweaver)挺老了，比较重量级</li>\n<li>Sublime Text，很多人在用的</li>\n<li>Hbuilder，本人在用，感觉还不错</li>\n<li>Vim，听说很好用</li>\n</ul>\n<h3 id=\"Chrome开发者工具-Firebug\"><a href=\"#Chrome开发者工具-Firebug\" class=\"headerlink\" title=\"Chrome开发者工具/Firebug\"></a>Chrome开发者工具/Firebug</h3><ul>\n<li>浏览器调试工具，很强大哦，只需在浏览器右键-检查就能打开啦</li>\n</ul>\n<h3 id=\"Gulp-Grunt\"><a href=\"#Gulp-Grunt\" class=\"headerlink\" title=\"Gulp/Grunt\"></a>Gulp/Grunt</h3><ul>\n<li>基于任务的javascript命令行构建工具</li>\n<li>用于任务自动化，创建工作区等</li>\n</ul>\n<h3 id=\"Mocha-Jasmine-Karma\"><a href=\"#Mocha-Jasmine-Karma\" class=\"headerlink\" title=\"Mocha/Jasmine/Karma\"></a>Mocha/Jasmine/Karma</h3><ul>\n<li>Mocha/Jasmine是常用的前端测试框架</li>\n<li>Karma是驱动测试的Runner</li>\n</ul>\n<h3 id=\"其它前端工具\"><a href=\"#其它前端工具\" class=\"headerlink\" title=\"其它前端工具\"></a>其它前端工具</h3><ul>\n<li>这里有篇<a href=\"https://github.com/doggy8088/frontend-tools\" target=\"_blank\" rel=\"external\">《各式 Web 前端開發工具整理》</a></li>\n</ul>\n<h2 id=\"成为一枚优质前端工程师\"><a href=\"#成为一枚优质前端工程师\" class=\"headerlink\" title=\"成为一枚优质前端工程师\"></a>成为一枚优质前端工程师</h2><hr>\n<h3 id=\"注意代码规范\"><a href=\"#注意代码规范\" class=\"headerlink\" title=\"注意代码规范\"></a>注意代码规范</h3><ul>\n<li>良好的代码规范对团队合作很有帮助哦</li>\n<li>本骚年在这方面有警觉，但还是欠缺实践呢…</li>\n</ul>\n<h3 id=\"针对性研究\"><a href=\"#针对性研究\" class=\"headerlink\" title=\"针对性研究\"></a>针对性研究</h3><ul>\n<li><a href=\"https://blog.coding.net/blog/how-do-promises-work\" target=\"_blank\" rel=\"external\">《理解Promise》</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2012/09/xmlhttprequest_level_2.html\" target=\"_blank\" rel=\"external\">《XMLHttpRequest Level 2使用指南》</a></li>\n<li><a href=\"http://coolshell.cn/articles/9666.html\" target=\"_blank\" rel=\"external\">《浏览器的渲染原理简介》</a></li>\n<li><a href=\"http://coolshell.cn/articles/9749.html#jtss-tsina\" target=\"_blank\" rel=\"external\">《Javascript装载和执行》</a></li>\n<li><a href=\"http://www.html-js.com/article/Regularjs-Chinese-guidelines-for-a-comprehensive-summary-of-the-front-template-technology?utm_source=tuicool&amp;utm_medium=referral\" target=\"_blank\" rel=\"external\">《一个对前端模板技术的全面总结》</a></li>\n<li><a href=\"http://www.cnblogs.com/kenkofox/p/4643760.html\" target=\"_blank\" rel=\"external\">《浅谈HTML5单页面架构》</a></li>\n</ul>\n<h3 id=\"深入理解库-框架原理\"><a href=\"#深入理解库-框架原理\" class=\"headerlink\" title=\"深入理解库/框架原理\"></a>深入理解库/框架原理</h3><ul>\n<li>学习研究源代码是个很好的爱好哦，对个人提升也很有帮助呢</li>\n<li>当然像Bootstrap这样的优秀样式框架很值得阅读，建议直接翻开源码，配合浏览器调试工具一起学习吧</li>\n<li><a href=\"http://www.sxrczx.com/docs/js/2286877.html\" target=\"_blank\" rel=\"external\">《深入理解JavaScript系列》</a></li>\n<li><a href=\"http://www.cnblogs.com/aaronjs/p/3279314.html\" target=\"_blank\" rel=\"external\">《jQuery源码分析系列》</a></li>\n<li><a href=\"http://www.cnblogs.com/heyuquan/archive/2013/05/13/3076465.html\" target=\"_blank\" rel=\"external\">《触碰jQuery：AJAX异步详解》</a></li>\n<li>React精华之虚拟DOM：<a href=\"https://github.com/livoras/blog/issues/13\" target=\"_blank\" rel=\"external\">《如何实现一个Virtual DOM算法》</a></li>\n<li><a href=\"https://www.zouyesheng.com/angular.html\" target=\"_blank\" rel=\"external\">《Angular学习笔记》</a></li>\n<li><a href=\"http://www.html-js.com/article/2145\" target=\"_blank\" rel=\"external\">《Angular源码分析系列》</a></li>\n</ul>\n<h3 id=\"了解后台工作\"><a href=\"#了解后台工作\" class=\"headerlink\" title=\"了解后台工作\"></a>了解后台工作</h3><ul>\n<li>了解和你一起合作的小伙伴们也是很重要的哦</li>\n<li>PHP、JAVA、Nodejs等服务端语言</li>\n<li>MySQL、MongoDB等数据库</li>\n</ul>\n<h2 id=\"培养你的热情\"><a href=\"#培养你的热情\" class=\"headerlink\" title=\"培养你的热情\"></a>培养你的热情</h2><hr>\n<p>你热爱前端吗？不清楚？<br>那你喜欢逻辑吗，喜欢设计吗，想要将自己大大的脑洞里面装的所有有趣的都分享出来吗？<br>我喜欢思考，喜欢想象，热爱学习，沉迷那种把想法写成成果的喜悦。<br>如果你的热情跟不上，可以尝试一下设计些小项目：</p>\n<h3 id=\"博客\"><a href=\"#博客\" class=\"headerlink\" title=\"博客\"></a>博客</h3><p>这是最大众的选择，但即使是这样普通的网页，依然可以刷上你喜欢的颜色，添加有趣的装饰，贴一些你的想法，分享自己的喜怒哀乐。<br>还有什么比拥有一个专属自己的空间更值得开心呢？</p>\n<ul>\n<li>搭建方式： <ul>\n<li>1.使用现有工具快速搭建。可选择使用wordpress（基于PHP），或者是hexo(基于nodejs)。网上google教程，一搜一大堆，度娘和谷哥无论生活还是学习都是一强力工具呢（很可惜我的认知能力就到这里了。。）</li>\n<li>2.网上下载一些喜欢的博客资源，然后根据自己的爱好进行修改</li>\n<li>3.从基础开始，自己搭建。可以从静态页面开始，用最基础的HTML+CSS+javascript(jQuery)来编写你的静态页面吧。一步步实现自己的设计还是个很有成就感的事情呢。<a href=\"http://www.godbasin.com/\" target=\"_blank\" rel=\"external\">看我用静态页面和PHP搭的很多bug的博客</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"游戏\"><a href=\"#游戏\" class=\"headerlink\" title=\"游戏\"></a>游戏</h3><p>当然首先你自己得是个爱玩游戏的骚年。相信你会对自己在游戏中加入的小想法和念头沾沾自喜的。</p>\n<ul>\n<li>编写选择：<ul>\n<li>1.idea不足的时候，可以选择自己喜欢的一款游戏，使用前端去编写。</li>\n<li>2.又或者可以下载已有的游戏，改成成自己喜欢的样子。</li>\n<li>3.脑洞够大的你，当然要写一份自己设计的游戏啦。<br>看我的<a href=\"http://o969gatx6.bkt.clouddn.com/index.html\" target=\"_blank\" rel=\"external\">《打嗝的巴士》</a>和<a href=\"http://o969lbf8k.bkt.clouddn.com/ballt.html\" target=\"_blank\" rel=\"external\">《弹珠》</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"动态页面\"><a href=\"#动态页面\" class=\"headerlink\" title=\"动态页面\"></a>动态页面</h3><p>一个简单但却动效十足的交互页面也是很有意思的哦。可参考<a href=\"http://o95scrds5.bkt.clouddn.com/index.html\" target=\"_blank\" rel=\"external\">《酷炫HTML5》</a><br>当然这跟HTML5没多大关系，主要用的CSS3，不得不说CSS3太好玩了。</p>\n<h3 id=\"静态网页\"><a href=\"#静态网页\" class=\"headerlink\" title=\"静态网页\"></a>静态网页</h3><p>静态网页可能没有前面的有意思，但也不妨为一种练习设计和基础的方式。<br>当然酷酷的你肯定可以设计漂亮的静态页面，又或者你可以用多种库和框架练练手呢。<br>参考入门初期写的一些网页： <a href=\"http://o95u5v08d.bkt.clouddn.com/index.html\" target=\"_blank\" rel=\"external\">《被删动漫》</a>和<a href=\"http://o95u208de.bkt.clouddn.com/index.html\" target=\"_blank\" rel=\"external\">《Restaurant》</a></p>\n<h2 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h2><hr>\n<p>一年多来，我学到的也就这篇文章差不多的东西。<br>前端很繁荣呢，还有很多很多的领域等待开拓和研究，相信你和我一样都满怀着好奇心和期待呢。<br>每天期待去上班的，不能只是我一个呀。让你的工作成为你美好生活的一部分吧。</p>\n","excerpt":"<p>曾经作为物理学院的一名理工女，如今成为一名热爱代码的前端工程师。其中的过程也是颇为丰富，作为记录也好，参考也好，我都想写下来呢。仅供参考哦。<br>","more":"</p>\n<h2 id=\"入门基础学习\"><a href=\"#入门基础学习\" class=\"headerlink\" title=\"入门基础学习\"></a>入门基础学习</h2><hr>\n<p>前端基础三剑客（瞎编的）： HTML、CSS、javascript</p>\n<h3 id=\"充分利用网络资源\"><a href=\"#充分利用网络资源\" class=\"headerlink\" title=\"充分利用网络资源\"></a>充分利用网络资源</h3><ul>\n<li>最基础的语法可参考<a href=\"http://www.w3school.com.cn/\">W3C</a>，这也是一本很好的词典哦</li>\n</ul>\n<h3 id=\"HTML-CSS\"><a href=\"#HTML-CSS\" class=\"headerlink\" title=\"HTML + CSS\"></a>HTML + CSS</h3><ul>\n<li><a href=\"http://www.bootcss.com/\">Bootstrap</a>，大家都在用的样式框架</li>\n<li><a href=\"http://www.bootcss.com/p/font-awesome/\">Font Awesome</a>，图标字体库</li>\n<li><a href=\"http://jquerymobile.com/\">jQuery Mobile</a>，移动web应用程序的框架</li>\n<li><a href=\"https://jqueryui.com/\">jQuery UI</a>，建立在jQuery库上的一组用户界面交互、特效、小部件及主题</li>\n<li>大家不妨用的时候也阅读一下这些框架/库的源码，有助于理解CSS特性哦</li>\n</ul>\n<h3 id=\"HTML5\"><a href=\"#HTML5\" class=\"headerlink\" title=\"HTML5\"></a>HTML5</h3><ul>\n<li>每一项都值得你去深入探究哦<ul>\n<li>用于绘画的canvas元素，可做图片裁剪、创作游戏等等</li>\n<li>用于媒介回放的video和audio元素，可插入音乐和视频哦</li>\n<li>对本地离线存储的更好的支持，离线你的API哈哈</li>\n<li>新的特殊内容元素，比如article、footer、header、nav、section，让你的代码更好懂</li>\n<li>新的表单控件，比如calendar、date、time、email、url、search，记得考虑兼容哦</li>\n<li>实时通信的websocket，建议同时解一下socket.io</li>\n<li>超实用的File API，可以做图片预览等等</li>\n<li>当然少不了sessionStorage和localStorage，可以作为页面间的通讯哦</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"CSS3\"><a href=\"#CSS3\" class=\"headerlink\" title=\"CSS3\"></a>CSS3</h3><ul>\n<li>可以实现超级酷炫的动画效果，还有漂酿的样式哦</li>\n<li><a href=\"http://www.w3cplus.com/content/css3-gradient\">w3cPlus</a>上的CSS3教程不错哦<ul>\n<li>背景和边框，好看的按钮和阴影</li>\n<li>文本效果，可以使用自己设计的字体哦</li>\n<li>2D/3D 转换，配合动画和过渡一起使用哦</li>\n<li>动画和过渡效果，快使用酷炫的交互效果吧</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"javascript\"><a href=\"#javascript\" class=\"headerlink\" title=\"javascript\"></a>javascript</h3><ul>\n<li>原生javascript是基础中的基础，但也是能力最强大的主角呀</li>\n<li>推荐的书《JavaScript高级程序设计》，《JavaScript 权威指南》，花点钱买本正版吧，收益终身呀<ul>\n<li>基础的ECMAScript，js的自由度很高的哦</li>\n<li>DOM，若说浏览器是画布，DOM是画布上的内容，javascript就是画笔吧（瞎编+1）</li>\n<li>BOM，包括常用的window对象、location对象、history对象等等</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"学会使用和了解框架和库\"><a href=\"#学会使用和了解框架和库\" class=\"headerlink\" title=\"学会使用和了解框架和库\"></a>学会使用和了解框架和库</h2><hr>\n<h3 id=\"CSS框架\"><a href=\"#CSS框架\" class=\"headerlink\" title=\"CSS框架\"></a>CSS框架</h3><ul>\n<li>上面提到的<a href=\"http://www.bootcss.com/\">Bootstrap</a>，<a href=\"http://www.bootcss.com/p/font-awesome/\">Font Awesome</a>，<a href=\"http://jquerymobile.com/\">jQuery Mobile</a>，<a href=\"https://jqueryui.com/\">jQuery UI</a>都可以去了解看看哦</li>\n</ul>\n<h3 id=\"LESS-SASS\"><a href=\"#LESS-SASS\" class=\"headerlink\" title=\"LESS/SASS\"></a>LESS/SASS</h3><ul>\n<li><a href=\"http://www.bootcss.com/p/lesscss/\">LESS</a>将CSS赋予了动态语言的特性，如变量，继承，运算，函数等</li>\n<li><a href=\"http://sass.bootcss.com/docs/sass-reference/\">SASS</a>让CSS语言更强大、优雅。它允许你使用变量、嵌套规则、mixins、导入等众多功能，并且完全兼容CSS语法</li>\n</ul>\n<h3 id=\"jQuery库\"><a href=\"#jQuery库\" class=\"headerlink\" title=\"jQuery库\"></a>jQuery库</h3><ul>\n<li>不得不说这是很强大的js库，曾经在我刚开始工作时帮助我解决了很多问题呢</li>\n<li>这里有份<a href=\"http://www.css88.com/jqapi-1.9/\">《jQuery API中文文档》</a>，查询专用哦<ul>\n<li>jQuery可以帮忙解决初期的很多问题哦，例如：</li>\n<li>1.消除了JavaScript跨平台兼容问题</li>\n<li>2.丰富的DOM选择器，超便利的$()选择器哦</li>\n<li>3.可以很容易地浏览文档、选择元素、处理事件以及添加效果</li>\n<li>4.ajax操作支持，后面版本的还支持Promise哦</li>\n<li>5.允许开发者定制插件，<a href=\"http://www.cnblogs.com/heyuquan/p/form-plug-async-submit.html\">jQuery form插件</a>不错哦</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"zepto库\"><a href=\"#zepto库\" class=\"headerlink\" title=\"zepto库\"></a><a href=\"http://www.css88.com/doc/zeptojs_api/\">zepto库</a></h3><ul>\n<li>轻量级的jQuery库，适合移动端</li>\n<li>个人觉得了解一下就够了。。除了touch事件有些参考价值，还是jQuery强大多了</li>\n</ul>\n<h3 id=\"MVC-MVVM框架\"><a href=\"#MVC-MVVM框架\" class=\"headerlink\" title=\"MVC/MVVM框架\"></a>MVC/MVVM框架</h3><ul>\n<li>这是待开拓的一大片领土，每个框架都有自己的特色和优势，很有意思哦</li>\n<li>虽然说纷繁琳目，但其实选一个喜欢的用起来就好啦，当然生产环境的话得考虑稳定性、社区、维护这些哦</li>\n<li><a href=\"http://www.apjs.net/\">AngularJS</a>，MVVM</li>\n<li><a href=\"http://reactjs.cn/\">React</a>，MVC的V</li>\n<li><a href=\"http://www.bootcss.com/p/underscore/\">Underscore</a>，JavaScript工具库</li>\n<li><a href=\"http://www.css88.com/doc/backbone/\">Backbone</a>，MVC，基于underscore.js</li>\n<li><a href=\"http://cn.vuejs.org/\">Vue</a>，国人MVVM的VM</li>\n<li><a href=\"http://avalonjs.github.io/\">Avalon</a>，国人MVVM</li>\n</ul>\n<h2 id=\"前端开发工具\"><a href=\"#前端开发工具\" class=\"headerlink\" title=\"前端开发工具\"></a>前端开发工具</h2><hr>\n<h3 id=\"编辑器\"><a href=\"#编辑器\" class=\"headerlink\" title=\"编辑器\"></a>编辑器</h3><ul>\n<li>DW(Dreamweaver)挺老了，比较重量级</li>\n<li>Sublime Text，很多人在用的</li>\n<li>Hbuilder，本人在用，感觉还不错</li>\n<li>Vim，听说很好用</li>\n</ul>\n<h3 id=\"Chrome开发者工具-Firebug\"><a href=\"#Chrome开发者工具-Firebug\" class=\"headerlink\" title=\"Chrome开发者工具/Firebug\"></a>Chrome开发者工具/Firebug</h3><ul>\n<li>浏览器调试工具，很强大哦，只需在浏览器右键-检查就能打开啦</li>\n</ul>\n<h3 id=\"Gulp-Grunt\"><a href=\"#Gulp-Grunt\" class=\"headerlink\" title=\"Gulp/Grunt\"></a>Gulp/Grunt</h3><ul>\n<li>基于任务的javascript命令行构建工具</li>\n<li>用于任务自动化，创建工作区等</li>\n</ul>\n<h3 id=\"Mocha-Jasmine-Karma\"><a href=\"#Mocha-Jasmine-Karma\" class=\"headerlink\" title=\"Mocha/Jasmine/Karma\"></a>Mocha/Jasmine/Karma</h3><ul>\n<li>Mocha/Jasmine是常用的前端测试框架</li>\n<li>Karma是驱动测试的Runner</li>\n</ul>\n<h3 id=\"其它前端工具\"><a href=\"#其它前端工具\" class=\"headerlink\" title=\"其它前端工具\"></a>其它前端工具</h3><ul>\n<li>这里有篇<a href=\"https://github.com/doggy8088/frontend-tools\">《各式 Web 前端開發工具整理》</a></li>\n</ul>\n<h2 id=\"成为一枚优质前端工程师\"><a href=\"#成为一枚优质前端工程师\" class=\"headerlink\" title=\"成为一枚优质前端工程师\"></a>成为一枚优质前端工程师</h2><hr>\n<h3 id=\"注意代码规范\"><a href=\"#注意代码规范\" class=\"headerlink\" title=\"注意代码规范\"></a>注意代码规范</h3><ul>\n<li>良好的代码规范对团队合作很有帮助哦</li>\n<li>本骚年在这方面有警觉，但还是欠缺实践呢…</li>\n</ul>\n<h3 id=\"针对性研究\"><a href=\"#针对性研究\" class=\"headerlink\" title=\"针对性研究\"></a>针对性研究</h3><ul>\n<li><a href=\"https://blog.coding.net/blog/how-do-promises-work\">《理解Promise》</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2012/09/xmlhttprequest_level_2.html\">《XMLHttpRequest Level 2使用指南》</a></li>\n<li><a href=\"http://coolshell.cn/articles/9666.html\">《浏览器的渲染原理简介》</a></li>\n<li><a href=\"http://coolshell.cn/articles/9749.html#jtss-tsina\">《Javascript装载和执行》</a></li>\n<li><a href=\"http://www.html-js.com/article/Regularjs-Chinese-guidelines-for-a-comprehensive-summary-of-the-front-template-technology?utm_source=tuicool&amp;utm_medium=referral\">《一个对前端模板技术的全面总结》</a></li>\n<li><a href=\"http://www.cnblogs.com/kenkofox/p/4643760.html\">《浅谈HTML5单页面架构》</a></li>\n</ul>\n<h3 id=\"深入理解库-框架原理\"><a href=\"#深入理解库-框架原理\" class=\"headerlink\" title=\"深入理解库/框架原理\"></a>深入理解库/框架原理</h3><ul>\n<li>学习研究源代码是个很好的爱好哦，对个人提升也很有帮助呢</li>\n<li>当然像Bootstrap这样的优秀样式框架很值得阅读，建议直接翻开源码，配合浏览器调试工具一起学习吧</li>\n<li><a href=\"http://www.sxrczx.com/docs/js/2286877.html\">《深入理解JavaScript系列》</a></li>\n<li><a href=\"http://www.cnblogs.com/aaronjs/p/3279314.html\">《jQuery源码分析系列》</a></li>\n<li><a href=\"http://www.cnblogs.com/heyuquan/archive/2013/05/13/3076465.html\">《触碰jQuery：AJAX异步详解》</a></li>\n<li>React精华之虚拟DOM：<a href=\"https://github.com/livoras/blog/issues/13\">《如何实现一个Virtual DOM算法》</a></li>\n<li><a href=\"https://www.zouyesheng.com/angular.html\">《Angular学习笔记》</a></li>\n<li><a href=\"http://www.html-js.com/article/2145\">《Angular源码分析系列》</a></li>\n</ul>\n<h3 id=\"了解后台工作\"><a href=\"#了解后台工作\" class=\"headerlink\" title=\"了解后台工作\"></a>了解后台工作</h3><ul>\n<li>了解和你一起合作的小伙伴们也是很重要的哦</li>\n<li>PHP、JAVA、Nodejs等服务端语言</li>\n<li>MySQL、MongoDB等数据库</li>\n</ul>\n<h2 id=\"培养你的热情\"><a href=\"#培养你的热情\" class=\"headerlink\" title=\"培养你的热情\"></a>培养你的热情</h2><hr>\n<p>你热爱前端吗？不清楚？<br>那你喜欢逻辑吗，喜欢设计吗，想要将自己大大的脑洞里面装的所有有趣的都分享出来吗？<br>我喜欢思考，喜欢想象，热爱学习，沉迷那种把想法写成成果的喜悦。<br>如果你的热情跟不上，可以尝试一下设计些小项目：</p>\n<h3 id=\"博客\"><a href=\"#博客\" class=\"headerlink\" title=\"博客\"></a>博客</h3><p>这是最大众的选择，但即使是这样普通的网页，依然可以刷上你喜欢的颜色，添加有趣的装饰，贴一些你的想法，分享自己的喜怒哀乐。<br>还有什么比拥有一个专属自己的空间更值得开心呢？</p>\n<ul>\n<li>搭建方式： <ul>\n<li>1.使用现有工具快速搭建。可选择使用wordpress（基于PHP），或者是hexo(基于nodejs)。网上google教程，一搜一大堆，度娘和谷哥无论生活还是学习都是一强力工具呢（很可惜我的认知能力就到这里了。。）</li>\n<li>2.网上下载一些喜欢的博客资源，然后根据自己的爱好进行修改</li>\n<li>3.从基础开始，自己搭建。可以从静态页面开始，用最基础的HTML+CSS+javascript(jQuery)来编写你的静态页面吧。一步步实现自己的设计还是个很有成就感的事情呢。<a href=\"http://www.godbasin.com/\">看我用静态页面和PHP搭的很多bug的博客</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"游戏\"><a href=\"#游戏\" class=\"headerlink\" title=\"游戏\"></a>游戏</h3><p>当然首先你自己得是个爱玩游戏的骚年。相信你会对自己在游戏中加入的小想法和念头沾沾自喜的。</p>\n<ul>\n<li>编写选择：<ul>\n<li>1.idea不足的时候，可以选择自己喜欢的一款游戏，使用前端去编写。</li>\n<li>2.又或者可以下载已有的游戏，改成成自己喜欢的样子。</li>\n<li>3.脑洞够大的你，当然要写一份自己设计的游戏啦。<br>看我的<a href=\"http://o969gatx6.bkt.clouddn.com/index.html\">《打嗝的巴士》</a>和<a href=\"http://o969lbf8k.bkt.clouddn.com/ballt.html\">《弹珠》</a></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"动态页面\"><a href=\"#动态页面\" class=\"headerlink\" title=\"动态页面\"></a>动态页面</h3><p>一个简单但却动效十足的交互页面也是很有意思的哦。可参考<a href=\"http://o95scrds5.bkt.clouddn.com/index.html\">《酷炫HTML5》</a><br>当然这跟HTML5没多大关系，主要用的CSS3，不得不说CSS3太好玩了。</p>\n<h3 id=\"静态网页\"><a href=\"#静态网页\" class=\"headerlink\" title=\"静态网页\"></a>静态网页</h3><p>静态网页可能没有前面的有意思，但也不妨为一种练习设计和基础的方式。<br>当然酷酷的你肯定可以设计漂亮的静态页面，又或者你可以用多种库和框架练练手呢。<br>参考入门初期写的一些网页： <a href=\"http://o95u5v08d.bkt.clouddn.com/index.html\">《被删动漫》</a>和<a href=\"http://o95u208de.bkt.clouddn.com/index.html\">《Restaurant》</a></p>\n<h2 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h2><hr>\n<p>一年多来，我学到的也就这篇文章差不多的东西。<br>前端很繁荣呢，还有很多很多的领域等待开拓和研究，相信你和我一样都满怀着好奇心和期待呢。<br>每天期待去上班的，不能只是我一个呀。让你的工作成为你美好生活的一部分吧。</p>"},{"title":"前端在变，然而热情不变","date":"2016-06-17T19:59:57.000Z","_content":"本文作为本骚年正式开始技术博客的开篇，当然先渲染一下快乐的氛围。接着会大致介绍搭建这个博客的步骤。\n<!--more-->\n\n## 首先为第一篇博客开心一下\n-----\n或许在两个月前，本骚年还生活在远离github以及各种社区论坛的宅世界里。但即使是那样一个几乎与世隔绝的环境下，也依然满怀学习前端的热情。\n<!---->\n那时候做的事情不多，基本是些与jQuery打架，努力想解剖它，最后又握手言和的过家家。\n<!---->\n工作原因慢慢用上一些工具，也挑战自己上了框架、试着对代码进行抽离又封装，到如今在小伙伴的怂恿下试着在github搭博客。\n<!---->\n进步不得说不大，对于懒癌晚期只沉迷于学习远离、学习代码解析的骚年来说，各种各样的工具毫无疑问又增加了需要学习的范围。但，既来之则安之，有句话叫学无止境不是吗，要相信自己，哈哈。\n\n## 参考\n-----\n关于创建github博客：\n[http://blog.csdn.net/renfufei/article/details/37725057](http://blog.csdn.net/renfufei/article/details/37725057/)\nHexo搭建博客教程: \n[http://ibruce.info/2013/11/22/hexo-your-blog](http://ibruce.info/2013/11/22/hexo-your-blog/)\n知乎：Hexo好看的主题：\n[https://www.zhihu.com/question/24422335](https://www.zhihu.com/question/24422335)\n\n## 搭建步骤\n-----\n\n### 注册一个github账户\n\n### 创建github pages\n> 具体可参考Hexo搭建博客教程: \n> [http://ibruce.info/2013/11/22/hexo-your-blog](http://ibruce.info/2013/11/22/hexo-your-blog/)\n\n### 装载Hexo\n> 该过程需要安装node以及Git，具体可参考Hexo搭建博客教程: \n> [http://ibruce.info/2013/11/22/hexo-your-blog](http://ibruce.info/2013/11/22/hexo-your-blog/)\n\n### 选择自己喜欢的主题\n> Hexo主题可参考知乎：Hexo好看的主题：\n> [https://www.zhihu.com/question/24422335](https://www.zhihu.com/question/24422335)\n\n### 对模板和样式进行修改\n> Hexo装载的模板为ejs，炒鸡好懂的\n\n### 选择喜欢的插件和挂件，统计等\n> Hexo搭建博客教程里面有提及相关的部署\n\n### 部署到github上\n> 设置./_config.yml中Deployment相关，然后hexo deploy\n> 注意请先生成静态文件再进行部署哦\n> 若部署失败提示'ERROR Deployer not found: github', 是因为Hexo3.0以后type需要改成git\n> 1.安装 npm install hexo-deployer-git --save\n> 2.将deploy 的 type由github改为git\n\n## 此处粘贴Hexo常用命令\n-----\n> hexo new \"postName\"  ---新建文章\n> hexo new page \"pageName\"  ---新建页面\n> hexo clean  ---清除缓存 网页正常情况下可以忽略此条命令\n> hexo generate  ---生成静态页面至public目录\n> hexo server  ---开启预览访问端口（默认端口4000，'ctrl + c'关闭server）\n> hexo deploy  ---将.deploy目录部署到GitHub\n\n## 结束语\n-----\n然后一不小心就玩通宵了，赶紧补眠去。\nGood Day!","source":"_posts/first-blog.md","raw":"---\ntitle: 前端在变，然而热情不变\ndate: 2016-06-18 03:59:57\ncategories: web乱炖\ntags: 教程\n---\n本文作为本骚年正式开始技术博客的开篇，当然先渲染一下快乐的氛围。接着会大致介绍搭建这个博客的步骤。\n<!--more-->\n\n## 首先为第一篇博客开心一下\n-----\n或许在两个月前，本骚年还生活在远离github以及各种社区论坛的宅世界里。但即使是那样一个几乎与世隔绝的环境下，也依然满怀学习前端的热情。\n<!---->\n那时候做的事情不多，基本是些与jQuery打架，努力想解剖它，最后又握手言和的过家家。\n<!---->\n工作原因慢慢用上一些工具，也挑战自己上了框架、试着对代码进行抽离又封装，到如今在小伙伴的怂恿下试着在github搭博客。\n<!---->\n进步不得说不大，对于懒癌晚期只沉迷于学习远离、学习代码解析的骚年来说，各种各样的工具毫无疑问又增加了需要学习的范围。但，既来之则安之，有句话叫学无止境不是吗，要相信自己，哈哈。\n\n## 参考\n-----\n关于创建github博客：\n[http://blog.csdn.net/renfufei/article/details/37725057](http://blog.csdn.net/renfufei/article/details/37725057/)\nHexo搭建博客教程: \n[http://ibruce.info/2013/11/22/hexo-your-blog](http://ibruce.info/2013/11/22/hexo-your-blog/)\n知乎：Hexo好看的主题：\n[https://www.zhihu.com/question/24422335](https://www.zhihu.com/question/24422335)\n\n## 搭建步骤\n-----\n\n### 注册一个github账户\n\n### 创建github pages\n> 具体可参考Hexo搭建博客教程: \n> [http://ibruce.info/2013/11/22/hexo-your-blog](http://ibruce.info/2013/11/22/hexo-your-blog/)\n\n### 装载Hexo\n> 该过程需要安装node以及Git，具体可参考Hexo搭建博客教程: \n> [http://ibruce.info/2013/11/22/hexo-your-blog](http://ibruce.info/2013/11/22/hexo-your-blog/)\n\n### 选择自己喜欢的主题\n> Hexo主题可参考知乎：Hexo好看的主题：\n> [https://www.zhihu.com/question/24422335](https://www.zhihu.com/question/24422335)\n\n### 对模板和样式进行修改\n> Hexo装载的模板为ejs，炒鸡好懂的\n\n### 选择喜欢的插件和挂件，统计等\n> Hexo搭建博客教程里面有提及相关的部署\n\n### 部署到github上\n> 设置./_config.yml中Deployment相关，然后hexo deploy\n> 注意请先生成静态文件再进行部署哦\n> 若部署失败提示'ERROR Deployer not found: github', 是因为Hexo3.0以后type需要改成git\n> 1.安装 npm install hexo-deployer-git --save\n> 2.将deploy 的 type由github改为git\n\n## 此处粘贴Hexo常用命令\n-----\n> hexo new \"postName\"  ---新建文章\n> hexo new page \"pageName\"  ---新建页面\n> hexo clean  ---清除缓存 网页正常情况下可以忽略此条命令\n> hexo generate  ---生成静态页面至public目录\n> hexo server  ---开启预览访问端口（默认端口4000，'ctrl + c'关闭server）\n> hexo deploy  ---将.deploy目录部署到GitHub\n\n## 结束语\n-----\n然后一不小心就玩通宵了，赶紧补眠去。\nGood Day!","slug":"first-blog","published":1,"updated":"2016-06-24T13:57:16.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cipv4ddf10008q0l52igban40","content":"<p>本文作为本骚年正式开始技术博客的开篇，当然先渲染一下快乐的氛围。接着会大致介绍搭建这个博客的步骤。<br><a id=\"more\"></a></p>\n<h2 id=\"首先为第一篇博客开心一下\"><a href=\"#首先为第一篇博客开心一下\" class=\"headerlink\" title=\"首先为第一篇博客开心一下\"></a>首先为第一篇博客开心一下</h2><hr>\n<p>或许在两个月前，本骚年还生活在远离github以及各种社区论坛的宅世界里。但即使是那样一个几乎与世隔绝的环境下，也依然满怀学习前端的热情。<br><!----><br>那时候做的事情不多，基本是些与jQuery打架，努力想解剖它，最后又握手言和的过家家。<br><!----><br>工作原因慢慢用上一些工具，也挑战自己上了框架、试着对代码进行抽离又封装，到如今在小伙伴的怂恿下试着在github搭博客。<br><!----><br>进步不得说不大，对于懒癌晚期只沉迷于学习远离、学习代码解析的骚年来说，各种各样的工具毫无疑问又增加了需要学习的范围。但，既来之则安之，有句话叫学无止境不是吗，要相信自己，哈哈。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><hr>\n<p>关于创建github博客：<br><a href=\"http://blog.csdn.net/renfufei/article/details/37725057/\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/renfufei/article/details/37725057</a><br>Hexo搭建博客教程:<br><a href=\"http://ibruce.info/2013/11/22/hexo-your-blog/\" target=\"_blank\" rel=\"external\">http://ibruce.info/2013/11/22/hexo-your-blog</a><br>知乎：Hexo好看的主题：<br><a href=\"https://www.zhihu.com/question/24422335\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/24422335</a></p>\n<h2 id=\"搭建步骤\"><a href=\"#搭建步骤\" class=\"headerlink\" title=\"搭建步骤\"></a>搭建步骤</h2><hr>\n<h3 id=\"注册一个github账户\"><a href=\"#注册一个github账户\" class=\"headerlink\" title=\"注册一个github账户\"></a>注册一个github账户</h3><h3 id=\"创建github-pages\"><a href=\"#创建github-pages\" class=\"headerlink\" title=\"创建github pages\"></a>创建github pages</h3><blockquote>\n<p>具体可参考Hexo搭建博客教程:<br><a href=\"http://ibruce.info/2013/11/22/hexo-your-blog/\" target=\"_blank\" rel=\"external\">http://ibruce.info/2013/11/22/hexo-your-blog</a></p>\n</blockquote>\n<h3 id=\"装载Hexo\"><a href=\"#装载Hexo\" class=\"headerlink\" title=\"装载Hexo\"></a>装载Hexo</h3><blockquote>\n<p>该过程需要安装node以及Git，具体可参考Hexo搭建博客教程:<br><a href=\"http://ibruce.info/2013/11/22/hexo-your-blog/\" target=\"_blank\" rel=\"external\">http://ibruce.info/2013/11/22/hexo-your-blog</a></p>\n</blockquote>\n<h3 id=\"选择自己喜欢的主题\"><a href=\"#选择自己喜欢的主题\" class=\"headerlink\" title=\"选择自己喜欢的主题\"></a>选择自己喜欢的主题</h3><blockquote>\n<p>Hexo主题可参考知乎：Hexo好看的主题：<br><a href=\"https://www.zhihu.com/question/24422335\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/24422335</a></p>\n</blockquote>\n<h3 id=\"对模板和样式进行修改\"><a href=\"#对模板和样式进行修改\" class=\"headerlink\" title=\"对模板和样式进行修改\"></a>对模板和样式进行修改</h3><blockquote>\n<p>Hexo装载的模板为ejs，炒鸡好懂的</p>\n</blockquote>\n<h3 id=\"选择喜欢的插件和挂件，统计等\"><a href=\"#选择喜欢的插件和挂件，统计等\" class=\"headerlink\" title=\"选择喜欢的插件和挂件，统计等\"></a>选择喜欢的插件和挂件，统计等</h3><blockquote>\n<p>Hexo搭建博客教程里面有提及相关的部署</p>\n</blockquote>\n<h3 id=\"部署到github上\"><a href=\"#部署到github上\" class=\"headerlink\" title=\"部署到github上\"></a>部署到github上</h3><blockquote>\n<p>设置./_config.yml中Deployment相关，然后hexo deploy<br>注意请先生成静态文件再进行部署哦<br>若部署失败提示’ERROR Deployer not found: github’, 是因为Hexo3.0以后type需要改成git<br>1.安装 npm install hexo-deployer-git –save<br>2.将deploy 的 type由github改为git</p>\n</blockquote>\n<h2 id=\"此处粘贴Hexo常用命令\"><a href=\"#此处粘贴Hexo常用命令\" class=\"headerlink\" title=\"此处粘贴Hexo常用命令\"></a>此处粘贴Hexo常用命令</h2><hr>\n<blockquote>\n<p>hexo new “postName”  —新建文章<br>hexo new page “pageName”  —新建页面<br>hexo clean  —清除缓存 网页正常情况下可以忽略此条命令<br>hexo generate  —生成静态页面至public目录<br>hexo server  —开启预览访问端口（默认端口4000，’ctrl + c’关闭server）<br>hexo deploy  —将.deploy目录部署到GitHub</p>\n</blockquote>\n<h2 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h2><hr>\n<p>然后一不小心就玩通宵了，赶紧补眠去。<br>Good Day!</p>\n","excerpt":"<p>本文作为本骚年正式开始技术博客的开篇，当然先渲染一下快乐的氛围。接着会大致介绍搭建这个博客的步骤。<br>","more":"</p>\n<h2 id=\"首先为第一篇博客开心一下\"><a href=\"#首先为第一篇博客开心一下\" class=\"headerlink\" title=\"首先为第一篇博客开心一下\"></a>首先为第一篇博客开心一下</h2><hr>\n<p>或许在两个月前，本骚年还生活在远离github以及各种社区论坛的宅世界里。但即使是那样一个几乎与世隔绝的环境下，也依然满怀学习前端的热情。<br><!----><br>那时候做的事情不多，基本是些与jQuery打架，努力想解剖它，最后又握手言和的过家家。<br><!----><br>工作原因慢慢用上一些工具，也挑战自己上了框架、试着对代码进行抽离又封装，到如今在小伙伴的怂恿下试着在github搭博客。<br><!----><br>进步不得说不大，对于懒癌晚期只沉迷于学习远离、学习代码解析的骚年来说，各种各样的工具毫无疑问又增加了需要学习的范围。但，既来之则安之，有句话叫学无止境不是吗，要相信自己，哈哈。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><hr>\n<p>关于创建github博客：<br><a href=\"http://blog.csdn.net/renfufei/article/details/37725057/\">http://blog.csdn.net/renfufei/article/details/37725057</a><br>Hexo搭建博客教程:<br><a href=\"http://ibruce.info/2013/11/22/hexo-your-blog/\">http://ibruce.info/2013/11/22/hexo-your-blog</a><br>知乎：Hexo好看的主题：<br><a href=\"https://www.zhihu.com/question/24422335\">https://www.zhihu.com/question/24422335</a></p>\n<h2 id=\"搭建步骤\"><a href=\"#搭建步骤\" class=\"headerlink\" title=\"搭建步骤\"></a>搭建步骤</h2><hr>\n<h3 id=\"注册一个github账户\"><a href=\"#注册一个github账户\" class=\"headerlink\" title=\"注册一个github账户\"></a>注册一个github账户</h3><h3 id=\"创建github-pages\"><a href=\"#创建github-pages\" class=\"headerlink\" title=\"创建github pages\"></a>创建github pages</h3><blockquote>\n<p>具体可参考Hexo搭建博客教程:<br><a href=\"http://ibruce.info/2013/11/22/hexo-your-blog/\">http://ibruce.info/2013/11/22/hexo-your-blog</a></p>\n</blockquote>\n<h3 id=\"装载Hexo\"><a href=\"#装载Hexo\" class=\"headerlink\" title=\"装载Hexo\"></a>装载Hexo</h3><blockquote>\n<p>该过程需要安装node以及Git，具体可参考Hexo搭建博客教程:<br><a href=\"http://ibruce.info/2013/11/22/hexo-your-blog/\">http://ibruce.info/2013/11/22/hexo-your-blog</a></p>\n</blockquote>\n<h3 id=\"选择自己喜欢的主题\"><a href=\"#选择自己喜欢的主题\" class=\"headerlink\" title=\"选择自己喜欢的主题\"></a>选择自己喜欢的主题</h3><blockquote>\n<p>Hexo主题可参考知乎：Hexo好看的主题：<br><a href=\"https://www.zhihu.com/question/24422335\">https://www.zhihu.com/question/24422335</a></p>\n</blockquote>\n<h3 id=\"对模板和样式进行修改\"><a href=\"#对模板和样式进行修改\" class=\"headerlink\" title=\"对模板和样式进行修改\"></a>对模板和样式进行修改</h3><blockquote>\n<p>Hexo装载的模板为ejs，炒鸡好懂的</p>\n</blockquote>\n<h3 id=\"选择喜欢的插件和挂件，统计等\"><a href=\"#选择喜欢的插件和挂件，统计等\" class=\"headerlink\" title=\"选择喜欢的插件和挂件，统计等\"></a>选择喜欢的插件和挂件，统计等</h3><blockquote>\n<p>Hexo搭建博客教程里面有提及相关的部署</p>\n</blockquote>\n<h3 id=\"部署到github上\"><a href=\"#部署到github上\" class=\"headerlink\" title=\"部署到github上\"></a>部署到github上</h3><blockquote>\n<p>设置./_config.yml中Deployment相关，然后hexo deploy<br>注意请先生成静态文件再进行部署哦<br>若部署失败提示’ERROR Deployer not found: github’, 是因为Hexo3.0以后type需要改成git<br>1.安装 npm install hexo-deployer-git –save<br>2.将deploy 的 type由github改为git</p>\n</blockquote>\n<h2 id=\"此处粘贴Hexo常用命令\"><a href=\"#此处粘贴Hexo常用命令\" class=\"headerlink\" title=\"此处粘贴Hexo常用命令\"></a>此处粘贴Hexo常用命令</h2><hr>\n<blockquote>\n<p>hexo new “postName”  —新建文章<br>hexo new page “pageName”  —新建页面<br>hexo clean  —清除缓存 网页正常情况下可以忽略此条命令<br>hexo generate  —生成静态页面至public目录<br>hexo server  —开启预览访问端口（默认端口4000，’ctrl + c’关闭server）<br>hexo deploy  —将.deploy目录部署到GitHub</p>\n</blockquote>\n<h2 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h2><hr>\n<p>然后一不小心就玩通宵了，赶紧补眠去。<br>Good Day!</p>"},{"title":"jQuery响应式瀑布流","date":"2016-06-20T12:42:49.000Z","_content":"之前用jQuery写过一个响应式的瀑布流。本文介绍实现方法。\n<!--more-->\n\n代码放在github上，有兴趣的小伙伴可以下载看\n[responsive-waterfall](https://github.com/godbasin/godbasin.github.io/tree/blog-codes/responsive-waterfall)\n\n最终效果图如下，改变浏览器大小效果更棒哦[点击查看页面](http://o922dcmwp.bkt.clouddn.com/index.html)\n![image](http://o905ne85q.bkt.clouddn.com/responsive-waterfall.png)\n\n以下我们将每个瀑布流盒子简称为box\n\n## 使用数组记录每个box宽和高\n-----\n\n### 设置不同屏幕宽度下每一行box的数量\n- 使用$(window).width()获取屏幕宽度\n- 根据不同屏幕宽度设置每一行box的数量\n- 得到每个box的宽度\n- 这里使用最傻的方法计算，有待优化\n\n``` javascript\nvar num = 4; //每行box数量\nif ($(window).width() <= 500) num = 1;\nif ($(window).width() > 500) num = 2;\nif ($(window).width() > 800) num = 3;\nif ($(window).width() > 1200) num = 5;\nvar boxWidth = $(window).width() / num; //每个box宽度\n```\n\n### 创建数组对象\n- 每个数组元素为对象，该对象属性有width/height/top/left等\n\n``` javascript\nfunction boxStyle(width, height, top, left) {\n\tthis.position = \"absolute\";\n\tthis.width = width;\n\tthis.height = height;\n\tthis.top = top;\n\tthis.left = left;\n}\n```\n\n### 创建数组记录元素宽高\n这里简述一下瀑布流原理：第一行box从左往右排列，第二行开始box的添加位置为各列中高度最小的一列，添加后该列高度则加上该box高度，以此类推\n- 设置每个元素宽度，高度自定义auto\n- 创建数组boxStyleArr来保存每个元素宽高\n- 使用数组boxArr保存每一竖列的高度，即每一竖列最后一个box的底部位置\n- 使用瀑布流原理计算每个box的位置（left和top）,并保存到数组boxStyleArr\n\n``` javascript\nbox.each(function(index, value) {\n\t//设置每个元素宽度，高度自定义auto\n\t$(value).css({\n\t\t\"width\": boxWidth,\n\t\t\"height\": \"auto\"\n\t});\n\t//数组boxStyleArr保存每个元素宽高\n\tboxStyleArr[index] = new boxStyle();\n\tboxStyleArr[index].width = boxWidth;\n\tboxStyleArr[index].height = box.eq(index).height();\n\t//首行box从左到右依次排列\n\tif (index < num) {\n\t\tboxArr[index] = boxStyleArr[index].height;\n\t\tboxStyleArr[index].left = boxWidth * index;\n\t\tboxStyleArr[index].top = 0;\n\t//瀑布流原理计算每个box的位置（left和top）\n\t} else {\n\t\tvar minboxHeight = Math.min.apply(null, boxArr);\n\t\tvar minboxIndex = $.inArray(minboxHeight, boxArr);\n\t\tboxStyleArr[index].left = boxStyleArr[minboxIndex].left;\n\t\tboxStyleArr[index].top = minboxHeight;\n\t\tboxArr[minboxIndex] += boxStyleArr[index].height;\n\t}\n});\n```\n\n\n## 放置box\n-----\n- 根据数组boxStyleArr，将每个box使用绝对定位放置到相应位置\n- 这里使用了动画效果，使所有box从左上角伸展\n\n``` javascript\nfunction boxLocation() {\n\tvar box = $(\".response\");\n\tvar boxStyleArr = [];\n\tboxArrBuild(boxStyleArr);\n\tbox.each(function(index, value) {\n\t\t//设置每个box最初位置为左上角，宽高为0\n\t\t$(value).css({\n\t\t\t\"position\": \"absolute\",\n\t\t\t\"top\": 0,\n\t\t\t\"left\": 0,\n\t\t\t\"width\": 0,\n\t\t\t\"height\": 0\n\t\t});\n\t\t//动画效果使box们进行伸展\n\t\t$(value).animate({\n\t\t\ttop: boxStyleArr[index].top,\n\t\t\tleft: boxStyleArr[index].left,\n\t\t\theight: boxStyleArr[index].height,\n\t\t\twidth: boxStyleArr[index].width\n\t\t}, 500);\n\t});\n}\n```\n\n## 绑定屏幕宽度改变事件\n-----\n- 当屏幕大小改变时，触发重新计算box位置\n  - 为了避免浏览器频繁改变宽度，这里增加了个小判断\n  - 当屏幕改变后200毫秒内不再改变，才触发重新计算\n\n``` javascript\n$(window).on(\"load\", function() {\n\tboxLocation();\n\twindow.onresize = function() {\n\t\twindowWidth = $(window).width();\n\t\tif (interval == null) {\n\t\t\tinterval = setInterval(\"test()\", 200);\n\t\t}\n\t}\n});\n```\n\n## 待完善的地方\n-----\n### 考虑图片加载\n- 图片加载过程可能影响对box高度判断\n- 可通过img.load来确保图片加载完成或者失败之后才进行计算\n### 代码优化&封装\n- 尽情发挥你的创造力吧\n\n## 结束语\n-----\n这个效果是我从别人的博客看到的，然后自己用jQuery实现，这也不失为创造的乐趣呢。","source":"_posts/responsive-waterfall.md","raw":"---\ntitle: jQuery响应式瀑布流\ndate: 2016-06-20 20:42:49\ncategories: jQuery杂烩\ntags: 逻辑实现\n---\n之前用jQuery写过一个响应式的瀑布流。本文介绍实现方法。\n<!--more-->\n\n代码放在github上，有兴趣的小伙伴可以下载看\n[responsive-waterfall](https://github.com/godbasin/godbasin.github.io/tree/blog-codes/responsive-waterfall)\n\n最终效果图如下，改变浏览器大小效果更棒哦[点击查看页面](http://o922dcmwp.bkt.clouddn.com/index.html)\n![image](http://o905ne85q.bkt.clouddn.com/responsive-waterfall.png)\n\n以下我们将每个瀑布流盒子简称为box\n\n## 使用数组记录每个box宽和高\n-----\n\n### 设置不同屏幕宽度下每一行box的数量\n- 使用$(window).width()获取屏幕宽度\n- 根据不同屏幕宽度设置每一行box的数量\n- 得到每个box的宽度\n- 这里使用最傻的方法计算，有待优化\n\n``` javascript\nvar num = 4; //每行box数量\nif ($(window).width() <= 500) num = 1;\nif ($(window).width() > 500) num = 2;\nif ($(window).width() > 800) num = 3;\nif ($(window).width() > 1200) num = 5;\nvar boxWidth = $(window).width() / num; //每个box宽度\n```\n\n### 创建数组对象\n- 每个数组元素为对象，该对象属性有width/height/top/left等\n\n``` javascript\nfunction boxStyle(width, height, top, left) {\n\tthis.position = \"absolute\";\n\tthis.width = width;\n\tthis.height = height;\n\tthis.top = top;\n\tthis.left = left;\n}\n```\n\n### 创建数组记录元素宽高\n这里简述一下瀑布流原理：第一行box从左往右排列，第二行开始box的添加位置为各列中高度最小的一列，添加后该列高度则加上该box高度，以此类推\n- 设置每个元素宽度，高度自定义auto\n- 创建数组boxStyleArr来保存每个元素宽高\n- 使用数组boxArr保存每一竖列的高度，即每一竖列最后一个box的底部位置\n- 使用瀑布流原理计算每个box的位置（left和top）,并保存到数组boxStyleArr\n\n``` javascript\nbox.each(function(index, value) {\n\t//设置每个元素宽度，高度自定义auto\n\t$(value).css({\n\t\t\"width\": boxWidth,\n\t\t\"height\": \"auto\"\n\t});\n\t//数组boxStyleArr保存每个元素宽高\n\tboxStyleArr[index] = new boxStyle();\n\tboxStyleArr[index].width = boxWidth;\n\tboxStyleArr[index].height = box.eq(index).height();\n\t//首行box从左到右依次排列\n\tif (index < num) {\n\t\tboxArr[index] = boxStyleArr[index].height;\n\t\tboxStyleArr[index].left = boxWidth * index;\n\t\tboxStyleArr[index].top = 0;\n\t//瀑布流原理计算每个box的位置（left和top）\n\t} else {\n\t\tvar minboxHeight = Math.min.apply(null, boxArr);\n\t\tvar minboxIndex = $.inArray(minboxHeight, boxArr);\n\t\tboxStyleArr[index].left = boxStyleArr[minboxIndex].left;\n\t\tboxStyleArr[index].top = minboxHeight;\n\t\tboxArr[minboxIndex] += boxStyleArr[index].height;\n\t}\n});\n```\n\n\n## 放置box\n-----\n- 根据数组boxStyleArr，将每个box使用绝对定位放置到相应位置\n- 这里使用了动画效果，使所有box从左上角伸展\n\n``` javascript\nfunction boxLocation() {\n\tvar box = $(\".response\");\n\tvar boxStyleArr = [];\n\tboxArrBuild(boxStyleArr);\n\tbox.each(function(index, value) {\n\t\t//设置每个box最初位置为左上角，宽高为0\n\t\t$(value).css({\n\t\t\t\"position\": \"absolute\",\n\t\t\t\"top\": 0,\n\t\t\t\"left\": 0,\n\t\t\t\"width\": 0,\n\t\t\t\"height\": 0\n\t\t});\n\t\t//动画效果使box们进行伸展\n\t\t$(value).animate({\n\t\t\ttop: boxStyleArr[index].top,\n\t\t\tleft: boxStyleArr[index].left,\n\t\t\theight: boxStyleArr[index].height,\n\t\t\twidth: boxStyleArr[index].width\n\t\t}, 500);\n\t});\n}\n```\n\n## 绑定屏幕宽度改变事件\n-----\n- 当屏幕大小改变时，触发重新计算box位置\n  - 为了避免浏览器频繁改变宽度，这里增加了个小判断\n  - 当屏幕改变后200毫秒内不再改变，才触发重新计算\n\n``` javascript\n$(window).on(\"load\", function() {\n\tboxLocation();\n\twindow.onresize = function() {\n\t\twindowWidth = $(window).width();\n\t\tif (interval == null) {\n\t\t\tinterval = setInterval(\"test()\", 200);\n\t\t}\n\t}\n});\n```\n\n## 待完善的地方\n-----\n### 考虑图片加载\n- 图片加载过程可能影响对box高度判断\n- 可通过img.load来确保图片加载完成或者失败之后才进行计算\n### 代码优化&封装\n- 尽情发挥你的创造力吧\n\n## 结束语\n-----\n这个效果是我从别人的博客看到的，然后自己用jQuery实现，这也不失为创造的乐趣呢。","slug":"responsive-waterfall","published":1,"updated":"2016-06-24T14:12:27.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cipv4ddg7000cq0l567tfyawl","content":"<p>之前用jQuery写过一个响应式的瀑布流。本文介绍实现方法。<br><a id=\"more\"></a></p>\n<p>代码放在github上，有兴趣的小伙伴可以下载看<br><a href=\"https://github.com/godbasin/godbasin.github.io/tree/blog-codes/responsive-waterfall\" target=\"_blank\" rel=\"external\">responsive-waterfall</a></p>\n<p>最终效果图如下，改变浏览器大小效果更棒哦<a href=\"http://o922dcmwp.bkt.clouddn.com/index.html\" target=\"_blank\" rel=\"external\">点击查看页面</a><br><img src=\"http://o905ne85q.bkt.clouddn.com/responsive-waterfall.png\" alt=\"image\"></p>\n<p>以下我们将每个瀑布流盒子简称为box</p>\n<h2 id=\"使用数组记录每个box宽和高\"><a href=\"#使用数组记录每个box宽和高\" class=\"headerlink\" title=\"使用数组记录每个box宽和高\"></a>使用数组记录每个box宽和高</h2><hr>\n<h3 id=\"设置不同屏幕宽度下每一行box的数量\"><a href=\"#设置不同屏幕宽度下每一行box的数量\" class=\"headerlink\" title=\"设置不同屏幕宽度下每一行box的数量\"></a>设置不同屏幕宽度下每一行box的数量</h3><ul>\n<li>使用$(window).width()获取屏幕宽度</li>\n<li>根据不同屏幕宽度设置每一行box的数量</li>\n<li>得到每个box的宽度</li>\n<li>这里使用最傻的方法计算，有待优化</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> num = <span class=\"number\">4</span>; <span class=\"comment\">//每行box数量</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> ($(<span class=\"built_in\">window</span>).width() &lt;= <span class=\"number\">500</span>) num = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> ($(<span class=\"built_in\">window</span>).width() &gt; <span class=\"number\">500</span>) num = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> ($(<span class=\"built_in\">window</span>).width() &gt; <span class=\"number\">800</span>) num = <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> ($(<span class=\"built_in\">window</span>).width() &gt; <span class=\"number\">1200</span>) num = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> boxWidth = $(<span class=\"built_in\">window</span>).width() / num; <span class=\"comment\">//每个box宽度</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"创建数组对象\"><a href=\"#创建数组对象\" class=\"headerlink\" title=\"创建数组对象\"></a>创建数组对象</h3><ul>\n<li>每个数组元素为对象，该对象属性有width/height/top/left等</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">boxStyle</span>(<span class=\"params\">width, height, top, left</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.position = <span class=\"string\">\"absolute\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.width = width;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.height = height;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.top = top;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.left = left;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建数组记录元素宽高\"><a href=\"#创建数组记录元素宽高\" class=\"headerlink\" title=\"创建数组记录元素宽高\"></a>创建数组记录元素宽高</h3><p>这里简述一下瀑布流原理：第一行box从左往右排列，第二行开始box的添加位置为各列中高度最小的一列，添加后该列高度则加上该box高度，以此类推</p>\n<ul>\n<li>设置每个元素宽度，高度自定义auto</li>\n<li>创建数组boxStyleArr来保存每个元素宽高</li>\n<li>使用数组boxArr保存每一竖列的高度，即每一竖列最后一个box的底部位置</li>\n<li>使用瀑布流原理计算每个box的位置（left和top）,并保存到数组boxStyleArr</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">box.each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">index, value</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//设置每个元素宽度，高度自定义auto</span></span><br><span class=\"line\">  $(value).css(&#123;</span><br><span class=\"line\">    <span class=\"string\">\"width\"</span>: boxWidth,</span><br><span class=\"line\">    <span class=\"string\">\"height\"</span>: <span class=\"string\">\"auto\"</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"comment\">//数组boxStyleArr保存每个元素宽高</span></span><br><span class=\"line\">  boxStyleArr[index] = <span class=\"keyword\">new</span> boxStyle();</span><br><span class=\"line\">  boxStyleArr[index].width = boxWidth;</span><br><span class=\"line\">  boxStyleArr[index].height = box.eq(index).height();</span><br><span class=\"line\">  <span class=\"comment\">//首行box从左到右依次排列</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (index &lt; num) &#123;</span><br><span class=\"line\">    boxArr[index] = boxStyleArr[index].height;</span><br><span class=\"line\">    boxStyleArr[index].left = boxWidth * index;</span><br><span class=\"line\">    boxStyleArr[index].top = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"comment\">//瀑布流原理计算每个box的位置（left和top）</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> minboxHeight = <span class=\"built_in\">Math</span>.min.apply(<span class=\"literal\">null</span>, boxArr);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> minboxIndex = $.inArray(minboxHeight, boxArr);</span><br><span class=\"line\">    boxStyleArr[index].left = boxStyleArr[minboxIndex].left;</span><br><span class=\"line\">    boxStyleArr[index].top = minboxHeight;</span><br><span class=\"line\">    boxArr[minboxIndex] += boxStyleArr[index].height;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"放置box\"><a href=\"#放置box\" class=\"headerlink\" title=\"放置box\"></a>放置box</h2><hr>\n<ul>\n<li>根据数组boxStyleArr，将每个box使用绝对定位放置到相应位置</li>\n<li>这里使用了动画效果，使所有box从左上角伸展</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">boxLocation</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> box = $(<span class=\"string\">\".response\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> boxStyleArr = [];</span><br><span class=\"line\">  boxArrBuild(boxStyleArr);</span><br><span class=\"line\">  box.each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">index, value</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//设置每个box最初位置为左上角，宽高为0</span></span><br><span class=\"line\">    $(value).css(&#123;</span><br><span class=\"line\">      <span class=\"string\">\"position\"</span>: <span class=\"string\">\"absolute\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"top\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"string\">\"left\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"string\">\"width\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"string\">\"height\"</span>: <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"comment\">//动画效果使box们进行伸展</span></span><br><span class=\"line\">    $(value).animate(&#123;</span><br><span class=\"line\">      top: boxStyleArr[index].top,</span><br><span class=\"line\">      left: boxStyleArr[index].left,</span><br><span class=\"line\">      height: boxStyleArr[index].height,</span><br><span class=\"line\">      width: boxStyleArr[index].width</span><br><span class=\"line\">    &#125;, <span class=\"number\">500</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"绑定屏幕宽度改变事件\"><a href=\"#绑定屏幕宽度改变事件\" class=\"headerlink\" title=\"绑定屏幕宽度改变事件\"></a>绑定屏幕宽度改变事件</h2><hr>\n<ul>\n<li>当屏幕大小改变时，触发重新计算box位置<ul>\n<li>为了避免浏览器频繁改变宽度，这里增加了个小判断</li>\n<li>当屏幕改变后200毫秒内不再改变，才触发重新计算</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"built_in\">window</span>).on(<span class=\"string\">\"load\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  boxLocation();</span><br><span class=\"line\">  <span class=\"built_in\">window</span>.onresize = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    windowWidth = $(<span class=\"built_in\">window</span>).width();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (interval == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">      interval = setInterval(<span class=\"string\">\"test()\"</span>, <span class=\"number\">200</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"待完善的地方\"><a href=\"#待完善的地方\" class=\"headerlink\" title=\"待完善的地方\"></a>待完善的地方</h2><hr>\n<h3 id=\"考虑图片加载\"><a href=\"#考虑图片加载\" class=\"headerlink\" title=\"考虑图片加载\"></a>考虑图片加载</h3><ul>\n<li>图片加载过程可能影响对box高度判断</li>\n<li>可通过img.load来确保图片加载完成或者失败之后才进行计算<h3 id=\"代码优化-amp-封装\"><a href=\"#代码优化-amp-封装\" class=\"headerlink\" title=\"代码优化&amp;封装\"></a>代码优化&amp;封装</h3></li>\n<li>尽情发挥你的创造力吧</li>\n</ul>\n<h2 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h2><hr>\n<p>这个效果是我从别人的博客看到的，然后自己用jQuery实现，这也不失为创造的乐趣呢。</p>\n","excerpt":"<p>之前用jQuery写过一个响应式的瀑布流。本文介绍实现方法。<br>","more":"</p>\n<p>代码放在github上，有兴趣的小伙伴可以下载看<br><a href=\"https://github.com/godbasin/godbasin.github.io/tree/blog-codes/responsive-waterfall\">responsive-waterfall</a></p>\n<p>最终效果图如下，改变浏览器大小效果更棒哦<a href=\"http://o922dcmwp.bkt.clouddn.com/index.html\">点击查看页面</a><br><img src=\"http://o905ne85q.bkt.clouddn.com/responsive-waterfall.png\" alt=\"image\"></p>\n<p>以下我们将每个瀑布流盒子简称为box</p>\n<h2 id=\"使用数组记录每个box宽和高\"><a href=\"#使用数组记录每个box宽和高\" class=\"headerlink\" title=\"使用数组记录每个box宽和高\"></a>使用数组记录每个box宽和高</h2><hr>\n<h3 id=\"设置不同屏幕宽度下每一行box的数量\"><a href=\"#设置不同屏幕宽度下每一行box的数量\" class=\"headerlink\" title=\"设置不同屏幕宽度下每一行box的数量\"></a>设置不同屏幕宽度下每一行box的数量</h3><ul>\n<li>使用$(window).width()获取屏幕宽度</li>\n<li>根据不同屏幕宽度设置每一行box的数量</li>\n<li>得到每个box的宽度</li>\n<li>这里使用最傻的方法计算，有待优化</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> num = <span class=\"number\">4</span>; <span class=\"comment\">//每行box数量</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> ($(<span class=\"built_in\">window</span>).width() &lt;= <span class=\"number\">500</span>) num = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> ($(<span class=\"built_in\">window</span>).width() &gt; <span class=\"number\">500</span>) num = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> ($(<span class=\"built_in\">window</span>).width() &gt; <span class=\"number\">800</span>) num = <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> ($(<span class=\"built_in\">window</span>).width() &gt; <span class=\"number\">1200</span>) num = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> boxWidth = $(<span class=\"built_in\">window</span>).width() / num; <span class=\"comment\">//每个box宽度</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"创建数组对象\"><a href=\"#创建数组对象\" class=\"headerlink\" title=\"创建数组对象\"></a>创建数组对象</h3><ul>\n<li>每个数组元素为对象，该对象属性有width/height/top/left等</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">boxStyle</span>(<span class=\"params\">width, height, top, left</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.position = <span class=\"string\">\"absolute\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.width = width;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.height = height;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.top = top;</span><br><span class=\"line\">  <span class=\"keyword\">this</span>.left = left;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建数组记录元素宽高\"><a href=\"#创建数组记录元素宽高\" class=\"headerlink\" title=\"创建数组记录元素宽高\"></a>创建数组记录元素宽高</h3><p>这里简述一下瀑布流原理：第一行box从左往右排列，第二行开始box的添加位置为各列中高度最小的一列，添加后该列高度则加上该box高度，以此类推</p>\n<ul>\n<li>设置每个元素宽度，高度自定义auto</li>\n<li>创建数组boxStyleArr来保存每个元素宽高</li>\n<li>使用数组boxArr保存每一竖列的高度，即每一竖列最后一个box的底部位置</li>\n<li>使用瀑布流原理计算每个box的位置（left和top）,并保存到数组boxStyleArr</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">box.each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">index, value</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//设置每个元素宽度，高度自定义auto</span></span><br><span class=\"line\">  $(value).css(&#123;</span><br><span class=\"line\">    <span class=\"string\">\"width\"</span>: boxWidth,</span><br><span class=\"line\">    <span class=\"string\">\"height\"</span>: <span class=\"string\">\"auto\"</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"comment\">//数组boxStyleArr保存每个元素宽高</span></span><br><span class=\"line\">  boxStyleArr[index] = <span class=\"keyword\">new</span> boxStyle();</span><br><span class=\"line\">  boxStyleArr[index].width = boxWidth;</span><br><span class=\"line\">  boxStyleArr[index].height = box.eq(index).height();</span><br><span class=\"line\">  <span class=\"comment\">//首行box从左到右依次排列</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (index &lt; num) &#123;</span><br><span class=\"line\">    boxArr[index] = boxStyleArr[index].height;</span><br><span class=\"line\">    boxStyleArr[index].left = boxWidth * index;</span><br><span class=\"line\">    boxStyleArr[index].top = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"comment\">//瀑布流原理计算每个box的位置（left和top）</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> minboxHeight = <span class=\"built_in\">Math</span>.min.apply(<span class=\"literal\">null</span>, boxArr);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> minboxIndex = $.inArray(minboxHeight, boxArr);</span><br><span class=\"line\">    boxStyleArr[index].left = boxStyleArr[minboxIndex].left;</span><br><span class=\"line\">    boxStyleArr[index].top = minboxHeight;</span><br><span class=\"line\">    boxArr[minboxIndex] += boxStyleArr[index].height;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"放置box\"><a href=\"#放置box\" class=\"headerlink\" title=\"放置box\"></a>放置box</h2><hr>\n<ul>\n<li>根据数组boxStyleArr，将每个box使用绝对定位放置到相应位置</li>\n<li>这里使用了动画效果，使所有box从左上角伸展</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">boxLocation</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> box = $(<span class=\"string\">\".response\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> boxStyleArr = [];</span><br><span class=\"line\">  boxArrBuild(boxStyleArr);</span><br><span class=\"line\">  box.each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">index, value</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//设置每个box最初位置为左上角，宽高为0</span></span><br><span class=\"line\">    $(value).css(&#123;</span><br><span class=\"line\">      <span class=\"string\">\"position\"</span>: <span class=\"string\">\"absolute\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"top\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"string\">\"left\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"string\">\"width\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"string\">\"height\"</span>: <span class=\"number\">0</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"comment\">//动画效果使box们进行伸展</span></span><br><span class=\"line\">    $(value).animate(&#123;</span><br><span class=\"line\">      top: boxStyleArr[index].top,</span><br><span class=\"line\">      left: boxStyleArr[index].left,</span><br><span class=\"line\">      height: boxStyleArr[index].height,</span><br><span class=\"line\">      width: boxStyleArr[index].width</span><br><span class=\"line\">    &#125;, <span class=\"number\">500</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"绑定屏幕宽度改变事件\"><a href=\"#绑定屏幕宽度改变事件\" class=\"headerlink\" title=\"绑定屏幕宽度改变事件\"></a>绑定屏幕宽度改变事件</h2><hr>\n<ul>\n<li>当屏幕大小改变时，触发重新计算box位置<ul>\n<li>为了避免浏览器频繁改变宽度，这里增加了个小判断</li>\n<li>当屏幕改变后200毫秒内不再改变，才触发重新计算</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"built_in\">window</span>).on(<span class=\"string\">\"load\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  boxLocation();</span><br><span class=\"line\">  <span class=\"built_in\">window</span>.onresize = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    windowWidth = $(<span class=\"built_in\">window</span>).width();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (interval == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">      interval = setInterval(<span class=\"string\">\"test()\"</span>, <span class=\"number\">200</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"待完善的地方\"><a href=\"#待完善的地方\" class=\"headerlink\" title=\"待完善的地方\"></a>待完善的地方</h2><hr>\n<h3 id=\"考虑图片加载\"><a href=\"#考虑图片加载\" class=\"headerlink\" title=\"考虑图片加载\"></a>考虑图片加载</h3><ul>\n<li>图片加载过程可能影响对box高度判断</li>\n<li>可通过img.load来确保图片加载完成或者失败之后才进行计算<h3 id=\"代码优化-amp-封装\"><a href=\"#代码优化-amp-封装\" class=\"headerlink\" title=\"代码优化&amp;封装\"></a>代码优化&amp;封装</h3></li>\n<li>尽情发挥你的创造力吧</li>\n</ul>\n<h2 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h2><hr>\n<p>这个效果是我从别人的博客看到的，然后自己用jQuery实现，这也不失为创造的乐趣呢。</p>"},{"title":"jQuery插件--图片居中对齐","date":"2016-06-21T12:41:05.000Z","_content":"需要将不同尺寸的图片居中放置时，可使用该jQuery插件。本文介绍实现方法。\n<!--more-->\n\n代码放在github上，有兴趣的小伙伴可以下载看\n[picture-align](https://github.com/godbasin/godbasin.github.io/tree/blog-codes/picture-align)\n\n最终效果图如下[点击查看页面](http://o92lwol8p.bkt.clouddn.com/index.html)\n![image](http://o905ne85q.bkt.clouddn.com/picture-align.png)\n\n## 插件介绍\n-----\n### 使用方法\n- html\n``` html\n<!--img元素外层裹一层div-->\n<div class=\"fill\">\n\t<img src=\"img/2.png\" />\n</div>\n```\n- js\n``` javascript\n//使用jQuery获取需要的外层容器\n$(\".fill\").bsPictureAlign({\n\t\"img_dom\": \".img\", //img的class/id/其他属性，为0则选中该容器内所有img（tagName === \"img\"）图片\n\t\"style\": \"fill\", //两种style：full为最短边对齐，过长剪裁；fill为最长边对齐，填充背景\n\t\"width\": \"100%\", //容器宽度，默认为100%\n\t\"height\": \"300px\", //容器高度，默认为300px\n\t\"background\": \"#000\" //背景填充颜色，默认为#000黑色\n});\n```\n### 插件封装方法\n- 使用jQuery拓展属性$.fn.xxx来进行封装\n- 这里有超详细教程[《jQuery插件开发精品教程，让你的jQuery提升一个台阶》](http://www.cnblogs.com/Wayou/p/jquery_plugin_tutorial.html)\n\n## 图片居中原理\n-----\n- 使用img.load()确保图片加载完成，此时可精确图片比例\n- 获取图片宽高比例，与容器比例进行比较\n\n### 最短边对齐，过长隐藏：full方法\n- 容器宽高比大于图片时，图片高度100%，宽度按比例缩放按比例缩放\n- 容器宽高比小于图片时，图片宽度100%，高度按比例缩放按比例缩放\n- 使用绝对定位将容器内图片居中\n- 设置容器overflow: hidden;隐藏图片过长部分\n\n### 最长边对齐，填充背景：fill方法\n- 容器宽高比大于图片时，图片宽度100%，高度按比例缩放\n- 容器宽高比小于图片时，图片高度100%，宽度按比例缩放\n- 使用绝对定位将容器内图片居中\n- 设置容器background，填充背景\n\n## 待完善的地方\n-----\n- 需要在图片加载完之后回调，可自行增加回调函数\n- 去到哪里都别忘了优化代码哦\n\n## 插件代码\n-----\n请别叫我下划线狂魔^_^\n``` javascript\n;\n(function($, window, document, undefined) {\n\t$.fn.bsPictureAlign = function(options) {\n\t\tvar num = this.length,\n\t\t\tloadnum = 0;\n\t\t//若为多个容器，分别初始化每个容器\n\t\tfor (i = 0; i < this.length; i++) {\n\t\t\tvar _this = this[i];\n\t\t\t//创建bsPictureAlign实体\n\t\t\tvar bsPictureAlign = new BsPictureAlign(_this, options);\n\t\t\t//调用其方法\n\t\t\tif (options.style == \"full\") bsPictureAlign.full();\n\t\t\tif (options.style == \"fill\") bsPictureAlign.fill({\n\t\t\t\t//这里增加了回调函数，确保所有图片处理完毕后进行回调\n\t\t\t\tcallback: function() {\n\t\t\t\t\tloadnum++;\n\t\t\t\t\tif (num == loadnum && options.loadover) {\n\t\t\t\t\t\toptions.loadover();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\t//定义原型\n\tvar BsPictureAlign = function(ele, opt) {\n\t\tthis.$ele = ele;\n\t\t//若无定义宽高背景，使用默认值\n\t\t\tthis.defaults = {\n\t\t\t\t\"width\": \"100%\",\n\t\t\t\t\"height\": \"300px\",\n\t\t\t\t\"background\": \"#000\"\n\t\t\t};\n\t\t\tthis.options = $.extend({}, this.defaults, opt);\n\t};\n\tBsPictureAlign.prototype = {\n\t\t//定义fill方法\n\t\tfill: function(opc) {\n\t\t\tvar that = this,\n\t\t\t\t_options = that.options,\n\t\t\t\t_ele = $(this.$ele),\n\t\t\t\t_dom = _options.img_dom,\n\t\t\t\t_img = _dom ? _ele.find(_dom) : _ele.find(\"img\"),\n\t\t\t\t_this, _width, _height, _ratio, _w, _h, _r, _wider;\n\t\t\t//修改图片容器宽高\n\t\t\t_ele.css({\n\t\t\t\t\"width\": _options.width,\n\t\t\t\t\"height\": _options.height,\n\t\t\t\t\"overflow\": \"hidden\",\n\t\t\t\t\"background\": _options.background,\n\t\t\t\t\"position\": \"relative\"\n\t\t\t});\n\t\t\t//容器比例\n\t\t\t_width = _ele.width();\n\t\t\t_height = _ele.height();\n\t\t\t_ratio = _width / _height;\n\t\t\t//每张所选图片进行处理\n\t\t\t_img.each(function() {\n\t\t\t\t_this = $(this);\n\t\t\t\t//此处可选，用来保证图片加载完之前不可见\n\t\t\t\t_this.css({\n\t\t\t\t\t'opacity': 0,\n\t\t\t\t});\n\t\t\t\t//此处确保图片加载完毕\n\t\t\t\t_this.load(function() {\n\t\t\t\t\t_w = _this.width();\n\t\t\t\t\t_h = _this.height();\n\t\t\t\t\t_r = _w / _h;\n\t\t\t\t\t_wider = _r > _ratio ? true : false;\n\t\t\t\t\t//容器宽高比小于图片时，图片高度100%，宽度按比例缩放\n\t\t\t\t\tif (_wider) {\n\t\t\t\t\t\t_this.css({\n\t\t\t\t\t\t\t\"width\": \"100%\",\n\t\t\t\t\t\t\t\"height\": \"auto\"\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvar _top = (_height - _this.height()) / 2;\n\t\t\t\t\t\t_this.css({\n\t\t\t\t\t\t\t\"position\": \"absolute\",\n\t\t\t\t\t\t\t\"top\": _top + \"px\",\n\t\t\t\t\t\t\t\"left\": 0\n\t\t\t\t\t\t});\n\t\t\t\t\t//容器宽高比大于图片时，图片宽度100%，高度按比例缩放\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_this.css({\n\t\t\t\t\t\t\t\"width\": \"auto\",\n\t\t\t\t\t\t\t\"height\": \"100%\"\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvar _left = (_width - _this.width()) / 2;\n\t\t\t\t\t\t_this.css({\n\t\t\t\t\t\t\t\"position\": \"absolute\",\n\t\t\t\t\t\t\t\"top\": 0,\n\t\t\t\t\t\t\t\"left\": _left + \"px\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t_this.css({\n\t\t\t\t\t\t'opacity': 1,\n\t\t\t\t\t});\n\t\t\t\t\tif (opc.callback) opc.callback();\n\t\t\t\t});\n\t\t\t\t//此处图片加载失败处理\n\t\t\t\t_this.error(function() {\n\t\t\t\t\tif (opc.callback) opc.callback();\n\t\t\t\t\t_this.css({\n\t\t\t\t\t\t'opacity': 1,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\t//链式回调\n\t\t\treturn this;\n\t\t},\n\t\t//定义full方法\n\t\tfull: function() {\n\t\t\tvar that = this,\n\t\t\t\t_options = that.options,\n\t\t\t\t_ele = $(this.$ele),\n\t\t\t\t_img = _ele.find(\"img\"),\n\t\t\t\t_this, _width, _height, _ratio, _w, _h, _r, _wider;\n\t\t\t//修改图片外壳宽高\n\t\t\t_ele.css({\n\t\t\t\t\"width\": _options.width,\n\t\t\t\t\"height\": _options.height,\n\t\t\t\t\"overflow\": \"hidden\",\n\t\t\t\t\"background\": \"#000\",\n\t\t\t\t\"position\": \"relative\"\n\t\t\t});\n\t\t\t//容器比例\n\t\t\t_width = _ele.width();\n\t\t\t_height = _ele.height();\n\t\t\t_ratio = _width / _height;\n\t\t\t//每张所选图片进行处理\n\t\t\t_img.each(function() {\n\t\t\t\t_this = $(this);\n\t\t\t\t//此处确保图片加载完毕\n\t\t\t\t_this.load(function() {\n\t\t\t\t\t_w = _this.width();\n\t\t\t\t\t_h = _this.height();\n\t\t\t\t\t_r = _w / _h;\n\t\t\t\t\t_wider = _r > _ratio ? true : false;\n\t\t\t\t\t//容器宽高比大于图片时，图片高度100%，宽度按比例缩放按比例缩放\n\t\t\t\t\tif (_wider) {\n\t\t\t\t\t\t_this.css({\n\t\t\t\t\t\t\t\"width\": \"auto\",\n\t\t\t\t\t\t\t\"height\": \"100%\"\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvar _left = (_width - _this.width()) / 2;\n\t\t\t\t\t\t_this.css({\n\t\t\t\t\t\t\t\"position\": \"absolute\",\n\t\t\t\t\t\t\t\"top\": 0,\n\t\t\t\t\t\t\t\"left\": _left + \"px\"\n\t\t\t\t\t\t});\n\t\t\t\t\t//容器宽高比小于图片时，图片宽度100%，高度按比例缩放按比例缩放\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_this.css({\n\t\t\t\t\t\t\t\"width\": \"100%\",\n\t\t\t\t\t\t\t\"height\": \"auto\"\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvar _top = (_height - _this.height()) / 2;\n\t\t\t\t\t\t_this.css({\n\t\t\t\t\t\t\t\"position\": \"absolute\",\n\t\t\t\t\t\t\t\"top\": _top + \"px\",\n\t\t\t\t\t\t\t\"left\": 0\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\t//链式回调\n\t\t\treturn this;\n\t\t},\n\t}\n})(jQuery, window, document);\n```\n\n## 结束语\n-----\n插件封装也是个有趣的事情哦，当然有兴趣也可以将逻辑封装成原生js插件哒。","source":"_posts/picture-align.md","raw":"---\ntitle: jQuery插件--图片居中对齐\ndate: 2016-06-21 20:41:05\ncategories: jQuery杂烩\ntags: 自制插件\n---\n需要将不同尺寸的图片居中放置时，可使用该jQuery插件。本文介绍实现方法。\n<!--more-->\n\n代码放在github上，有兴趣的小伙伴可以下载看\n[picture-align](https://github.com/godbasin/godbasin.github.io/tree/blog-codes/picture-align)\n\n最终效果图如下[点击查看页面](http://o92lwol8p.bkt.clouddn.com/index.html)\n![image](http://o905ne85q.bkt.clouddn.com/picture-align.png)\n\n## 插件介绍\n-----\n### 使用方法\n- html\n``` html\n<!--img元素外层裹一层div-->\n<div class=\"fill\">\n\t<img src=\"img/2.png\" />\n</div>\n```\n- js\n``` javascript\n//使用jQuery获取需要的外层容器\n$(\".fill\").bsPictureAlign({\n\t\"img_dom\": \".img\", //img的class/id/其他属性，为0则选中该容器内所有img（tagName === \"img\"）图片\n\t\"style\": \"fill\", //两种style：full为最短边对齐，过长剪裁；fill为最长边对齐，填充背景\n\t\"width\": \"100%\", //容器宽度，默认为100%\n\t\"height\": \"300px\", //容器高度，默认为300px\n\t\"background\": \"#000\" //背景填充颜色，默认为#000黑色\n});\n```\n### 插件封装方法\n- 使用jQuery拓展属性$.fn.xxx来进行封装\n- 这里有超详细教程[《jQuery插件开发精品教程，让你的jQuery提升一个台阶》](http://www.cnblogs.com/Wayou/p/jquery_plugin_tutorial.html)\n\n## 图片居中原理\n-----\n- 使用img.load()确保图片加载完成，此时可精确图片比例\n- 获取图片宽高比例，与容器比例进行比较\n\n### 最短边对齐，过长隐藏：full方法\n- 容器宽高比大于图片时，图片高度100%，宽度按比例缩放按比例缩放\n- 容器宽高比小于图片时，图片宽度100%，高度按比例缩放按比例缩放\n- 使用绝对定位将容器内图片居中\n- 设置容器overflow: hidden;隐藏图片过长部分\n\n### 最长边对齐，填充背景：fill方法\n- 容器宽高比大于图片时，图片宽度100%，高度按比例缩放\n- 容器宽高比小于图片时，图片高度100%，宽度按比例缩放\n- 使用绝对定位将容器内图片居中\n- 设置容器background，填充背景\n\n## 待完善的地方\n-----\n- 需要在图片加载完之后回调，可自行增加回调函数\n- 去到哪里都别忘了优化代码哦\n\n## 插件代码\n-----\n请别叫我下划线狂魔^_^\n``` javascript\n;\n(function($, window, document, undefined) {\n\t$.fn.bsPictureAlign = function(options) {\n\t\tvar num = this.length,\n\t\t\tloadnum = 0;\n\t\t//若为多个容器，分别初始化每个容器\n\t\tfor (i = 0; i < this.length; i++) {\n\t\t\tvar _this = this[i];\n\t\t\t//创建bsPictureAlign实体\n\t\t\tvar bsPictureAlign = new BsPictureAlign(_this, options);\n\t\t\t//调用其方法\n\t\t\tif (options.style == \"full\") bsPictureAlign.full();\n\t\t\tif (options.style == \"fill\") bsPictureAlign.fill({\n\t\t\t\t//这里增加了回调函数，确保所有图片处理完毕后进行回调\n\t\t\t\tcallback: function() {\n\t\t\t\t\tloadnum++;\n\t\t\t\t\tif (num == loadnum && options.loadover) {\n\t\t\t\t\t\toptions.loadover();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\t//定义原型\n\tvar BsPictureAlign = function(ele, opt) {\n\t\tthis.$ele = ele;\n\t\t//若无定义宽高背景，使用默认值\n\t\t\tthis.defaults = {\n\t\t\t\t\"width\": \"100%\",\n\t\t\t\t\"height\": \"300px\",\n\t\t\t\t\"background\": \"#000\"\n\t\t\t};\n\t\t\tthis.options = $.extend({}, this.defaults, opt);\n\t};\n\tBsPictureAlign.prototype = {\n\t\t//定义fill方法\n\t\tfill: function(opc) {\n\t\t\tvar that = this,\n\t\t\t\t_options = that.options,\n\t\t\t\t_ele = $(this.$ele),\n\t\t\t\t_dom = _options.img_dom,\n\t\t\t\t_img = _dom ? _ele.find(_dom) : _ele.find(\"img\"),\n\t\t\t\t_this, _width, _height, _ratio, _w, _h, _r, _wider;\n\t\t\t//修改图片容器宽高\n\t\t\t_ele.css({\n\t\t\t\t\"width\": _options.width,\n\t\t\t\t\"height\": _options.height,\n\t\t\t\t\"overflow\": \"hidden\",\n\t\t\t\t\"background\": _options.background,\n\t\t\t\t\"position\": \"relative\"\n\t\t\t});\n\t\t\t//容器比例\n\t\t\t_width = _ele.width();\n\t\t\t_height = _ele.height();\n\t\t\t_ratio = _width / _height;\n\t\t\t//每张所选图片进行处理\n\t\t\t_img.each(function() {\n\t\t\t\t_this = $(this);\n\t\t\t\t//此处可选，用来保证图片加载完之前不可见\n\t\t\t\t_this.css({\n\t\t\t\t\t'opacity': 0,\n\t\t\t\t});\n\t\t\t\t//此处确保图片加载完毕\n\t\t\t\t_this.load(function() {\n\t\t\t\t\t_w = _this.width();\n\t\t\t\t\t_h = _this.height();\n\t\t\t\t\t_r = _w / _h;\n\t\t\t\t\t_wider = _r > _ratio ? true : false;\n\t\t\t\t\t//容器宽高比小于图片时，图片高度100%，宽度按比例缩放\n\t\t\t\t\tif (_wider) {\n\t\t\t\t\t\t_this.css({\n\t\t\t\t\t\t\t\"width\": \"100%\",\n\t\t\t\t\t\t\t\"height\": \"auto\"\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvar _top = (_height - _this.height()) / 2;\n\t\t\t\t\t\t_this.css({\n\t\t\t\t\t\t\t\"position\": \"absolute\",\n\t\t\t\t\t\t\t\"top\": _top + \"px\",\n\t\t\t\t\t\t\t\"left\": 0\n\t\t\t\t\t\t});\n\t\t\t\t\t//容器宽高比大于图片时，图片宽度100%，高度按比例缩放\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_this.css({\n\t\t\t\t\t\t\t\"width\": \"auto\",\n\t\t\t\t\t\t\t\"height\": \"100%\"\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvar _left = (_width - _this.width()) / 2;\n\t\t\t\t\t\t_this.css({\n\t\t\t\t\t\t\t\"position\": \"absolute\",\n\t\t\t\t\t\t\t\"top\": 0,\n\t\t\t\t\t\t\t\"left\": _left + \"px\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t_this.css({\n\t\t\t\t\t\t'opacity': 1,\n\t\t\t\t\t});\n\t\t\t\t\tif (opc.callback) opc.callback();\n\t\t\t\t});\n\t\t\t\t//此处图片加载失败处理\n\t\t\t\t_this.error(function() {\n\t\t\t\t\tif (opc.callback) opc.callback();\n\t\t\t\t\t_this.css({\n\t\t\t\t\t\t'opacity': 1,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\t//链式回调\n\t\t\treturn this;\n\t\t},\n\t\t//定义full方法\n\t\tfull: function() {\n\t\t\tvar that = this,\n\t\t\t\t_options = that.options,\n\t\t\t\t_ele = $(this.$ele),\n\t\t\t\t_img = _ele.find(\"img\"),\n\t\t\t\t_this, _width, _height, _ratio, _w, _h, _r, _wider;\n\t\t\t//修改图片外壳宽高\n\t\t\t_ele.css({\n\t\t\t\t\"width\": _options.width,\n\t\t\t\t\"height\": _options.height,\n\t\t\t\t\"overflow\": \"hidden\",\n\t\t\t\t\"background\": \"#000\",\n\t\t\t\t\"position\": \"relative\"\n\t\t\t});\n\t\t\t//容器比例\n\t\t\t_width = _ele.width();\n\t\t\t_height = _ele.height();\n\t\t\t_ratio = _width / _height;\n\t\t\t//每张所选图片进行处理\n\t\t\t_img.each(function() {\n\t\t\t\t_this = $(this);\n\t\t\t\t//此处确保图片加载完毕\n\t\t\t\t_this.load(function() {\n\t\t\t\t\t_w = _this.width();\n\t\t\t\t\t_h = _this.height();\n\t\t\t\t\t_r = _w / _h;\n\t\t\t\t\t_wider = _r > _ratio ? true : false;\n\t\t\t\t\t//容器宽高比大于图片时，图片高度100%，宽度按比例缩放按比例缩放\n\t\t\t\t\tif (_wider) {\n\t\t\t\t\t\t_this.css({\n\t\t\t\t\t\t\t\"width\": \"auto\",\n\t\t\t\t\t\t\t\"height\": \"100%\"\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvar _left = (_width - _this.width()) / 2;\n\t\t\t\t\t\t_this.css({\n\t\t\t\t\t\t\t\"position\": \"absolute\",\n\t\t\t\t\t\t\t\"top\": 0,\n\t\t\t\t\t\t\t\"left\": _left + \"px\"\n\t\t\t\t\t\t});\n\t\t\t\t\t//容器宽高比小于图片时，图片宽度100%，高度按比例缩放按比例缩放\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_this.css({\n\t\t\t\t\t\t\t\"width\": \"100%\",\n\t\t\t\t\t\t\t\"height\": \"auto\"\n\t\t\t\t\t\t});\n\t\t\t\t\t\tvar _top = (_height - _this.height()) / 2;\n\t\t\t\t\t\t_this.css({\n\t\t\t\t\t\t\t\"position\": \"absolute\",\n\t\t\t\t\t\t\t\"top\": _top + \"px\",\n\t\t\t\t\t\t\t\"left\": 0\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t\t//链式回调\n\t\t\treturn this;\n\t\t},\n\t}\n})(jQuery, window, document);\n```\n\n## 结束语\n-----\n插件封装也是个有趣的事情哦，当然有兴趣也可以将逻辑封装成原生js插件哒。","slug":"picture-align","published":1,"updated":"2016-06-24T14:15:33.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cipv4ddhf000hq0l58l24z07s","content":"<p>需要将不同尺寸的图片居中放置时，可使用该jQuery插件。本文介绍实现方法。<br><a id=\"more\"></a></p>\n<p>代码放在github上，有兴趣的小伙伴可以下载看<br><a href=\"https://github.com/godbasin/godbasin.github.io/tree/blog-codes/picture-align\" target=\"_blank\" rel=\"external\">picture-align</a></p>\n<p>最终效果图如下<a href=\"http://o92lwol8p.bkt.clouddn.com/index.html\" target=\"_blank\" rel=\"external\">点击查看页面</a><br><img src=\"http://o905ne85q.bkt.clouddn.com/picture-align.png\" alt=\"image\"></p>\n<h2 id=\"插件介绍\"><a href=\"#插件介绍\" class=\"headerlink\" title=\"插件介绍\"></a>插件介绍</h2><hr>\n<h3 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h3><ul>\n<li><p>html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--img元素外层裹一层div--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fill\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"img/2.png\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//使用jQuery获取需要的外层容器</span></span><br><span class=\"line\">$(<span class=\"string\">\".fill\"</span>).bsPictureAlign(&#123;</span><br><span class=\"line\">  <span class=\"string\">\"img_dom\"</span>: <span class=\"string\">\".img\"</span>, <span class=\"comment\">//img的class/id/其他属性，为0则选中该容器内所有img（tagName === \"img\"）图片</span></span><br><span class=\"line\">  <span class=\"string\">\"style\"</span>: <span class=\"string\">\"fill\"</span>, <span class=\"comment\">//两种style：full为最短边对齐，过长剪裁；fill为最长边对齐，填充背景</span></span><br><span class=\"line\">  <span class=\"string\">\"width\"</span>: <span class=\"string\">\"100%\"</span>, <span class=\"comment\">//容器宽度，默认为100%</span></span><br><span class=\"line\">  <span class=\"string\">\"height\"</span>: <span class=\"string\">\"300px\"</span>, <span class=\"comment\">//容器高度，默认为300px</span></span><br><span class=\"line\">  <span class=\"string\">\"background\"</span>: <span class=\"string\">\"#000\"</span> <span class=\"comment\">//背景填充颜色，默认为#000黑色</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"插件封装方法\"><a href=\"#插件封装方法\" class=\"headerlink\" title=\"插件封装方法\"></a>插件封装方法</h3><ul>\n<li>使用jQuery拓展属性$.fn.xxx来进行封装</li>\n<li>这里有超详细教程<a href=\"http://www.cnblogs.com/Wayou/p/jquery_plugin_tutorial.html\" target=\"_blank\" rel=\"external\">《jQuery插件开发精品教程，让你的jQuery提升一个台阶》</a></li>\n</ul>\n<h2 id=\"图片居中原理\"><a href=\"#图片居中原理\" class=\"headerlink\" title=\"图片居中原理\"></a>图片居中原理</h2><hr>\n<ul>\n<li>使用img.load()确保图片加载完成，此时可精确图片比例</li>\n<li>获取图片宽高比例，与容器比例进行比较</li>\n</ul>\n<h3 id=\"最短边对齐，过长隐藏：full方法\"><a href=\"#最短边对齐，过长隐藏：full方法\" class=\"headerlink\" title=\"最短边对齐，过长隐藏：full方法\"></a>最短边对齐，过长隐藏：full方法</h3><ul>\n<li>容器宽高比大于图片时，图片高度100%，宽度按比例缩放按比例缩放</li>\n<li>容器宽高比小于图片时，图片宽度100%，高度按比例缩放按比例缩放</li>\n<li>使用绝对定位将容器内图片居中</li>\n<li>设置容器overflow: hidden;隐藏图片过长部分</li>\n</ul>\n<h3 id=\"最长边对齐，填充背景：fill方法\"><a href=\"#最长边对齐，填充背景：fill方法\" class=\"headerlink\" title=\"最长边对齐，填充背景：fill方法\"></a>最长边对齐，填充背景：fill方法</h3><ul>\n<li>容器宽高比大于图片时，图片宽度100%，高度按比例缩放</li>\n<li>容器宽高比小于图片时，图片高度100%，宽度按比例缩放</li>\n<li>使用绝对定位将容器内图片居中</li>\n<li>设置容器background，填充背景</li>\n</ul>\n<h2 id=\"待完善的地方\"><a href=\"#待完善的地方\" class=\"headerlink\" title=\"待完善的地方\"></a>待完善的地方</h2><hr>\n<ul>\n<li>需要在图片加载完之后回调，可自行增加回调函数</li>\n<li>去到哪里都别忘了优化代码哦</li>\n</ul>\n<h2 id=\"插件代码\"><a href=\"#插件代码\" class=\"headerlink\" title=\"插件代码\"></a>插件代码</h2><hr>\n<p>请别叫我下划线狂魔^_^<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">;</span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">$, window, document, undefined</span>) </span>&#123;</span><br><span class=\"line\">  $.fn.bsPictureAlign = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> num = <span class=\"keyword\">this</span>.length,</span><br><span class=\"line\">      loadnum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">//若为多个容器，分别初始化每个容器</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; <span class=\"keyword\">this</span>.length; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> _this = <span class=\"keyword\">this</span>[i];</span><br><span class=\"line\">      <span class=\"comment\">//创建bsPictureAlign实体</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> bsPictureAlign = <span class=\"keyword\">new</span> BsPictureAlign(_this, options);</span><br><span class=\"line\">      <span class=\"comment\">//调用其方法</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (options.style == <span class=\"string\">\"full\"</span>) bsPictureAlign.full();</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (options.style == <span class=\"string\">\"fill\"</span>) bsPictureAlign.fill(&#123;</span><br><span class=\"line\">        <span class=\"comment\">//这里增加了回调函数，确保所有图片处理完毕后进行回调</span></span><br><span class=\"line\">        callback: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">          loadnum++;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (num == loadnum &amp;&amp; options.loadover) &#123;</span><br><span class=\"line\">            options.loadover();</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"comment\">//定义原型</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> BsPictureAlign = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">ele, opt</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.$ele = ele;</span><br><span class=\"line\">    <span class=\"comment\">//若无定义宽高背景，使用默认值</span></span><br><span class=\"line\">      <span class=\"keyword\">this</span>.defaults = &#123;</span><br><span class=\"line\">        <span class=\"string\">\"width\"</span>: <span class=\"string\">\"100%\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"height\"</span>: <span class=\"string\">\"300px\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"background\"</span>: <span class=\"string\">\"#000\"</span></span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.options = $.extend(&#123;&#125;, <span class=\"keyword\">this</span>.defaults, opt);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  BsPictureAlign.prototype = &#123;</span><br><span class=\"line\">    <span class=\"comment\">//定义fill方法</span></span><br><span class=\"line\">    fill: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">opc</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span>,</span><br><span class=\"line\">        _options = that.options,</span><br><span class=\"line\">        _ele = $(<span class=\"keyword\">this</span>.$ele),</span><br><span class=\"line\">        _dom = _options.img_dom,</span><br><span class=\"line\">        _img = _dom ? _ele.find(_dom) : _ele.find(<span class=\"string\">\"img\"</span>),</span><br><span class=\"line\">        _this, _width, _height, _ratio, _w, _h, _r, _wider;</span><br><span class=\"line\">      <span class=\"comment\">//修改图片容器宽高</span></span><br><span class=\"line\">      _ele.css(&#123;</span><br><span class=\"line\">        <span class=\"string\">\"width\"</span>: _options.width,</span><br><span class=\"line\">        <span class=\"string\">\"height\"</span>: _options.height,</span><br><span class=\"line\">        <span class=\"string\">\"overflow\"</span>: <span class=\"string\">\"hidden\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"background\"</span>: _options.background,</span><br><span class=\"line\">        <span class=\"string\">\"position\"</span>: <span class=\"string\">\"relative\"</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"comment\">//容器比例</span></span><br><span class=\"line\">      _width = _ele.width();</span><br><span class=\"line\">      _height = _ele.height();</span><br><span class=\"line\">      _ratio = _width / _height;</span><br><span class=\"line\">      <span class=\"comment\">//每张所选图片进行处理</span></span><br><span class=\"line\">      _img.each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        _this = $(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        <span class=\"comment\">//此处可选，用来保证图片加载完之前不可见</span></span><br><span class=\"line\">        _this.css(&#123;</span><br><span class=\"line\">          <span class=\"string\">'opacity'</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"comment\">//此处确保图片加载完毕</span></span><br><span class=\"line\">        _this.load(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">          _w = _this.width();</span><br><span class=\"line\">          _h = _this.height();</span><br><span class=\"line\">          _r = _w / _h;</span><br><span class=\"line\">          _wider = _r &gt; _ratio ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>;</span><br><span class=\"line\">          <span class=\"comment\">//容器宽高比小于图片时，图片高度100%，宽度按比例缩放</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (_wider) &#123;</span><br><span class=\"line\">            _this.css(&#123;</span><br><span class=\"line\">              <span class=\"string\">\"width\"</span>: <span class=\"string\">\"100%\"</span>,</span><br><span class=\"line\">              <span class=\"string\">\"height\"</span>: <span class=\"string\">\"auto\"</span></span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> _top = (_height - _this.height()) / <span class=\"number\">2</span>;</span><br><span class=\"line\">            _this.css(&#123;</span><br><span class=\"line\">              <span class=\"string\">\"position\"</span>: <span class=\"string\">\"absolute\"</span>,</span><br><span class=\"line\">              <span class=\"string\">\"top\"</span>: _top + <span class=\"string\">\"px\"</span>,</span><br><span class=\"line\">              <span class=\"string\">\"left\"</span>: <span class=\"number\">0</span></span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">          <span class=\"comment\">//容器宽高比大于图片时，图片宽度100%，高度按比例缩放</span></span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            _this.css(&#123;</span><br><span class=\"line\">              <span class=\"string\">\"width\"</span>: <span class=\"string\">\"auto\"</span>,</span><br><span class=\"line\">              <span class=\"string\">\"height\"</span>: <span class=\"string\">\"100%\"</span></span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> _left = (_width - _this.width()) / <span class=\"number\">2</span>;</span><br><span class=\"line\">            _this.css(&#123;</span><br><span class=\"line\">              <span class=\"string\">\"position\"</span>: <span class=\"string\">\"absolute\"</span>,</span><br><span class=\"line\">              <span class=\"string\">\"top\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">              <span class=\"string\">\"left\"</span>: _left + <span class=\"string\">\"px\"</span></span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          _this.css(&#123;</span><br><span class=\"line\">            <span class=\"string\">'opacity'</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (opc.callback) opc.callback();</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"comment\">//此处图片加载失败处理</span></span><br><span class=\"line\">        _this.error(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (opc.callback) opc.callback();</span><br><span class=\"line\">          _this.css(&#123;</span><br><span class=\"line\">            <span class=\"string\">'opacity'</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"comment\">//链式回调</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//定义full方法</span></span><br><span class=\"line\">    full: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span>,</span><br><span class=\"line\">        _options = that.options,</span><br><span class=\"line\">        _ele = $(<span class=\"keyword\">this</span>.$ele),</span><br><span class=\"line\">        _img = _ele.find(<span class=\"string\">\"img\"</span>),</span><br><span class=\"line\">        _this, _width, _height, _ratio, _w, _h, _r, _wider;</span><br><span class=\"line\">      <span class=\"comment\">//修改图片外壳宽高</span></span><br><span class=\"line\">      _ele.css(&#123;</span><br><span class=\"line\">        <span class=\"string\">\"width\"</span>: _options.width,</span><br><span class=\"line\">        <span class=\"string\">\"height\"</span>: _options.height,</span><br><span class=\"line\">        <span class=\"string\">\"overflow\"</span>: <span class=\"string\">\"hidden\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"background\"</span>: <span class=\"string\">\"#000\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"position\"</span>: <span class=\"string\">\"relative\"</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"comment\">//容器比例</span></span><br><span class=\"line\">      _width = _ele.width();</span><br><span class=\"line\">      _height = _ele.height();</span><br><span class=\"line\">      _ratio = _width / _height;</span><br><span class=\"line\">      <span class=\"comment\">//每张所选图片进行处理</span></span><br><span class=\"line\">      _img.each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        _this = $(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        <span class=\"comment\">//此处确保图片加载完毕</span></span><br><span class=\"line\">        _this.load(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">          _w = _this.width();</span><br><span class=\"line\">          _h = _this.height();</span><br><span class=\"line\">          _r = _w / _h;</span><br><span class=\"line\">          _wider = _r &gt; _ratio ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>;</span><br><span class=\"line\">          <span class=\"comment\">//容器宽高比大于图片时，图片高度100%，宽度按比例缩放按比例缩放</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (_wider) &#123;</span><br><span class=\"line\">            _this.css(&#123;</span><br><span class=\"line\">              <span class=\"string\">\"width\"</span>: <span class=\"string\">\"auto\"</span>,</span><br><span class=\"line\">              <span class=\"string\">\"height\"</span>: <span class=\"string\">\"100%\"</span></span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> _left = (_width - _this.width()) / <span class=\"number\">2</span>;</span><br><span class=\"line\">            _this.css(&#123;</span><br><span class=\"line\">              <span class=\"string\">\"position\"</span>: <span class=\"string\">\"absolute\"</span>,</span><br><span class=\"line\">              <span class=\"string\">\"top\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">              <span class=\"string\">\"left\"</span>: _left + <span class=\"string\">\"px\"</span></span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">          <span class=\"comment\">//容器宽高比小于图片时，图片宽度100%，高度按比例缩放按比例缩放</span></span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            _this.css(&#123;</span><br><span class=\"line\">              <span class=\"string\">\"width\"</span>: <span class=\"string\">\"100%\"</span>,</span><br><span class=\"line\">              <span class=\"string\">\"height\"</span>: <span class=\"string\">\"auto\"</span></span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> _top = (_height - _this.height()) / <span class=\"number\">2</span>;</span><br><span class=\"line\">            _this.css(&#123;</span><br><span class=\"line\">              <span class=\"string\">\"position\"</span>: <span class=\"string\">\"absolute\"</span>,</span><br><span class=\"line\">              <span class=\"string\">\"top\"</span>: _top + <span class=\"string\">\"px\"</span>,</span><br><span class=\"line\">              <span class=\"string\">\"left\"</span>: <span class=\"number\">0</span></span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"comment\">//链式回调</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)(jQuery, <span class=\"built_in\">window</span>, <span class=\"built_in\">document</span>);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h2><hr>\n<p>插件封装也是个有趣的事情哦，当然有兴趣也可以将逻辑封装成原生js插件哒。</p>\n","excerpt":"<p>需要将不同尺寸的图片居中放置时，可使用该jQuery插件。本文介绍实现方法。<br>","more":"</p>\n<p>代码放在github上，有兴趣的小伙伴可以下载看<br><a href=\"https://github.com/godbasin/godbasin.github.io/tree/blog-codes/picture-align\">picture-align</a></p>\n<p>最终效果图如下<a href=\"http://o92lwol8p.bkt.clouddn.com/index.html\">点击查看页面</a><br><img src=\"http://o905ne85q.bkt.clouddn.com/picture-align.png\" alt=\"image\"></p>\n<h2 id=\"插件介绍\"><a href=\"#插件介绍\" class=\"headerlink\" title=\"插件介绍\"></a>插件介绍</h2><hr>\n<h3 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h3><ul>\n<li><p>html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--img元素外层裹一层div--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fill\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"img/2.png\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//使用jQuery获取需要的外层容器</span></span><br><span class=\"line\">$(<span class=\"string\">\".fill\"</span>).bsPictureAlign(&#123;</span><br><span class=\"line\">  <span class=\"string\">\"img_dom\"</span>: <span class=\"string\">\".img\"</span>, <span class=\"comment\">//img的class/id/其他属性，为0则选中该容器内所有img（tagName === \"img\"）图片</span></span><br><span class=\"line\">  <span class=\"string\">\"style\"</span>: <span class=\"string\">\"fill\"</span>, <span class=\"comment\">//两种style：full为最短边对齐，过长剪裁；fill为最长边对齐，填充背景</span></span><br><span class=\"line\">  <span class=\"string\">\"width\"</span>: <span class=\"string\">\"100%\"</span>, <span class=\"comment\">//容器宽度，默认为100%</span></span><br><span class=\"line\">  <span class=\"string\">\"height\"</span>: <span class=\"string\">\"300px\"</span>, <span class=\"comment\">//容器高度，默认为300px</span></span><br><span class=\"line\">  <span class=\"string\">\"background\"</span>: <span class=\"string\">\"#000\"</span> <span class=\"comment\">//背景填充颜色，默认为#000黑色</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"插件封装方法\"><a href=\"#插件封装方法\" class=\"headerlink\" title=\"插件封装方法\"></a>插件封装方法</h3><ul>\n<li>使用jQuery拓展属性$.fn.xxx来进行封装</li>\n<li>这里有超详细教程<a href=\"http://www.cnblogs.com/Wayou/p/jquery_plugin_tutorial.html\">《jQuery插件开发精品教程，让你的jQuery提升一个台阶》</a></li>\n</ul>\n<h2 id=\"图片居中原理\"><a href=\"#图片居中原理\" class=\"headerlink\" title=\"图片居中原理\"></a>图片居中原理</h2><hr>\n<ul>\n<li>使用img.load()确保图片加载完成，此时可精确图片比例</li>\n<li>获取图片宽高比例，与容器比例进行比较</li>\n</ul>\n<h3 id=\"最短边对齐，过长隐藏：full方法\"><a href=\"#最短边对齐，过长隐藏：full方法\" class=\"headerlink\" title=\"最短边对齐，过长隐藏：full方法\"></a>最短边对齐，过长隐藏：full方法</h3><ul>\n<li>容器宽高比大于图片时，图片高度100%，宽度按比例缩放按比例缩放</li>\n<li>容器宽高比小于图片时，图片宽度100%，高度按比例缩放按比例缩放</li>\n<li>使用绝对定位将容器内图片居中</li>\n<li>设置容器overflow: hidden;隐藏图片过长部分</li>\n</ul>\n<h3 id=\"最长边对齐，填充背景：fill方法\"><a href=\"#最长边对齐，填充背景：fill方法\" class=\"headerlink\" title=\"最长边对齐，填充背景：fill方法\"></a>最长边对齐，填充背景：fill方法</h3><ul>\n<li>容器宽高比大于图片时，图片宽度100%，高度按比例缩放</li>\n<li>容器宽高比小于图片时，图片高度100%，宽度按比例缩放</li>\n<li>使用绝对定位将容器内图片居中</li>\n<li>设置容器background，填充背景</li>\n</ul>\n<h2 id=\"待完善的地方\"><a href=\"#待完善的地方\" class=\"headerlink\" title=\"待完善的地方\"></a>待完善的地方</h2><hr>\n<ul>\n<li>需要在图片加载完之后回调，可自行增加回调函数</li>\n<li>去到哪里都别忘了优化代码哦</li>\n</ul>\n<h2 id=\"插件代码\"><a href=\"#插件代码\" class=\"headerlink\" title=\"插件代码\"></a>插件代码</h2><hr>\n<p>请别叫我下划线狂魔^_^<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">;</span><br><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">$, window, document, undefined</span>) </span>&#123;</span><br><span class=\"line\">  $.fn.bsPictureAlign = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">options</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> num = <span class=\"keyword\">this</span>.length,</span><br><span class=\"line\">      loadnum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">//若为多个容器，分别初始化每个容器</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; <span class=\"keyword\">this</span>.length; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> _this = <span class=\"keyword\">this</span>[i];</span><br><span class=\"line\">      <span class=\"comment\">//创建bsPictureAlign实体</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> bsPictureAlign = <span class=\"keyword\">new</span> BsPictureAlign(_this, options);</span><br><span class=\"line\">      <span class=\"comment\">//调用其方法</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (options.style == <span class=\"string\">\"full\"</span>) bsPictureAlign.full();</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (options.style == <span class=\"string\">\"fill\"</span>) bsPictureAlign.fill(&#123;</span><br><span class=\"line\">        <span class=\"comment\">//这里增加了回调函数，确保所有图片处理完毕后进行回调</span></span><br><span class=\"line\">        callback: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">          loadnum++;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (num == loadnum &amp;&amp; options.loadover) &#123;</span><br><span class=\"line\">            options.loadover();</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"comment\">//定义原型</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> BsPictureAlign = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">ele, opt</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.$ele = ele;</span><br><span class=\"line\">    <span class=\"comment\">//若无定义宽高背景，使用默认值</span></span><br><span class=\"line\">      <span class=\"keyword\">this</span>.defaults = &#123;</span><br><span class=\"line\">        <span class=\"string\">\"width\"</span>: <span class=\"string\">\"100%\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"height\"</span>: <span class=\"string\">\"300px\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"background\"</span>: <span class=\"string\">\"#000\"</span></span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.options = $.extend(&#123;&#125;, <span class=\"keyword\">this</span>.defaults, opt);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  BsPictureAlign.prototype = &#123;</span><br><span class=\"line\">    <span class=\"comment\">//定义fill方法</span></span><br><span class=\"line\">    fill: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">opc</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span>,</span><br><span class=\"line\">        _options = that.options,</span><br><span class=\"line\">        _ele = $(<span class=\"keyword\">this</span>.$ele),</span><br><span class=\"line\">        _dom = _options.img_dom,</span><br><span class=\"line\">        _img = _dom ? _ele.find(_dom) : _ele.find(<span class=\"string\">\"img\"</span>),</span><br><span class=\"line\">        _this, _width, _height, _ratio, _w, _h, _r, _wider;</span><br><span class=\"line\">      <span class=\"comment\">//修改图片容器宽高</span></span><br><span class=\"line\">      _ele.css(&#123;</span><br><span class=\"line\">        <span class=\"string\">\"width\"</span>: _options.width,</span><br><span class=\"line\">        <span class=\"string\">\"height\"</span>: _options.height,</span><br><span class=\"line\">        <span class=\"string\">\"overflow\"</span>: <span class=\"string\">\"hidden\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"background\"</span>: _options.background,</span><br><span class=\"line\">        <span class=\"string\">\"position\"</span>: <span class=\"string\">\"relative\"</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"comment\">//容器比例</span></span><br><span class=\"line\">      _width = _ele.width();</span><br><span class=\"line\">      _height = _ele.height();</span><br><span class=\"line\">      _ratio = _width / _height;</span><br><span class=\"line\">      <span class=\"comment\">//每张所选图片进行处理</span></span><br><span class=\"line\">      _img.each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        _this = $(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        <span class=\"comment\">//此处可选，用来保证图片加载完之前不可见</span></span><br><span class=\"line\">        _this.css(&#123;</span><br><span class=\"line\">          <span class=\"string\">'opacity'</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"comment\">//此处确保图片加载完毕</span></span><br><span class=\"line\">        _this.load(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">          _w = _this.width();</span><br><span class=\"line\">          _h = _this.height();</span><br><span class=\"line\">          _r = _w / _h;</span><br><span class=\"line\">          _wider = _r &gt; _ratio ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>;</span><br><span class=\"line\">          <span class=\"comment\">//容器宽高比小于图片时，图片高度100%，宽度按比例缩放</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (_wider) &#123;</span><br><span class=\"line\">            _this.css(&#123;</span><br><span class=\"line\">              <span class=\"string\">\"width\"</span>: <span class=\"string\">\"100%\"</span>,</span><br><span class=\"line\">              <span class=\"string\">\"height\"</span>: <span class=\"string\">\"auto\"</span></span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> _top = (_height - _this.height()) / <span class=\"number\">2</span>;</span><br><span class=\"line\">            _this.css(&#123;</span><br><span class=\"line\">              <span class=\"string\">\"position\"</span>: <span class=\"string\">\"absolute\"</span>,</span><br><span class=\"line\">              <span class=\"string\">\"top\"</span>: _top + <span class=\"string\">\"px\"</span>,</span><br><span class=\"line\">              <span class=\"string\">\"left\"</span>: <span class=\"number\">0</span></span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">          <span class=\"comment\">//容器宽高比大于图片时，图片宽度100%，高度按比例缩放</span></span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            _this.css(&#123;</span><br><span class=\"line\">              <span class=\"string\">\"width\"</span>: <span class=\"string\">\"auto\"</span>,</span><br><span class=\"line\">              <span class=\"string\">\"height\"</span>: <span class=\"string\">\"100%\"</span></span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> _left = (_width - _this.width()) / <span class=\"number\">2</span>;</span><br><span class=\"line\">            _this.css(&#123;</span><br><span class=\"line\">              <span class=\"string\">\"position\"</span>: <span class=\"string\">\"absolute\"</span>,</span><br><span class=\"line\">              <span class=\"string\">\"top\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">              <span class=\"string\">\"left\"</span>: _left + <span class=\"string\">\"px\"</span></span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          _this.css(&#123;</span><br><span class=\"line\">            <span class=\"string\">'opacity'</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (opc.callback) opc.callback();</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        <span class=\"comment\">//此处图片加载失败处理</span></span><br><span class=\"line\">        _this.error(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (opc.callback) opc.callback();</span><br><span class=\"line\">          _this.css(&#123;</span><br><span class=\"line\">            <span class=\"string\">'opacity'</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">          &#125;);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"comment\">//链式回调</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">//定义full方法</span></span><br><span class=\"line\">    full: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> that = <span class=\"keyword\">this</span>,</span><br><span class=\"line\">        _options = that.options,</span><br><span class=\"line\">        _ele = $(<span class=\"keyword\">this</span>.$ele),</span><br><span class=\"line\">        _img = _ele.find(<span class=\"string\">\"img\"</span>),</span><br><span class=\"line\">        _this, _width, _height, _ratio, _w, _h, _r, _wider;</span><br><span class=\"line\">      <span class=\"comment\">//修改图片外壳宽高</span></span><br><span class=\"line\">      _ele.css(&#123;</span><br><span class=\"line\">        <span class=\"string\">\"width\"</span>: _options.width,</span><br><span class=\"line\">        <span class=\"string\">\"height\"</span>: _options.height,</span><br><span class=\"line\">        <span class=\"string\">\"overflow\"</span>: <span class=\"string\">\"hidden\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"background\"</span>: <span class=\"string\">\"#000\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"position\"</span>: <span class=\"string\">\"relative\"</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"comment\">//容器比例</span></span><br><span class=\"line\">      _width = _ele.width();</span><br><span class=\"line\">      _height = _ele.height();</span><br><span class=\"line\">      _ratio = _width / _height;</span><br><span class=\"line\">      <span class=\"comment\">//每张所选图片进行处理</span></span><br><span class=\"line\">      _img.each(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        _this = $(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        <span class=\"comment\">//此处确保图片加载完毕</span></span><br><span class=\"line\">        _this.load(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">          _w = _this.width();</span><br><span class=\"line\">          _h = _this.height();</span><br><span class=\"line\">          _r = _w / _h;</span><br><span class=\"line\">          _wider = _r &gt; _ratio ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>;</span><br><span class=\"line\">          <span class=\"comment\">//容器宽高比大于图片时，图片高度100%，宽度按比例缩放按比例缩放</span></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (_wider) &#123;</span><br><span class=\"line\">            _this.css(&#123;</span><br><span class=\"line\">              <span class=\"string\">\"width\"</span>: <span class=\"string\">\"auto\"</span>,</span><br><span class=\"line\">              <span class=\"string\">\"height\"</span>: <span class=\"string\">\"100%\"</span></span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> _left = (_width - _this.width()) / <span class=\"number\">2</span>;</span><br><span class=\"line\">            _this.css(&#123;</span><br><span class=\"line\">              <span class=\"string\">\"position\"</span>: <span class=\"string\">\"absolute\"</span>,</span><br><span class=\"line\">              <span class=\"string\">\"top\"</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">              <span class=\"string\">\"left\"</span>: _left + <span class=\"string\">\"px\"</span></span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">          <span class=\"comment\">//容器宽高比小于图片时，图片宽度100%，高度按比例缩放按比例缩放</span></span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            _this.css(&#123;</span><br><span class=\"line\">              <span class=\"string\">\"width\"</span>: <span class=\"string\">\"100%\"</span>,</span><br><span class=\"line\">              <span class=\"string\">\"height\"</span>: <span class=\"string\">\"auto\"</span></span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">            <span class=\"keyword\">var</span> _top = (_height - _this.height()) / <span class=\"number\">2</span>;</span><br><span class=\"line\">            _this.css(&#123;</span><br><span class=\"line\">              <span class=\"string\">\"position\"</span>: <span class=\"string\">\"absolute\"</span>,</span><br><span class=\"line\">              <span class=\"string\">\"top\"</span>: _top + <span class=\"string\">\"px\"</span>,</span><br><span class=\"line\">              <span class=\"string\">\"left\"</span>: <span class=\"number\">0</span></span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      <span class=\"comment\">//链式回调</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)(jQuery, <span class=\"built_in\">window</span>, <span class=\"built_in\">document</span>);</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h2><hr>\n<p>插件封装也是个有趣的事情哦，当然有兴趣也可以将逻辑封装成原生js插件哒。</p>"},{"title":"做一个拖放功能的自定义页面","date":"2016-06-19T07:42:49.000Z","_content":"以前写过一个拖放功能的页面，用来搭建自定义移动端页面。本文介绍实现方法。\n<!--more-->\n\n项目放在github上，有兴趣的小伙伴可以下载玩玩看\n[DD-custom-pages](https://github.com/godbasin/godbasin.github.io/tree/blog-codes/DD-custom-pages)\n已经没有在维护了，也基本没优化，但还是挺有意思的一个项目\n\n最终效果图如下[点击查看页面](http://o907xb1mi.bkt.clouddn.com/index.html)\n![image](http://o905ne85q.bkt.clouddn.com/dd_custom_pages.png)\n\n\n## 基本页面搭建\n-----\n首先是最基本的页面搭建\n- 三个基本布局对象\n  - 1.左侧布局列表\n  - 2.中间页面效果\n  - 3.右侧控件列表\n- 对象的事件处理\n对象基本事件的编写\n  - 1.布局切换，以及自定义布局事件\n  - 2.控件切换，选择等\n  \n样式布局什么的，这里就略过啦，具体可参考[项目](https://github.com/godbasin/DD-custom-pages)\n\n## 绑定鼠标左键按下事件\n-----\n### 需要进行绑定的对象\n- 需要进行鼠标左键按下绑定的对象有两种：布局和控件\n- 布局分为两种：左侧布局列表获取、中间页面效果获取的布局，class为fix-layout和float-layout区分\n- 控件同理: 右侧控件列表获取、中间页面效果获取的控件，class为fix-target和float-target区分\n\n- 全局绑定鼠标鼠标左键按下事件\n由于该项目中鼠标事件几乎是最主要事件，因此采用全局绑定\n\n### 点击对象后进行处理\n- 设置拖动标志true，此时可进行鼠标移动事件的处理，后面会提及\n- 这里采用复制元素的方式，jQuery实现，$().clone()复制元素对象\n- 复制对象后，设置对象位置、大小等，这里设置拖动时将元素宽度减小为一般\n\n### 若对象位于页面效果内，进行相关处理\n- 若是对象为布局，则插入布局位置效果\n\n``` javascript\n//绑定事件，这里使用了jQuery\n$(document).on('mousedown', mouseDown);\nfunction mouseDown(e) {\n\t//获取左键点击事件\n\tif (e.which == 1) {\n\t\t//定位当前事件位置，并取出相关元素\n\t\tposition_target(e);\n\t\t//处理左侧布局列表获取的布局元素事件\n\t\tif ($(target).attr('class') == \"fix-layout\") {\n\t\t\tdragging = true; //设置拖动标志\n\t\t\ttarget = $(target).clone(); //复制元素\n\t\t\t$(target).removeClass(\"fix-layout\").addClass(\"move-layout\"); //拖动时元素样式\n\t\t\t$(\".container\").append(target); //将复制的元素添加到页面\n\t\t}\n\t\t//处理中间布局列表获取的布局元素事件\n\t\tif ($(target).attr('class') == \"float-layout\") {\n\t\t\tdragging = true; //设置拖动标志\n\t\t\t$(target).removeClass(\"float-layout\").addClass(\"move-layout\"); //拖动时元素样式\n\t\t\t$(\".container\").append(target); //将元素移动到页面\n\t\t}\n\t\t//处理右侧控件列表获取的控件元素事件\n\t\tif ($(target).attr('class') == \"fix-target\") {\n\t\t\tdragging = true; //设置拖动标志\n\t\t\ttarget = $(target).clone(); //复制元素\n\t\t\t$(target).removeClass(\"fix-target\").addClass(\"move-target\"); //拖动时元素样式\n\t\t\t$(\".container\").append(target); //将复制的元素添加到页面\n\t\t}\n\t\t//处理中间布局列表获取的控件元素事件\n\t\tif ($(target).attr('class') == \"float-target\") {\n\t\t\tdragging = true; //设置拖动标志\n\t\t\t$(target).removeClass(\"float-target\").addClass(\"move-target\"); //拖动时元素样式\n\t\t\t$(\".container\").append(target); //将元素移动到页面\n\t\t\t$(target).children(\".header, .footer, .nav, .content, .slider-7, .slider-8, .slider-9\").css(\"height\", \"auto\"); //拖动时元素内层控件样式\n\t\t\t$(target).children(\".listview-l\").css(\"height\", \"100px\"); //拖动时元素内层控件样式\n\t\t\t$(target).children(\".listview-s\").css(\"height\", \"50px\"); //拖动时元素内层控件样式\n\t\t}\n\t\t//判断是否有元素在拖动，将元素位置设置在当前鼠标位置\n\t\tif (dragging) {\n\t\t\tvar oX = getMousePos(e).x - $(target).width() / 2;\n\t\t\tvar oY = getMousePos(e).y - $(target).height() / 2;\n\t\t\t$(target).css({\n\t\t\t\t\"left\": oX + \"px\",\n\t\t\t\t\"top\": oY + \"px\"\n\t\t\t});\n\t\t}\n\t\t//定位当前事件位置，判断是否在合适的位置\n\t\t//若当前元素为布局，且位置为页面效果内，则添加提示，元素放置的位置\n\t\tposition_box(e);\n\t\tif ($(box).attr('id') == \"box\") {\n\t\t\tif ($(target).attr('class') == \"move-layout\" || $(target).attr('class') == \"move-layout-over\") {\n\t\t\t\t$(target).removeClass(\"move-layout\").addClass(\"move-layout-over\");\n\t\t\t\tif (dropping == false) {\n\t\t\t\t\tdrop = $(\"<div class='drop-layout'></div>\");\n\t\t\t\t\tmoveDrop();\n\t\t\t\t\t$(\"#box-content\").append(drop);\n\t\t\t\t\tdropping = true;\n\t\t\t\t} else {\n\t\t\t\t\t$(drop).remove();\n\t\t\t\t\tmoveDrop();\n\t\t\t\t\t$(\"#box-content\").append(drop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n```\n\n## 定位当前位置是否有特定元素\n-----\n- 使用鼠标定位获取相关布局或者控件对象\n这里可参考上一篇文章：[《js判断某个位置是否特定元素》](https://godbasin.github.io/2016/06/19/position-object/)\n\n- 获取当前鼠标位置\n``` javascript\nfunction getMousePos(event) {\n\tvar e = event || window.event;\n\tvar scrollX = document.documentElement.scrollLeft || document.body.scrollLeft;\n\tvar scrollY = document.documentElement.scrollTop || document.body.scrollTop;\n\tvar x = e.pageX || e.clientX + scrollX;\n\tvar y = e.pageY || e.clientY + scrollY;\n\treturn {\n\t\t'x': x,\n\t\t'y': y\n\t};\n}\n```\n\n- 定位当前位置是否有布局或者控件对象position_target\n``` javascript\nfunction position_target(e) {\n\tvar e = e || window.event;\n\tvar scrollX = document.documentElement.scrollLeft || document.body.scrollLeft;\n\tvar scrollY = document.documentElement.scrollTop || document.body.scrollTop;\n\tvar eventX = e.pageX - scrollX || e.clientX;\n\tvar eventY = e.pageY - scrollY || e.clientY;\n\ttarget = document.elementFromPoint(eventX, eventY);\n\ttarget = fnGetTable(target);\n}\nfunction fnGetTable(oEl) {\n\twhile (null != oEl && $(oEl).attr('class') != \"fix-target\" && $(oEl).attr('id') != \"set-layout\" && $(oEl).attr('id') != \"save-page\" && $(oEl).attr('class') != \"box-footer\" && $(oEl).attr('class') != \"to-edit\" && $(oEl).attr('class') != \"edit\" && $(oEl).attr('class') != \"container\" && $(oEl).attr('class') != \"float-target\" && $(oEl).attr('class') != \"fix-layout\" && $(oEl).attr('class') != \"float-layout\") {\n\t\toEl = oEl.parentElement;\n\t}\n\treturn oEl;\n}\n```\n- 定位当前位置是否有在页面效果的布局里position_target\n``` javascript\nfunction position_box(e) {\n\tvar e = e || window.event;\n\tvar scrollX = document.documentElement.scrollLeft || document.body.scrollLeft;\n\tvar scrollY = document.documentElement.scrollTop || document.body.scrollTop;\n\tvar eventX = e.pageX - scrollX || e.clientX;\n\tvar eventY = $(target).offset().top - 1 - scrollY;\n\tbox = document.elementFromPoint(eventX, eventY);\n\tbox = fnGetTable2(box);\n}\nfunction fnGetTable2(oEl) {\n\twhile (null != oEl && $(oEl).attr('id') != \"box\" && $(oEl).attr('class') != \"container\" && $(oEl).attr('data-type') != \"layout\") {\n\t\toEl = oEl.parentElement;\n\t}\n\treturn oEl;\n}\n```\n\n## 绑定鼠标移动事件\n-----\n### 需要进行的判断\n- 是否有正在拖动的布局或者控件\n- 当前鼠标位置是否在页面效果内，添加布局示意（蓝色框框表示即将添加布局的位置）\n- 当前鼠标位置是否在页面效果内的某个布局上方，在相应位置添加布局示意\n- 全局绑定鼠标移动事件\n\n``` javascript\n$(document).mousemove(function(e) {\n\t//判断是否有正在拖动的布局或者控件\n\tif (dragging) {\n\t\t//正在拖动的对象位置跟随鼠标移动\n\t\tvar oX = getMousePos(e).x - $(target).width() / 2;\n\t\tvar oY = getMousePos(e).y - $(target).height() / 2;\n\t\t$(target).css({\n\t\t\t\"left\": oX + \"px\",\n\t\t\t\"top\": oY + \"px\"\n\t\t});\n\t\t//定位当前事件位置\n\t\tposition_box(e);\n\t\t//判断当前位置在页面效果内，且在某个布局上方，布局示意添加在当前布局前方\n\t\tif ($(box).attr('data-type') == \"layout\" && $(box).parent().attr('class') == \"float-layout\") {\n\t\t\tif ($(target).attr('class') == \"move-layout\" || $(target).attr('class') == \"move-layout-over\") {\n\t\t\t\t$(target).removeClass(\"move-layout\").addClass(\"move-layout-over\");\n\t\t\t\tif (dropping == false) {\n\t\t\t\t\tdrop = $(\"<div class='drop-layout'></div>\");\n\t\t\t\t\tmoveDrop();\n\t\t\t\t\t$($(box).parent()).before(drop);\n\t\t\t\t\tdropping = true;\n\t\t\t\t} else {\n\t\t\t\t\t$(drop).remove();\n\t\t\t\t\tmoveDrop();\n\t\t\t\t\t$($(box).parent()).before(drop);\n\t\t\t\t}\n\t\t\t}\n\t\t//判断当前位置在页面效果内，且不在某个布局上方，布局示意添加在页面效果最后\n\t\t} else if ($(box).attr('id') == \"box\") {\n\t\t\tif ($(target).attr('class') == \"move-layout\" || $(target).attr('class') == \"move-layout-over\") {\n\t\t\t\t$(target).removeClass(\"move-layout\").addClass(\"move-layout-over\");\n\t\t\t\tif (dropping == false) {\n\t\t\t\t\tdrop = $(\"<div class='drop-layout'></div>\");\n\t\t\t\t\tmoveDrop();\n\t\t\t\t\t$(\"#box-content\").append(drop);\n\t\t\t\t\tdropping = true;\n\t\t\t\t} else {\n\t\t\t\t\t$(drop).remove();\n\t\t\t\t\tmoveDrop();\n\t\t\t\t\t$(\"#box-content\").append(drop);\n\t\t\t\t}\n\t\t\t}\n\t\t//判断当前位置不在页面效果内，移除布局示意\n\t\t} else {\n\t\t\tif ($(target).attr('class') == \"move-layout-over\") {\n\t\t\t\t$(target).removeClass(\"move-layout-over\").addClass(\"move-layout\");\n\t\t\t}\n\t\t\tif (dropping == true) {\n\t\t\t\t$(drop).remove();\n\t\t\t\tdropping = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n});\n```\n\n## 绑定鼠标左键松开事件\n-----\n### 效果事件\n- 当前拖动的对象为布局，且当前鼠标位置是否在页面效果内，添加布局\n- 当前拖动的对象为控件，且当前鼠标位置是否在页面效果内某个布局上方，且该布局内无其他控件，添加控件至布局\n- 当前鼠标位置不在页面效果内，移除拖动的对象\n\n### 需要进行的判断\n- 是否有正在拖动的布局或者控件\n- 当前鼠标位置是否在页面效果内\n- 当前拖动的对象是否为布局，且当前鼠标位置是否在页面效果内\n- 当前拖动的对象是否为控件，且当前鼠标位置是否在页面效果内某个布局上方，该布局是否为空\n- 全局绑定鼠标左键松开事件\n\n``` javascript\n$(document).mouseup(function(e) {\n\t//定位当前事件位置\n\tposition_box(e);\n\te.cancelBubble = true;\n\t//判断是否有正在拖动的布局或者控件\n\tif (dragging == true) {\n\t\t//当前位置为页面效果内的某个布局上方，添加布局或者添加控件\n\t\tif (($(box).attr('data-type') == \"layout\" && $(box).parent().attr('class') == \"float-layout\") || ($(box).attr('data-type') == \"layout\" && $(box).parent().attr('data-type') == \"layout\")) {\n\t\t\tif ($(target).attr('class') == \"move-target\" && $(box).children().length == 0) {\n\t\t\t\t$(target).removeClass(\"move-target\").addClass(\"float-target\");\n\t\t\t\t$(target).children(\".header, .footer, .nav, .listview-l, .listview-s, .content, .slider-7, .slider-8, .slider-9\").css(\"height\", \"100%\");\n\t\t\t\t$(box).append(target);\n\t\t\t} else if ($(target).attr('class') == \"move-layout-over\") {\n\t\t\t\tif (dropping) {\n\t\t\t\t\t$(target).removeClass(\"move-layout-over\").addClass(\"float-layout\");\n\t\t\t\t\t$(drop).before($(target));\n\t\t\t\t}\n\t\t\t} else $(target).remove();\n\t\t//当前位置为页面效果内，添加布局\n\t\t} else if ($(box).attr('id') == \"box\") {\n\t\t\tif ($(target).attr('class') == \"move-layout-over\") {\n\t\t\t\tif (dropping) {\n\t\t\t\t\t$(target).removeClass(\"move-layout-over\").addClass(\"float-layout\");\n\t\t\t\t\t$(drop).before($(target));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$(target).remove();\n\t\t\t}\n\t\t//当前鼠标位置不在页面效果内，移除拖动的对象\n\t\t} else {\n\t\t\t$(target).remove();\n\t\t}\n\t}\n\t$(drop).remove();\n\tdropping = false;\n\tdragging = false;\n});\n```\n\n## 完善后续处理\n-----\n- 编辑控件样式\n  - 在页面效果内的控件可进行编辑（改变颜色、内容等）\n- 保存页面效果\n  - 这里为了偷懒直接把整个html导出，将它导出保存到html页面内，并加载相应的样式\n  - 当然为了数据处理的方便，你也可以将这一切都转成数据保存到数据库，提取的时候进行相关处理就好了\n\n## 结束语\n-----\n有时候写些有意思的项目也是很不错的，脑洞要大大的，当然事后别忘了优化哦。","source":"_posts/drag-and-drop.md","raw":"---\ntitle: 做一个拖放功能的自定义页面\ndate: 2016-06-19 15:42:49\ncategories: js什锦\ntags: 原创部件\n---\n以前写过一个拖放功能的页面，用来搭建自定义移动端页面。本文介绍实现方法。\n<!--more-->\n\n项目放在github上，有兴趣的小伙伴可以下载玩玩看\n[DD-custom-pages](https://github.com/godbasin/godbasin.github.io/tree/blog-codes/DD-custom-pages)\n已经没有在维护了，也基本没优化，但还是挺有意思的一个项目\n\n最终效果图如下[点击查看页面](http://o907xb1mi.bkt.clouddn.com/index.html)\n![image](http://o905ne85q.bkt.clouddn.com/dd_custom_pages.png)\n\n\n## 基本页面搭建\n-----\n首先是最基本的页面搭建\n- 三个基本布局对象\n  - 1.左侧布局列表\n  - 2.中间页面效果\n  - 3.右侧控件列表\n- 对象的事件处理\n对象基本事件的编写\n  - 1.布局切换，以及自定义布局事件\n  - 2.控件切换，选择等\n  \n样式布局什么的，这里就略过啦，具体可参考[项目](https://github.com/godbasin/DD-custom-pages)\n\n## 绑定鼠标左键按下事件\n-----\n### 需要进行绑定的对象\n- 需要进行鼠标左键按下绑定的对象有两种：布局和控件\n- 布局分为两种：左侧布局列表获取、中间页面效果获取的布局，class为fix-layout和float-layout区分\n- 控件同理: 右侧控件列表获取、中间页面效果获取的控件，class为fix-target和float-target区分\n\n- 全局绑定鼠标鼠标左键按下事件\n由于该项目中鼠标事件几乎是最主要事件，因此采用全局绑定\n\n### 点击对象后进行处理\n- 设置拖动标志true，此时可进行鼠标移动事件的处理，后面会提及\n- 这里采用复制元素的方式，jQuery实现，$().clone()复制元素对象\n- 复制对象后，设置对象位置、大小等，这里设置拖动时将元素宽度减小为一般\n\n### 若对象位于页面效果内，进行相关处理\n- 若是对象为布局，则插入布局位置效果\n\n``` javascript\n//绑定事件，这里使用了jQuery\n$(document).on('mousedown', mouseDown);\nfunction mouseDown(e) {\n\t//获取左键点击事件\n\tif (e.which == 1) {\n\t\t//定位当前事件位置，并取出相关元素\n\t\tposition_target(e);\n\t\t//处理左侧布局列表获取的布局元素事件\n\t\tif ($(target).attr('class') == \"fix-layout\") {\n\t\t\tdragging = true; //设置拖动标志\n\t\t\ttarget = $(target).clone(); //复制元素\n\t\t\t$(target).removeClass(\"fix-layout\").addClass(\"move-layout\"); //拖动时元素样式\n\t\t\t$(\".container\").append(target); //将复制的元素添加到页面\n\t\t}\n\t\t//处理中间布局列表获取的布局元素事件\n\t\tif ($(target).attr('class') == \"float-layout\") {\n\t\t\tdragging = true; //设置拖动标志\n\t\t\t$(target).removeClass(\"float-layout\").addClass(\"move-layout\"); //拖动时元素样式\n\t\t\t$(\".container\").append(target); //将元素移动到页面\n\t\t}\n\t\t//处理右侧控件列表获取的控件元素事件\n\t\tif ($(target).attr('class') == \"fix-target\") {\n\t\t\tdragging = true; //设置拖动标志\n\t\t\ttarget = $(target).clone(); //复制元素\n\t\t\t$(target).removeClass(\"fix-target\").addClass(\"move-target\"); //拖动时元素样式\n\t\t\t$(\".container\").append(target); //将复制的元素添加到页面\n\t\t}\n\t\t//处理中间布局列表获取的控件元素事件\n\t\tif ($(target).attr('class') == \"float-target\") {\n\t\t\tdragging = true; //设置拖动标志\n\t\t\t$(target).removeClass(\"float-target\").addClass(\"move-target\"); //拖动时元素样式\n\t\t\t$(\".container\").append(target); //将元素移动到页面\n\t\t\t$(target).children(\".header, .footer, .nav, .content, .slider-7, .slider-8, .slider-9\").css(\"height\", \"auto\"); //拖动时元素内层控件样式\n\t\t\t$(target).children(\".listview-l\").css(\"height\", \"100px\"); //拖动时元素内层控件样式\n\t\t\t$(target).children(\".listview-s\").css(\"height\", \"50px\"); //拖动时元素内层控件样式\n\t\t}\n\t\t//判断是否有元素在拖动，将元素位置设置在当前鼠标位置\n\t\tif (dragging) {\n\t\t\tvar oX = getMousePos(e).x - $(target).width() / 2;\n\t\t\tvar oY = getMousePos(e).y - $(target).height() / 2;\n\t\t\t$(target).css({\n\t\t\t\t\"left\": oX + \"px\",\n\t\t\t\t\"top\": oY + \"px\"\n\t\t\t});\n\t\t}\n\t\t//定位当前事件位置，判断是否在合适的位置\n\t\t//若当前元素为布局，且位置为页面效果内，则添加提示，元素放置的位置\n\t\tposition_box(e);\n\t\tif ($(box).attr('id') == \"box\") {\n\t\t\tif ($(target).attr('class') == \"move-layout\" || $(target).attr('class') == \"move-layout-over\") {\n\t\t\t\t$(target).removeClass(\"move-layout\").addClass(\"move-layout-over\");\n\t\t\t\tif (dropping == false) {\n\t\t\t\t\tdrop = $(\"<div class='drop-layout'></div>\");\n\t\t\t\t\tmoveDrop();\n\t\t\t\t\t$(\"#box-content\").append(drop);\n\t\t\t\t\tdropping = true;\n\t\t\t\t} else {\n\t\t\t\t\t$(drop).remove();\n\t\t\t\t\tmoveDrop();\n\t\t\t\t\t$(\"#box-content\").append(drop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n}\n```\n\n## 定位当前位置是否有特定元素\n-----\n- 使用鼠标定位获取相关布局或者控件对象\n这里可参考上一篇文章：[《js判断某个位置是否特定元素》](https://godbasin.github.io/2016/06/19/position-object/)\n\n- 获取当前鼠标位置\n``` javascript\nfunction getMousePos(event) {\n\tvar e = event || window.event;\n\tvar scrollX = document.documentElement.scrollLeft || document.body.scrollLeft;\n\tvar scrollY = document.documentElement.scrollTop || document.body.scrollTop;\n\tvar x = e.pageX || e.clientX + scrollX;\n\tvar y = e.pageY || e.clientY + scrollY;\n\treturn {\n\t\t'x': x,\n\t\t'y': y\n\t};\n}\n```\n\n- 定位当前位置是否有布局或者控件对象position_target\n``` javascript\nfunction position_target(e) {\n\tvar e = e || window.event;\n\tvar scrollX = document.documentElement.scrollLeft || document.body.scrollLeft;\n\tvar scrollY = document.documentElement.scrollTop || document.body.scrollTop;\n\tvar eventX = e.pageX - scrollX || e.clientX;\n\tvar eventY = e.pageY - scrollY || e.clientY;\n\ttarget = document.elementFromPoint(eventX, eventY);\n\ttarget = fnGetTable(target);\n}\nfunction fnGetTable(oEl) {\n\twhile (null != oEl && $(oEl).attr('class') != \"fix-target\" && $(oEl).attr('id') != \"set-layout\" && $(oEl).attr('id') != \"save-page\" && $(oEl).attr('class') != \"box-footer\" && $(oEl).attr('class') != \"to-edit\" && $(oEl).attr('class') != \"edit\" && $(oEl).attr('class') != \"container\" && $(oEl).attr('class') != \"float-target\" && $(oEl).attr('class') != \"fix-layout\" && $(oEl).attr('class') != \"float-layout\") {\n\t\toEl = oEl.parentElement;\n\t}\n\treturn oEl;\n}\n```\n- 定位当前位置是否有在页面效果的布局里position_target\n``` javascript\nfunction position_box(e) {\n\tvar e = e || window.event;\n\tvar scrollX = document.documentElement.scrollLeft || document.body.scrollLeft;\n\tvar scrollY = document.documentElement.scrollTop || document.body.scrollTop;\n\tvar eventX = e.pageX - scrollX || e.clientX;\n\tvar eventY = $(target).offset().top - 1 - scrollY;\n\tbox = document.elementFromPoint(eventX, eventY);\n\tbox = fnGetTable2(box);\n}\nfunction fnGetTable2(oEl) {\n\twhile (null != oEl && $(oEl).attr('id') != \"box\" && $(oEl).attr('class') != \"container\" && $(oEl).attr('data-type') != \"layout\") {\n\t\toEl = oEl.parentElement;\n\t}\n\treturn oEl;\n}\n```\n\n## 绑定鼠标移动事件\n-----\n### 需要进行的判断\n- 是否有正在拖动的布局或者控件\n- 当前鼠标位置是否在页面效果内，添加布局示意（蓝色框框表示即将添加布局的位置）\n- 当前鼠标位置是否在页面效果内的某个布局上方，在相应位置添加布局示意\n- 全局绑定鼠标移动事件\n\n``` javascript\n$(document).mousemove(function(e) {\n\t//判断是否有正在拖动的布局或者控件\n\tif (dragging) {\n\t\t//正在拖动的对象位置跟随鼠标移动\n\t\tvar oX = getMousePos(e).x - $(target).width() / 2;\n\t\tvar oY = getMousePos(e).y - $(target).height() / 2;\n\t\t$(target).css({\n\t\t\t\"left\": oX + \"px\",\n\t\t\t\"top\": oY + \"px\"\n\t\t});\n\t\t//定位当前事件位置\n\t\tposition_box(e);\n\t\t//判断当前位置在页面效果内，且在某个布局上方，布局示意添加在当前布局前方\n\t\tif ($(box).attr('data-type') == \"layout\" && $(box).parent().attr('class') == \"float-layout\") {\n\t\t\tif ($(target).attr('class') == \"move-layout\" || $(target).attr('class') == \"move-layout-over\") {\n\t\t\t\t$(target).removeClass(\"move-layout\").addClass(\"move-layout-over\");\n\t\t\t\tif (dropping == false) {\n\t\t\t\t\tdrop = $(\"<div class='drop-layout'></div>\");\n\t\t\t\t\tmoveDrop();\n\t\t\t\t\t$($(box).parent()).before(drop);\n\t\t\t\t\tdropping = true;\n\t\t\t\t} else {\n\t\t\t\t\t$(drop).remove();\n\t\t\t\t\tmoveDrop();\n\t\t\t\t\t$($(box).parent()).before(drop);\n\t\t\t\t}\n\t\t\t}\n\t\t//判断当前位置在页面效果内，且不在某个布局上方，布局示意添加在页面效果最后\n\t\t} else if ($(box).attr('id') == \"box\") {\n\t\t\tif ($(target).attr('class') == \"move-layout\" || $(target).attr('class') == \"move-layout-over\") {\n\t\t\t\t$(target).removeClass(\"move-layout\").addClass(\"move-layout-over\");\n\t\t\t\tif (dropping == false) {\n\t\t\t\t\tdrop = $(\"<div class='drop-layout'></div>\");\n\t\t\t\t\tmoveDrop();\n\t\t\t\t\t$(\"#box-content\").append(drop);\n\t\t\t\t\tdropping = true;\n\t\t\t\t} else {\n\t\t\t\t\t$(drop).remove();\n\t\t\t\t\tmoveDrop();\n\t\t\t\t\t$(\"#box-content\").append(drop);\n\t\t\t\t}\n\t\t\t}\n\t\t//判断当前位置不在页面效果内，移除布局示意\n\t\t} else {\n\t\t\tif ($(target).attr('class') == \"move-layout-over\") {\n\t\t\t\t$(target).removeClass(\"move-layout-over\").addClass(\"move-layout\");\n\t\t\t}\n\t\t\tif (dropping == true) {\n\t\t\t\t$(drop).remove();\n\t\t\t\tdropping = false;\n\t\t\t}\n\t\t}\n\t}\n\treturn false;\n});\n```\n\n## 绑定鼠标左键松开事件\n-----\n### 效果事件\n- 当前拖动的对象为布局，且当前鼠标位置是否在页面效果内，添加布局\n- 当前拖动的对象为控件，且当前鼠标位置是否在页面效果内某个布局上方，且该布局内无其他控件，添加控件至布局\n- 当前鼠标位置不在页面效果内，移除拖动的对象\n\n### 需要进行的判断\n- 是否有正在拖动的布局或者控件\n- 当前鼠标位置是否在页面效果内\n- 当前拖动的对象是否为布局，且当前鼠标位置是否在页面效果内\n- 当前拖动的对象是否为控件，且当前鼠标位置是否在页面效果内某个布局上方，该布局是否为空\n- 全局绑定鼠标左键松开事件\n\n``` javascript\n$(document).mouseup(function(e) {\n\t//定位当前事件位置\n\tposition_box(e);\n\te.cancelBubble = true;\n\t//判断是否有正在拖动的布局或者控件\n\tif (dragging == true) {\n\t\t//当前位置为页面效果内的某个布局上方，添加布局或者添加控件\n\t\tif (($(box).attr('data-type') == \"layout\" && $(box).parent().attr('class') == \"float-layout\") || ($(box).attr('data-type') == \"layout\" && $(box).parent().attr('data-type') == \"layout\")) {\n\t\t\tif ($(target).attr('class') == \"move-target\" && $(box).children().length == 0) {\n\t\t\t\t$(target).removeClass(\"move-target\").addClass(\"float-target\");\n\t\t\t\t$(target).children(\".header, .footer, .nav, .listview-l, .listview-s, .content, .slider-7, .slider-8, .slider-9\").css(\"height\", \"100%\");\n\t\t\t\t$(box).append(target);\n\t\t\t} else if ($(target).attr('class') == \"move-layout-over\") {\n\t\t\t\tif (dropping) {\n\t\t\t\t\t$(target).removeClass(\"move-layout-over\").addClass(\"float-layout\");\n\t\t\t\t\t$(drop).before($(target));\n\t\t\t\t}\n\t\t\t} else $(target).remove();\n\t\t//当前位置为页面效果内，添加布局\n\t\t} else if ($(box).attr('id') == \"box\") {\n\t\t\tif ($(target).attr('class') == \"move-layout-over\") {\n\t\t\t\tif (dropping) {\n\t\t\t\t\t$(target).removeClass(\"move-layout-over\").addClass(\"float-layout\");\n\t\t\t\t\t$(drop).before($(target));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$(target).remove();\n\t\t\t}\n\t\t//当前鼠标位置不在页面效果内，移除拖动的对象\n\t\t} else {\n\t\t\t$(target).remove();\n\t\t}\n\t}\n\t$(drop).remove();\n\tdropping = false;\n\tdragging = false;\n});\n```\n\n## 完善后续处理\n-----\n- 编辑控件样式\n  - 在页面效果内的控件可进行编辑（改变颜色、内容等）\n- 保存页面效果\n  - 这里为了偷懒直接把整个html导出，将它导出保存到html页面内，并加载相应的样式\n  - 当然为了数据处理的方便，你也可以将这一切都转成数据保存到数据库，提取的时候进行相关处理就好了\n\n## 结束语\n-----\n有时候写些有意思的项目也是很不错的，脑洞要大大的，当然事后别忘了优化哦。","slug":"drag-and-drop","published":1,"updated":"2016-06-24T14:07:14.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cipv4ddhk000lq0l5un26bd62","content":"<p>以前写过一个拖放功能的页面，用来搭建自定义移动端页面。本文介绍实现方法。<br><a id=\"more\"></a></p>\n<p>项目放在github上，有兴趣的小伙伴可以下载玩玩看<br><a href=\"https://github.com/godbasin/godbasin.github.io/tree/blog-codes/DD-custom-pages\" target=\"_blank\" rel=\"external\">DD-custom-pages</a><br>已经没有在维护了，也基本没优化，但还是挺有意思的一个项目</p>\n<p>最终效果图如下<a href=\"http://o907xb1mi.bkt.clouddn.com/index.html\" target=\"_blank\" rel=\"external\">点击查看页面</a><br><img src=\"http://o905ne85q.bkt.clouddn.com/dd_custom_pages.png\" alt=\"image\"></p>\n<h2 id=\"基本页面搭建\"><a href=\"#基本页面搭建\" class=\"headerlink\" title=\"基本页面搭建\"></a>基本页面搭建</h2><hr>\n<p>首先是最基本的页面搭建</p>\n<ul>\n<li>三个基本布局对象<ul>\n<li>1.左侧布局列表</li>\n<li>2.中间页面效果</li>\n<li>3.右侧控件列表</li>\n</ul>\n</li>\n<li>对象的事件处理<br>对象基本事件的编写<ul>\n<li>1.布局切换，以及自定义布局事件</li>\n<li>2.控件切换，选择等</li>\n</ul>\n</li>\n</ul>\n<p>样式布局什么的，这里就略过啦，具体可参考<a href=\"https://github.com/godbasin/DD-custom-pages\" target=\"_blank\" rel=\"external\">项目</a></p>\n<h2 id=\"绑定鼠标左键按下事件\"><a href=\"#绑定鼠标左键按下事件\" class=\"headerlink\" title=\"绑定鼠标左键按下事件\"></a>绑定鼠标左键按下事件</h2><hr>\n<h3 id=\"需要进行绑定的对象\"><a href=\"#需要进行绑定的对象\" class=\"headerlink\" title=\"需要进行绑定的对象\"></a>需要进行绑定的对象</h3><ul>\n<li>需要进行鼠标左键按下绑定的对象有两种：布局和控件</li>\n<li>布局分为两种：左侧布局列表获取、中间页面效果获取的布局，class为fix-layout和float-layout区分</li>\n<li><p>控件同理: 右侧控件列表获取、中间页面效果获取的控件，class为fix-target和float-target区分</p>\n</li>\n<li><p>全局绑定鼠标鼠标左键按下事件<br>由于该项目中鼠标事件几乎是最主要事件，因此采用全局绑定</p>\n</li>\n</ul>\n<h3 id=\"点击对象后进行处理\"><a href=\"#点击对象后进行处理\" class=\"headerlink\" title=\"点击对象后进行处理\"></a>点击对象后进行处理</h3><ul>\n<li>设置拖动标志true，此时可进行鼠标移动事件的处理，后面会提及</li>\n<li>这里采用复制元素的方式，jQuery实现，$().clone()复制元素对象</li>\n<li>复制对象后，设置对象位置、大小等，这里设置拖动时将元素宽度减小为一般</li>\n</ul>\n<h3 id=\"若对象位于页面效果内，进行相关处理\"><a href=\"#若对象位于页面效果内，进行相关处理\" class=\"headerlink\" title=\"若对象位于页面效果内，进行相关处理\"></a>若对象位于页面效果内，进行相关处理</h3><ul>\n<li>若是对象为布局，则插入布局位置效果</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//绑定事件，这里使用了jQuery</span></span><br><span class=\"line\">$(<span class=\"built_in\">document</span>).on(<span class=\"string\">'mousedown'</span>, mouseDown);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mouseDown</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//获取左键点击事件</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (e.which == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//定位当前事件位置，并取出相关元素</span></span><br><span class=\"line\">    position_target(e);</span><br><span class=\"line\">    <span class=\"comment\">//处理左侧布局列表获取的布局元素事件</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($(target).attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"fix-layout\"</span>) &#123;</span><br><span class=\"line\">      dragging = <span class=\"literal\">true</span>; <span class=\"comment\">//设置拖动标志</span></span><br><span class=\"line\">      target = $(target).clone(); <span class=\"comment\">//复制元素</span></span><br><span class=\"line\">      $(target).removeClass(<span class=\"string\">\"fix-layout\"</span>).addClass(<span class=\"string\">\"move-layout\"</span>); <span class=\"comment\">//拖动时元素样式</span></span><br><span class=\"line\">      $(<span class=\"string\">\".container\"</span>).append(target); <span class=\"comment\">//将复制的元素添加到页面</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//处理中间布局列表获取的布局元素事件</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($(target).attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"float-layout\"</span>) &#123;</span><br><span class=\"line\">      dragging = <span class=\"literal\">true</span>; <span class=\"comment\">//设置拖动标志</span></span><br><span class=\"line\">      $(target).removeClass(<span class=\"string\">\"float-layout\"</span>).addClass(<span class=\"string\">\"move-layout\"</span>); <span class=\"comment\">//拖动时元素样式</span></span><br><span class=\"line\">      $(<span class=\"string\">\".container\"</span>).append(target); <span class=\"comment\">//将元素移动到页面</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//处理右侧控件列表获取的控件元素事件</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($(target).attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"fix-target\"</span>) &#123;</span><br><span class=\"line\">      dragging = <span class=\"literal\">true</span>; <span class=\"comment\">//设置拖动标志</span></span><br><span class=\"line\">      target = $(target).clone(); <span class=\"comment\">//复制元素</span></span><br><span class=\"line\">      $(target).removeClass(<span class=\"string\">\"fix-target\"</span>).addClass(<span class=\"string\">\"move-target\"</span>); <span class=\"comment\">//拖动时元素样式</span></span><br><span class=\"line\">      $(<span class=\"string\">\".container\"</span>).append(target); <span class=\"comment\">//将复制的元素添加到页面</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//处理中间布局列表获取的控件元素事件</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($(target).attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"float-target\"</span>) &#123;</span><br><span class=\"line\">      dragging = <span class=\"literal\">true</span>; <span class=\"comment\">//设置拖动标志</span></span><br><span class=\"line\">      $(target).removeClass(<span class=\"string\">\"float-target\"</span>).addClass(<span class=\"string\">\"move-target\"</span>); <span class=\"comment\">//拖动时元素样式</span></span><br><span class=\"line\">      $(<span class=\"string\">\".container\"</span>).append(target); <span class=\"comment\">//将元素移动到页面</span></span><br><span class=\"line\">      $(target).children(<span class=\"string\">\".header, .footer, .nav, .content, .slider-7, .slider-8, .slider-9\"</span>).css(<span class=\"string\">\"height\"</span>, <span class=\"string\">\"auto\"</span>); <span class=\"comment\">//拖动时元素内层控件样式</span></span><br><span class=\"line\">      $(target).children(<span class=\"string\">\".listview-l\"</span>).css(<span class=\"string\">\"height\"</span>, <span class=\"string\">\"100px\"</span>); <span class=\"comment\">//拖动时元素内层控件样式</span></span><br><span class=\"line\">      $(target).children(<span class=\"string\">\".listview-s\"</span>).css(<span class=\"string\">\"height\"</span>, <span class=\"string\">\"50px\"</span>); <span class=\"comment\">//拖动时元素内层控件样式</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//判断是否有元素在拖动，将元素位置设置在当前鼠标位置</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (dragging) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> oX = getMousePos(e).x - $(target).width() / <span class=\"number\">2</span>;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> oY = getMousePos(e).y - $(target).height() / <span class=\"number\">2</span>;</span><br><span class=\"line\">      $(target).css(&#123;</span><br><span class=\"line\">        <span class=\"string\">\"left\"</span>: oX + <span class=\"string\">\"px\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"top\"</span>: oY + <span class=\"string\">\"px\"</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//定位当前事件位置，判断是否在合适的位置</span></span><br><span class=\"line\">    <span class=\"comment\">//若当前元素为布局，且位置为页面效果内，则添加提示，元素放置的位置</span></span><br><span class=\"line\">    position_box(e);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($(box).attr(<span class=\"string\">'id'</span>) == <span class=\"string\">\"box\"</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ($(target).attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"move-layout\"</span> || $(target).attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"move-layout-over\"</span>) &#123;</span><br><span class=\"line\">        $(target).removeClass(<span class=\"string\">\"move-layout\"</span>).addClass(<span class=\"string\">\"move-layout-over\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dropping == <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">          drop = $(<span class=\"string\">\"&lt;div class='drop-layout'&gt;&lt;/div&gt;\"</span>);</span><br><span class=\"line\">          moveDrop();</span><br><span class=\"line\">          $(<span class=\"string\">\"#box-content\"</span>).append(drop);</span><br><span class=\"line\">          dropping = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          $(drop).remove();</span><br><span class=\"line\">          moveDrop();</span><br><span class=\"line\">          $(<span class=\"string\">\"#box-content\"</span>).append(drop);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"定位当前位置是否有特定元素\"><a href=\"#定位当前位置是否有特定元素\" class=\"headerlink\" title=\"定位当前位置是否有特定元素\"></a>定位当前位置是否有特定元素</h2><hr>\n<ul>\n<li><p>使用鼠标定位获取相关布局或者控件对象<br>这里可参考上一篇文章：<a href=\"https://godbasin.github.io/2016/06/19/position-object/\">《js判断某个位置是否特定元素》</a></p>\n</li>\n<li><p>获取当前鼠标位置</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getMousePos</span>(<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> e = event || <span class=\"built_in\">window</span>.event;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> scrollX = <span class=\"built_in\">document</span>.documentElement.scrollLeft || <span class=\"built_in\">document</span>.body.scrollLeft;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> scrollY = <span class=\"built_in\">document</span>.documentElement.scrollTop || <span class=\"built_in\">document</span>.body.scrollTop;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> x = e.pageX || e.clientX + scrollX;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> y = e.pageY || e.clientY + scrollY;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"string\">'x'</span>: x,</span><br><span class=\"line\">    <span class=\"string\">'y'</span>: y</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>定位当前位置是否有布局或者控件对象position_target</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">position_target</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> e = e || <span class=\"built_in\">window</span>.event;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> scrollX = <span class=\"built_in\">document</span>.documentElement.scrollLeft || <span class=\"built_in\">document</span>.body.scrollLeft;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> scrollY = <span class=\"built_in\">document</span>.documentElement.scrollTop || <span class=\"built_in\">document</span>.body.scrollTop;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> eventX = e.pageX - scrollX || e.clientX;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> eventY = e.pageY - scrollY || e.clientY;</span><br><span class=\"line\">  target = <span class=\"built_in\">document</span>.elementFromPoint(eventX, eventY);</span><br><span class=\"line\">  target = fnGetTable(target);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fnGetTable</span>(<span class=\"params\">oEl</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"literal\">null</span> != oEl &amp;&amp; $(oEl).attr(<span class=\"string\">'class'</span>) != <span class=\"string\">\"fix-target\"</span> &amp;&amp; $(oEl).attr(<span class=\"string\">'id'</span>) != <span class=\"string\">\"set-layout\"</span> &amp;&amp; $(oEl).attr(<span class=\"string\">'id'</span>) != <span class=\"string\">\"save-page\"</span> &amp;&amp; $(oEl).attr(<span class=\"string\">'class'</span>) != <span class=\"string\">\"box-footer\"</span> &amp;&amp; $(oEl).attr(<span class=\"string\">'class'</span>) != <span class=\"string\">\"to-edit\"</span> &amp;&amp; $(oEl).attr(<span class=\"string\">'class'</span>) != <span class=\"string\">\"edit\"</span> &amp;&amp; $(oEl).attr(<span class=\"string\">'class'</span>) != <span class=\"string\">\"container\"</span> &amp;&amp; $(oEl).attr(<span class=\"string\">'class'</span>) != <span class=\"string\">\"float-target\"</span> &amp;&amp; $(oEl).attr(<span class=\"string\">'class'</span>) != <span class=\"string\">\"fix-layout\"</span> &amp;&amp; $(oEl).attr(<span class=\"string\">'class'</span>) != <span class=\"string\">\"float-layout\"</span>) &#123;</span><br><span class=\"line\">    oEl = oEl.parentElement;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> oEl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>定位当前位置是否有在页面效果的布局里position_target</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">position_box</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> e = e || <span class=\"built_in\">window</span>.event;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> scrollX = <span class=\"built_in\">document</span>.documentElement.scrollLeft || <span class=\"built_in\">document</span>.body.scrollLeft;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> scrollY = <span class=\"built_in\">document</span>.documentElement.scrollTop || <span class=\"built_in\">document</span>.body.scrollTop;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> eventX = e.pageX - scrollX || e.clientX;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> eventY = $(target).offset().top - <span class=\"number\">1</span> - scrollY;</span><br><span class=\"line\">  box = <span class=\"built_in\">document</span>.elementFromPoint(eventX, eventY);</span><br><span class=\"line\">  box = fnGetTable2(box);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fnGetTable2</span>(<span class=\"params\">oEl</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"literal\">null</span> != oEl &amp;&amp; $(oEl).attr(<span class=\"string\">'id'</span>) != <span class=\"string\">\"box\"</span> &amp;&amp; $(oEl).attr(<span class=\"string\">'class'</span>) != <span class=\"string\">\"container\"</span> &amp;&amp; $(oEl).attr(<span class=\"string\">'data-type'</span>) != <span class=\"string\">\"layout\"</span>) &#123;</span><br><span class=\"line\">    oEl = oEl.parentElement;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> oEl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"绑定鼠标移动事件\"><a href=\"#绑定鼠标移动事件\" class=\"headerlink\" title=\"绑定鼠标移动事件\"></a>绑定鼠标移动事件</h2><hr>\n<h3 id=\"需要进行的判断\"><a href=\"#需要进行的判断\" class=\"headerlink\" title=\"需要进行的判断\"></a>需要进行的判断</h3><ul>\n<li>是否有正在拖动的布局或者控件</li>\n<li>当前鼠标位置是否在页面效果内，添加布局示意（蓝色框框表示即将添加布局的位置）</li>\n<li>当前鼠标位置是否在页面效果内的某个布局上方，在相应位置添加布局示意</li>\n<li>全局绑定鼠标移动事件</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"built_in\">document</span>).mousemove(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//判断是否有正在拖动的布局或者控件</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (dragging) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//正在拖动的对象位置跟随鼠标移动</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> oX = getMousePos(e).x - $(target).width() / <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> oY = getMousePos(e).y - $(target).height() / <span class=\"number\">2</span>;</span><br><span class=\"line\">    $(target).css(&#123;</span><br><span class=\"line\">      <span class=\"string\">\"left\"</span>: oX + <span class=\"string\">\"px\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"top\"</span>: oY + <span class=\"string\">\"px\"</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"comment\">//定位当前事件位置</span></span><br><span class=\"line\">    position_box(e);</span><br><span class=\"line\">    <span class=\"comment\">//判断当前位置在页面效果内，且在某个布局上方，布局示意添加在当前布局前方</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($(box).attr(<span class=\"string\">'data-type'</span>) == <span class=\"string\">\"layout\"</span> &amp;&amp; $(box).parent().attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"float-layout\"</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ($(target).attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"move-layout\"</span> || $(target).attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"move-layout-over\"</span>) &#123;</span><br><span class=\"line\">        $(target).removeClass(<span class=\"string\">\"move-layout\"</span>).addClass(<span class=\"string\">\"move-layout-over\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dropping == <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">          drop = $(<span class=\"string\">\"&lt;div class='drop-layout'&gt;&lt;/div&gt;\"</span>);</span><br><span class=\"line\">          moveDrop();</span><br><span class=\"line\">          $($(box).parent()).before(drop);</span><br><span class=\"line\">          dropping = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          $(drop).remove();</span><br><span class=\"line\">          moveDrop();</span><br><span class=\"line\">          $($(box).parent()).before(drop);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    <span class=\"comment\">//判断当前位置在页面效果内，且不在某个布局上方，布局示意添加在页面效果最后</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ($(box).attr(<span class=\"string\">'id'</span>) == <span class=\"string\">\"box\"</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ($(target).attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"move-layout\"</span> || $(target).attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"move-layout-over\"</span>) &#123;</span><br><span class=\"line\">        $(target).removeClass(<span class=\"string\">\"move-layout\"</span>).addClass(<span class=\"string\">\"move-layout-over\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dropping == <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">          drop = $(<span class=\"string\">\"&lt;div class='drop-layout'&gt;&lt;/div&gt;\"</span>);</span><br><span class=\"line\">          moveDrop();</span><br><span class=\"line\">          $(<span class=\"string\">\"#box-content\"</span>).append(drop);</span><br><span class=\"line\">          dropping = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          $(drop).remove();</span><br><span class=\"line\">          moveDrop();</span><br><span class=\"line\">          $(<span class=\"string\">\"#box-content\"</span>).append(drop);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    <span class=\"comment\">//判断当前位置不在页面效果内，移除布局示意</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ($(target).attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"move-layout-over\"</span>) &#123;</span><br><span class=\"line\">        $(target).removeClass(<span class=\"string\">\"move-layout-over\"</span>).addClass(<span class=\"string\">\"move-layout\"</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (dropping == <span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">        $(drop).remove();</span><br><span class=\"line\">        dropping = <span class=\"literal\">false</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"绑定鼠标左键松开事件\"><a href=\"#绑定鼠标左键松开事件\" class=\"headerlink\" title=\"绑定鼠标左键松开事件\"></a>绑定鼠标左键松开事件</h2><hr>\n<h3 id=\"效果事件\"><a href=\"#效果事件\" class=\"headerlink\" title=\"效果事件\"></a>效果事件</h3><ul>\n<li>当前拖动的对象为布局，且当前鼠标位置是否在页面效果内，添加布局</li>\n<li>当前拖动的对象为控件，且当前鼠标位置是否在页面效果内某个布局上方，且该布局内无其他控件，添加控件至布局</li>\n<li>当前鼠标位置不在页面效果内，移除拖动的对象</li>\n</ul>\n<h3 id=\"需要进行的判断-1\"><a href=\"#需要进行的判断-1\" class=\"headerlink\" title=\"需要进行的判断\"></a>需要进行的判断</h3><ul>\n<li>是否有正在拖动的布局或者控件</li>\n<li>当前鼠标位置是否在页面效果内</li>\n<li>当前拖动的对象是否为布局，且当前鼠标位置是否在页面效果内</li>\n<li>当前拖动的对象是否为控件，且当前鼠标位置是否在页面效果内某个布局上方，该布局是否为空</li>\n<li>全局绑定鼠标左键松开事件</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"built_in\">document</span>).mouseup(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//定位当前事件位置</span></span><br><span class=\"line\">  position_box(e);</span><br><span class=\"line\">  e.cancelBubble = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"comment\">//判断是否有正在拖动的布局或者控件</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (dragging == <span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//当前位置为页面效果内的某个布局上方，添加布局或者添加控件</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (($(box).attr(<span class=\"string\">'data-type'</span>) == <span class=\"string\">\"layout\"</span> &amp;&amp; $(box).parent().attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"float-layout\"</span>) || ($(box).attr(<span class=\"string\">'data-type'</span>) == <span class=\"string\">\"layout\"</span> &amp;&amp; $(box).parent().attr(<span class=\"string\">'data-type'</span>) == <span class=\"string\">\"layout\"</span>)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ($(target).attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"move-target\"</span> &amp;&amp; $(box).children().length == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        $(target).removeClass(<span class=\"string\">\"move-target\"</span>).addClass(<span class=\"string\">\"float-target\"</span>);</span><br><span class=\"line\">        $(target).children(<span class=\"string\">\".header, .footer, .nav, .listview-l, .listview-s, .content, .slider-7, .slider-8, .slider-9\"</span>).css(<span class=\"string\">\"height\"</span>, <span class=\"string\">\"100%\"</span>);</span><br><span class=\"line\">        $(box).append(target);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ($(target).attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"move-layout-over\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dropping) &#123;</span><br><span class=\"line\">          $(target).removeClass(<span class=\"string\">\"move-layout-over\"</span>).addClass(<span class=\"string\">\"float-layout\"</span>);</span><br><span class=\"line\">          $(drop).before($(target));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> $(target).remove();</span><br><span class=\"line\">    <span class=\"comment\">//当前位置为页面效果内，添加布局</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ($(box).attr(<span class=\"string\">'id'</span>) == <span class=\"string\">\"box\"</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ($(target).attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"move-layout-over\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dropping) &#123;</span><br><span class=\"line\">          $(target).removeClass(<span class=\"string\">\"move-layout-over\"</span>).addClass(<span class=\"string\">\"float-layout\"</span>);</span><br><span class=\"line\">          $(drop).before($(target));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        $(target).remove();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    <span class=\"comment\">//当前鼠标位置不在页面效果内，移除拖动的对象</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      $(target).remove();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  $(drop).remove();</span><br><span class=\"line\">  dropping = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  dragging = <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"完善后续处理\"><a href=\"#完善后续处理\" class=\"headerlink\" title=\"完善后续处理\"></a>完善后续处理</h2><hr>\n<ul>\n<li>编辑控件样式<ul>\n<li>在页面效果内的控件可进行编辑（改变颜色、内容等）</li>\n</ul>\n</li>\n<li>保存页面效果<ul>\n<li>这里为了偷懒直接把整个html导出，将它导出保存到html页面内，并加载相应的样式</li>\n<li>当然为了数据处理的方便，你也可以将这一切都转成数据保存到数据库，提取的时候进行相关处理就好了</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h2><hr>\n<p>有时候写些有意思的项目也是很不错的，脑洞要大大的，当然事后别忘了优化哦。</p>\n","excerpt":"<p>以前写过一个拖放功能的页面，用来搭建自定义移动端页面。本文介绍实现方法。<br>","more":"</p>\n<p>项目放在github上，有兴趣的小伙伴可以下载玩玩看<br><a href=\"https://github.com/godbasin/godbasin.github.io/tree/blog-codes/DD-custom-pages\">DD-custom-pages</a><br>已经没有在维护了，也基本没优化，但还是挺有意思的一个项目</p>\n<p>最终效果图如下<a href=\"http://o907xb1mi.bkt.clouddn.com/index.html\">点击查看页面</a><br><img src=\"http://o905ne85q.bkt.clouddn.com/dd_custom_pages.png\" alt=\"image\"></p>\n<h2 id=\"基本页面搭建\"><a href=\"#基本页面搭建\" class=\"headerlink\" title=\"基本页面搭建\"></a>基本页面搭建</h2><hr>\n<p>首先是最基本的页面搭建</p>\n<ul>\n<li>三个基本布局对象<ul>\n<li>1.左侧布局列表</li>\n<li>2.中间页面效果</li>\n<li>3.右侧控件列表</li>\n</ul>\n</li>\n<li>对象的事件处理<br>对象基本事件的编写<ul>\n<li>1.布局切换，以及自定义布局事件</li>\n<li>2.控件切换，选择等</li>\n</ul>\n</li>\n</ul>\n<p>样式布局什么的，这里就略过啦，具体可参考<a href=\"https://github.com/godbasin/DD-custom-pages\">项目</a></p>\n<h2 id=\"绑定鼠标左键按下事件\"><a href=\"#绑定鼠标左键按下事件\" class=\"headerlink\" title=\"绑定鼠标左键按下事件\"></a>绑定鼠标左键按下事件</h2><hr>\n<h3 id=\"需要进行绑定的对象\"><a href=\"#需要进行绑定的对象\" class=\"headerlink\" title=\"需要进行绑定的对象\"></a>需要进行绑定的对象</h3><ul>\n<li>需要进行鼠标左键按下绑定的对象有两种：布局和控件</li>\n<li>布局分为两种：左侧布局列表获取、中间页面效果获取的布局，class为fix-layout和float-layout区分</li>\n<li><p>控件同理: 右侧控件列表获取、中间页面效果获取的控件，class为fix-target和float-target区分</p>\n</li>\n<li><p>全局绑定鼠标鼠标左键按下事件<br>由于该项目中鼠标事件几乎是最主要事件，因此采用全局绑定</p>\n</li>\n</ul>\n<h3 id=\"点击对象后进行处理\"><a href=\"#点击对象后进行处理\" class=\"headerlink\" title=\"点击对象后进行处理\"></a>点击对象后进行处理</h3><ul>\n<li>设置拖动标志true，此时可进行鼠标移动事件的处理，后面会提及</li>\n<li>这里采用复制元素的方式，jQuery实现，$().clone()复制元素对象</li>\n<li>复制对象后，设置对象位置、大小等，这里设置拖动时将元素宽度减小为一般</li>\n</ul>\n<h3 id=\"若对象位于页面效果内，进行相关处理\"><a href=\"#若对象位于页面效果内，进行相关处理\" class=\"headerlink\" title=\"若对象位于页面效果内，进行相关处理\"></a>若对象位于页面效果内，进行相关处理</h3><ul>\n<li>若是对象为布局，则插入布局位置效果</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//绑定事件，这里使用了jQuery</span></span><br><span class=\"line\">$(<span class=\"built_in\">document</span>).on(<span class=\"string\">'mousedown'</span>, mouseDown);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mouseDown</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//获取左键点击事件</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (e.which == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//定位当前事件位置，并取出相关元素</span></span><br><span class=\"line\">    position_target(e);</span><br><span class=\"line\">    <span class=\"comment\">//处理左侧布局列表获取的布局元素事件</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($(target).attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"fix-layout\"</span>) &#123;</span><br><span class=\"line\">      dragging = <span class=\"literal\">true</span>; <span class=\"comment\">//设置拖动标志</span></span><br><span class=\"line\">      target = $(target).clone(); <span class=\"comment\">//复制元素</span></span><br><span class=\"line\">      $(target).removeClass(<span class=\"string\">\"fix-layout\"</span>).addClass(<span class=\"string\">\"move-layout\"</span>); <span class=\"comment\">//拖动时元素样式</span></span><br><span class=\"line\">      $(<span class=\"string\">\".container\"</span>).append(target); <span class=\"comment\">//将复制的元素添加到页面</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//处理中间布局列表获取的布局元素事件</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($(target).attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"float-layout\"</span>) &#123;</span><br><span class=\"line\">      dragging = <span class=\"literal\">true</span>; <span class=\"comment\">//设置拖动标志</span></span><br><span class=\"line\">      $(target).removeClass(<span class=\"string\">\"float-layout\"</span>).addClass(<span class=\"string\">\"move-layout\"</span>); <span class=\"comment\">//拖动时元素样式</span></span><br><span class=\"line\">      $(<span class=\"string\">\".container\"</span>).append(target); <span class=\"comment\">//将元素移动到页面</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//处理右侧控件列表获取的控件元素事件</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($(target).attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"fix-target\"</span>) &#123;</span><br><span class=\"line\">      dragging = <span class=\"literal\">true</span>; <span class=\"comment\">//设置拖动标志</span></span><br><span class=\"line\">      target = $(target).clone(); <span class=\"comment\">//复制元素</span></span><br><span class=\"line\">      $(target).removeClass(<span class=\"string\">\"fix-target\"</span>).addClass(<span class=\"string\">\"move-target\"</span>); <span class=\"comment\">//拖动时元素样式</span></span><br><span class=\"line\">      $(<span class=\"string\">\".container\"</span>).append(target); <span class=\"comment\">//将复制的元素添加到页面</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//处理中间布局列表获取的控件元素事件</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($(target).attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"float-target\"</span>) &#123;</span><br><span class=\"line\">      dragging = <span class=\"literal\">true</span>; <span class=\"comment\">//设置拖动标志</span></span><br><span class=\"line\">      $(target).removeClass(<span class=\"string\">\"float-target\"</span>).addClass(<span class=\"string\">\"move-target\"</span>); <span class=\"comment\">//拖动时元素样式</span></span><br><span class=\"line\">      $(<span class=\"string\">\".container\"</span>).append(target); <span class=\"comment\">//将元素移动到页面</span></span><br><span class=\"line\">      $(target).children(<span class=\"string\">\".header, .footer, .nav, .content, .slider-7, .slider-8, .slider-9\"</span>).css(<span class=\"string\">\"height\"</span>, <span class=\"string\">\"auto\"</span>); <span class=\"comment\">//拖动时元素内层控件样式</span></span><br><span class=\"line\">      $(target).children(<span class=\"string\">\".listview-l\"</span>).css(<span class=\"string\">\"height\"</span>, <span class=\"string\">\"100px\"</span>); <span class=\"comment\">//拖动时元素内层控件样式</span></span><br><span class=\"line\">      $(target).children(<span class=\"string\">\".listview-s\"</span>).css(<span class=\"string\">\"height\"</span>, <span class=\"string\">\"50px\"</span>); <span class=\"comment\">//拖动时元素内层控件样式</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//判断是否有元素在拖动，将元素位置设置在当前鼠标位置</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (dragging) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> oX = getMousePos(e).x - $(target).width() / <span class=\"number\">2</span>;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> oY = getMousePos(e).y - $(target).height() / <span class=\"number\">2</span>;</span><br><span class=\"line\">      $(target).css(&#123;</span><br><span class=\"line\">        <span class=\"string\">\"left\"</span>: oX + <span class=\"string\">\"px\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"top\"</span>: oY + <span class=\"string\">\"px\"</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//定位当前事件位置，判断是否在合适的位置</span></span><br><span class=\"line\">    <span class=\"comment\">//若当前元素为布局，且位置为页面效果内，则添加提示，元素放置的位置</span></span><br><span class=\"line\">    position_box(e);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($(box).attr(<span class=\"string\">'id'</span>) == <span class=\"string\">\"box\"</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ($(target).attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"move-layout\"</span> || $(target).attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"move-layout-over\"</span>) &#123;</span><br><span class=\"line\">        $(target).removeClass(<span class=\"string\">\"move-layout\"</span>).addClass(<span class=\"string\">\"move-layout-over\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dropping == <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">          drop = $(<span class=\"string\">\"&lt;div class='drop-layout'&gt;&lt;/div&gt;\"</span>);</span><br><span class=\"line\">          moveDrop();</span><br><span class=\"line\">          $(<span class=\"string\">\"#box-content\"</span>).append(drop);</span><br><span class=\"line\">          dropping = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          $(drop).remove();</span><br><span class=\"line\">          moveDrop();</span><br><span class=\"line\">          $(<span class=\"string\">\"#box-content\"</span>).append(drop);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"定位当前位置是否有特定元素\"><a href=\"#定位当前位置是否有特定元素\" class=\"headerlink\" title=\"定位当前位置是否有特定元素\"></a>定位当前位置是否有特定元素</h2><hr>\n<ul>\n<li><p>使用鼠标定位获取相关布局或者控件对象<br>这里可参考上一篇文章：<a href=\"https://godbasin.github.io/2016/06/19/position-object/\">《js判断某个位置是否特定元素》</a></p>\n</li>\n<li><p>获取当前鼠标位置</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getMousePos</span>(<span class=\"params\">event</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> e = event || <span class=\"built_in\">window</span>.event;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> scrollX = <span class=\"built_in\">document</span>.documentElement.scrollLeft || <span class=\"built_in\">document</span>.body.scrollLeft;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> scrollY = <span class=\"built_in\">document</span>.documentElement.scrollTop || <span class=\"built_in\">document</span>.body.scrollTop;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> x = e.pageX || e.clientX + scrollX;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> y = e.pageY || e.clientY + scrollY;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">    <span class=\"string\">'x'</span>: x,</span><br><span class=\"line\">    <span class=\"string\">'y'</span>: y</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>定位当前位置是否有布局或者控件对象position_target</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">position_target</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> e = e || <span class=\"built_in\">window</span>.event;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> scrollX = <span class=\"built_in\">document</span>.documentElement.scrollLeft || <span class=\"built_in\">document</span>.body.scrollLeft;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> scrollY = <span class=\"built_in\">document</span>.documentElement.scrollTop || <span class=\"built_in\">document</span>.body.scrollTop;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> eventX = e.pageX - scrollX || e.clientX;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> eventY = e.pageY - scrollY || e.clientY;</span><br><span class=\"line\">  target = <span class=\"built_in\">document</span>.elementFromPoint(eventX, eventY);</span><br><span class=\"line\">  target = fnGetTable(target);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fnGetTable</span>(<span class=\"params\">oEl</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"literal\">null</span> != oEl &amp;&amp; $(oEl).attr(<span class=\"string\">'class'</span>) != <span class=\"string\">\"fix-target\"</span> &amp;&amp; $(oEl).attr(<span class=\"string\">'id'</span>) != <span class=\"string\">\"set-layout\"</span> &amp;&amp; $(oEl).attr(<span class=\"string\">'id'</span>) != <span class=\"string\">\"save-page\"</span> &amp;&amp; $(oEl).attr(<span class=\"string\">'class'</span>) != <span class=\"string\">\"box-footer\"</span> &amp;&amp; $(oEl).attr(<span class=\"string\">'class'</span>) != <span class=\"string\">\"to-edit\"</span> &amp;&amp; $(oEl).attr(<span class=\"string\">'class'</span>) != <span class=\"string\">\"edit\"</span> &amp;&amp; $(oEl).attr(<span class=\"string\">'class'</span>) != <span class=\"string\">\"container\"</span> &amp;&amp; $(oEl).attr(<span class=\"string\">'class'</span>) != <span class=\"string\">\"float-target\"</span> &amp;&amp; $(oEl).attr(<span class=\"string\">'class'</span>) != <span class=\"string\">\"fix-layout\"</span> &amp;&amp; $(oEl).attr(<span class=\"string\">'class'</span>) != <span class=\"string\">\"float-layout\"</span>) &#123;</span><br><span class=\"line\">    oEl = oEl.parentElement;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> oEl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>定位当前位置是否有在页面效果的布局里position_target</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">position_box</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> e = e || <span class=\"built_in\">window</span>.event;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> scrollX = <span class=\"built_in\">document</span>.documentElement.scrollLeft || <span class=\"built_in\">document</span>.body.scrollLeft;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> scrollY = <span class=\"built_in\">document</span>.documentElement.scrollTop || <span class=\"built_in\">document</span>.body.scrollTop;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> eventX = e.pageX - scrollX || e.clientX;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> eventY = $(target).offset().top - <span class=\"number\">1</span> - scrollY;</span><br><span class=\"line\">  box = <span class=\"built_in\">document</span>.elementFromPoint(eventX, eventY);</span><br><span class=\"line\">  box = fnGetTable2(box);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fnGetTable2</span>(<span class=\"params\">oEl</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"literal\">null</span> != oEl &amp;&amp; $(oEl).attr(<span class=\"string\">'id'</span>) != <span class=\"string\">\"box\"</span> &amp;&amp; $(oEl).attr(<span class=\"string\">'class'</span>) != <span class=\"string\">\"container\"</span> &amp;&amp; $(oEl).attr(<span class=\"string\">'data-type'</span>) != <span class=\"string\">\"layout\"</span>) &#123;</span><br><span class=\"line\">    oEl = oEl.parentElement;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> oEl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"绑定鼠标移动事件\"><a href=\"#绑定鼠标移动事件\" class=\"headerlink\" title=\"绑定鼠标移动事件\"></a>绑定鼠标移动事件</h2><hr>\n<h3 id=\"需要进行的判断\"><a href=\"#需要进行的判断\" class=\"headerlink\" title=\"需要进行的判断\"></a>需要进行的判断</h3><ul>\n<li>是否有正在拖动的布局或者控件</li>\n<li>当前鼠标位置是否在页面效果内，添加布局示意（蓝色框框表示即将添加布局的位置）</li>\n<li>当前鼠标位置是否在页面效果内的某个布局上方，在相应位置添加布局示意</li>\n<li>全局绑定鼠标移动事件</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"built_in\">document</span>).mousemove(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//判断是否有正在拖动的布局或者控件</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (dragging) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//正在拖动的对象位置跟随鼠标移动</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> oX = getMousePos(e).x - $(target).width() / <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> oY = getMousePos(e).y - $(target).height() / <span class=\"number\">2</span>;</span><br><span class=\"line\">    $(target).css(&#123;</span><br><span class=\"line\">      <span class=\"string\">\"left\"</span>: oX + <span class=\"string\">\"px\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"top\"</span>: oY + <span class=\"string\">\"px\"</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"comment\">//定位当前事件位置</span></span><br><span class=\"line\">    position_box(e);</span><br><span class=\"line\">    <span class=\"comment\">//判断当前位置在页面效果内，且在某个布局上方，布局示意添加在当前布局前方</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ($(box).attr(<span class=\"string\">'data-type'</span>) == <span class=\"string\">\"layout\"</span> &amp;&amp; $(box).parent().attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"float-layout\"</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ($(target).attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"move-layout\"</span> || $(target).attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"move-layout-over\"</span>) &#123;</span><br><span class=\"line\">        $(target).removeClass(<span class=\"string\">\"move-layout\"</span>).addClass(<span class=\"string\">\"move-layout-over\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dropping == <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">          drop = $(<span class=\"string\">\"&lt;div class='drop-layout'&gt;&lt;/div&gt;\"</span>);</span><br><span class=\"line\">          moveDrop();</span><br><span class=\"line\">          $($(box).parent()).before(drop);</span><br><span class=\"line\">          dropping = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          $(drop).remove();</span><br><span class=\"line\">          moveDrop();</span><br><span class=\"line\">          $($(box).parent()).before(drop);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    <span class=\"comment\">//判断当前位置在页面效果内，且不在某个布局上方，布局示意添加在页面效果最后</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ($(box).attr(<span class=\"string\">'id'</span>) == <span class=\"string\">\"box\"</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ($(target).attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"move-layout\"</span> || $(target).attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"move-layout-over\"</span>) &#123;</span><br><span class=\"line\">        $(target).removeClass(<span class=\"string\">\"move-layout\"</span>).addClass(<span class=\"string\">\"move-layout-over\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dropping == <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">          drop = $(<span class=\"string\">\"&lt;div class='drop-layout'&gt;&lt;/div&gt;\"</span>);</span><br><span class=\"line\">          moveDrop();</span><br><span class=\"line\">          $(<span class=\"string\">\"#box-content\"</span>).append(drop);</span><br><span class=\"line\">          dropping = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          $(drop).remove();</span><br><span class=\"line\">          moveDrop();</span><br><span class=\"line\">          $(<span class=\"string\">\"#box-content\"</span>).append(drop);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    <span class=\"comment\">//判断当前位置不在页面效果内，移除布局示意</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ($(target).attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"move-layout-over\"</span>) &#123;</span><br><span class=\"line\">        $(target).removeClass(<span class=\"string\">\"move-layout-over\"</span>).addClass(<span class=\"string\">\"move-layout\"</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (dropping == <span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">        $(drop).remove();</span><br><span class=\"line\">        dropping = <span class=\"literal\">false</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"绑定鼠标左键松开事件\"><a href=\"#绑定鼠标左键松开事件\" class=\"headerlink\" title=\"绑定鼠标左键松开事件\"></a>绑定鼠标左键松开事件</h2><hr>\n<h3 id=\"效果事件\"><a href=\"#效果事件\" class=\"headerlink\" title=\"效果事件\"></a>效果事件</h3><ul>\n<li>当前拖动的对象为布局，且当前鼠标位置是否在页面效果内，添加布局</li>\n<li>当前拖动的对象为控件，且当前鼠标位置是否在页面效果内某个布局上方，且该布局内无其他控件，添加控件至布局</li>\n<li>当前鼠标位置不在页面效果内，移除拖动的对象</li>\n</ul>\n<h3 id=\"需要进行的判断-1\"><a href=\"#需要进行的判断-1\" class=\"headerlink\" title=\"需要进行的判断\"></a>需要进行的判断</h3><ul>\n<li>是否有正在拖动的布局或者控件</li>\n<li>当前鼠标位置是否在页面效果内</li>\n<li>当前拖动的对象是否为布局，且当前鼠标位置是否在页面效果内</li>\n<li>当前拖动的对象是否为控件，且当前鼠标位置是否在页面效果内某个布局上方，该布局是否为空</li>\n<li>全局绑定鼠标左键松开事件</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"built_in\">document</span>).mouseup(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//定位当前事件位置</span></span><br><span class=\"line\">  position_box(e);</span><br><span class=\"line\">  e.cancelBubble = <span class=\"literal\">true</span>;</span><br><span class=\"line\">  <span class=\"comment\">//判断是否有正在拖动的布局或者控件</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (dragging == <span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//当前位置为页面效果内的某个布局上方，添加布局或者添加控件</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (($(box).attr(<span class=\"string\">'data-type'</span>) == <span class=\"string\">\"layout\"</span> &amp;&amp; $(box).parent().attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"float-layout\"</span>) || ($(box).attr(<span class=\"string\">'data-type'</span>) == <span class=\"string\">\"layout\"</span> &amp;&amp; $(box).parent().attr(<span class=\"string\">'data-type'</span>) == <span class=\"string\">\"layout\"</span>)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ($(target).attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"move-target\"</span> &amp;&amp; $(box).children().length == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        $(target).removeClass(<span class=\"string\">\"move-target\"</span>).addClass(<span class=\"string\">\"float-target\"</span>);</span><br><span class=\"line\">        $(target).children(<span class=\"string\">\".header, .footer, .nav, .listview-l, .listview-s, .content, .slider-7, .slider-8, .slider-9\"</span>).css(<span class=\"string\">\"height\"</span>, <span class=\"string\">\"100%\"</span>);</span><br><span class=\"line\">        $(box).append(target);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ($(target).attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"move-layout-over\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dropping) &#123;</span><br><span class=\"line\">          $(target).removeClass(<span class=\"string\">\"move-layout-over\"</span>).addClass(<span class=\"string\">\"float-layout\"</span>);</span><br><span class=\"line\">          $(drop).before($(target));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> $(target).remove();</span><br><span class=\"line\">    <span class=\"comment\">//当前位置为页面效果内，添加布局</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ($(box).attr(<span class=\"string\">'id'</span>) == <span class=\"string\">\"box\"</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ($(target).attr(<span class=\"string\">'class'</span>) == <span class=\"string\">\"move-layout-over\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dropping) &#123;</span><br><span class=\"line\">          $(target).removeClass(<span class=\"string\">\"move-layout-over\"</span>).addClass(<span class=\"string\">\"float-layout\"</span>);</span><br><span class=\"line\">          $(drop).before($(target));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        $(target).remove();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    <span class=\"comment\">//当前鼠标位置不在页面效果内，移除拖动的对象</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      $(target).remove();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  $(drop).remove();</span><br><span class=\"line\">  dropping = <span class=\"literal\">false</span>;</span><br><span class=\"line\">  dragging = <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"完善后续处理\"><a href=\"#完善后续处理\" class=\"headerlink\" title=\"完善后续处理\"></a>完善后续处理</h2><hr>\n<ul>\n<li>编辑控件样式<ul>\n<li>在页面效果内的控件可进行编辑（改变颜色、内容等）</li>\n</ul>\n</li>\n<li>保存页面效果<ul>\n<li>这里为了偷懒直接把整个html导出，将它导出保存到html页面内，并加载相应的样式</li>\n<li>当然为了数据处理的方便，你也可以将这一切都转成数据保存到数据库，提取的时候进行相关处理就好了</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h2><hr>\n<p>有时候写些有意思的项目也是很不错的，脑洞要大大的，当然事后别忘了优化哦。</p>"},{"title":"有关CSS的position和z-index","date":"2016-06-25T04:03:10.000Z","_content":"今天刚好kk妹子问我关于position的一些问题，就打算整理一下，希望用比较清晰明了的方式解释一下CSS的position是怎么个玩法。\n顺便也进行一下z-index相关的说明。\n<!--more-->\n## CSS position属性\n-----\n### w3c的position\n这里借用[w3c](http://www.w3school.com.cn/cssref/pr_class_position.asp)上的说明\n> - absolute\t\n> 生成绝对定位的元素，相对于static定位以外的第一个父元素进行定位。\n> 元素的位置通过\"left\", \"top\", \"right\"以及\"bottom\"属性进行规定。\n> - fixed\t\n> 生成绝对定位的元素，相对于浏览器窗口进行定位。\n> 元素的位置通过\"left\", \"top\", \"right\"以及\"bottom\"属性进行规定。\n> - relative\t\n> 生成相对定位的元素，相对于其正常位置进行定位。\n> 因此，\"left:20\"会向元素的 LEFT位置添加 20像素。\n> - static\t\n> 默认值。没有定位，元素出现在正常的流中（忽略top, bottom, left, right或者z-index声明）。\n> - inherit\t\n> 规定应该从父元素继承position属性的值。\n\n### 文档流\n- 什么是文档流\n相信大家刚开始接触position属性的时候，都会被“文档流”、“流”这样的概念给吓坏了。\n- 正常的文档流也叫普通流，在HTML里面的写法就是从上到下，从左到右的排版布局\n\n### static与文档流\n\n如图，[查看页面效果](http://o9bc2k1st.bkt.clouddn.com/position-static.html)\n``` css\na, p, div { border: solid 1px red; }\n.static { position: static; left: 100px; top: 100px; }\n```\n![image](http://o905ne85q.bkt.clouddn.com/53ETM3GNX7ZV65W%5DW~%28%7BZK3.png)\n可见，此时添加定位（left: 100px; top: 100px;）是无效的\n\n### relative与文档流\nrelative保持原有文档流，但相对本身的原始位置发生位移，且占空间\n如图，[查看页面效果](http://o9bc2k1st.bkt.clouddn.com/position-relative.html)\n``` css\na, p, div { border: solid 1px red; }\n.relative { position: relative; left: 100px; top: 100px; }\n```\n![image](http://o905ne85q.bkt.clouddn.com/PN1G~%5DQFF@E7AVRQJ9Z8%28JH.png)\n可见：\n- relative元素也遵循从上到下，从左到右的排版布局\n- relative相对于其正常位置进行定位，在这里设置了relative的元素相对其原本位置（position=static）进行位移\n- relative元素占有原本位置，因此下一个元素会排到该元素后方\n- relative元素占位不会随着定位的改变而改变。也就是说relative在文档流中占有的位置与其原本位置（position=static）相同\n这里有个需要注意的地方： 虽然relative元素占位与static相同，但会溢出父元素，撑开整个页面（document）。\n如图，[查看页面效果](http://o9bc2k1st.bkt.clouddn.com/position-relative-occupation.html)\n![image](http://o905ne85q.bkt.clouddn.com/LHRK4@9K$YE1%25KMB%29G9%60~%7B8.png)\n可以relative元素撑开父元素看到页面底部有滚动条。\n此时给父元素设置overflow: hidden;则可以隐藏溢出部分，如图\n![image](http://o905ne85q.bkt.clouddn.com/KGE~71FX8H7DW6VNYC1T00M.png)\n\n### absolute与文档流\nabsolute脱离文档流，相对于其包含块来定位，且不占位\n如图\n``` css\n.parent{ border: solid 1px blue; width: 300px; } \n.parent > div{ border: solid 1px red; height: 100px; width: 300px; } \n.absolute{ position: absolute; left: 100px; height: 100px; }\n```\n![image](http://o905ne85q.bkt.clouddn.com/75%5D1@NRTQ8$U9KTQ66SPL2A.png)\n可见：\n- absolute元素脱离文档流\n- absolute元素不占位，因此下一个符合普通流的元素会略过absolute元素排到其上一个元素的后方\n\n此时对于absolute元素的占位依然不大清晰，接下来我们给父元素添加margin-left: 200px的样式，如图\n![image](http://o905ne85q.bkt.clouddn.com/07J25Y0F~@O%5D@ZAGZ~%25%60%28%29Y.png)\n很明显，absolute元素位置没有发生改变，这是因为该元素相对于document进行定位。\n\n- absolute元素的定位是相对于static定位以外的第一个父元素进行定位\n- 当absolute的父元素position为static，则会继续往上查找，直到找到一个为relative/absolute/fixed的父元素作为定位参照物\n- 当absolute没有position为非static的父元素时，则会进行全局定位，即相对于文档document进行定位\n\n所以我们可以给父元素加上position=relative的样式，如图\n![image](http://o905ne85q.bkt.clouddn.com/~NPVE%7D%7DZFR3$PH%609%5DFJQF2Y.png)\n此时absolute元素则相对于父元素进行定位，[查看页面效果](http://o9bc2k1st.bkt.clouddn.com/position-absolute.html)。\n\n### 无定位的absolute\n在使用absolute进行定位时，若我们只是将元素设置为position: absolute，而不对其进行定位（top, bottom, left, right），会是怎样的情况呢？\n如图，[查看页面效果](http://o9bc2k1st.bkt.clouddn.com/position-absolute-without-position.html)\n![image](http://o905ne85q.bkt.clouddn.com/CG_14%7DVI%28TDCYFK%7BE$8SC%287.png)\n可见：\n- 未设置定位的absolute元素，其定位与其原本位置（position=static）相同\n- 此时absolute元素依然不占位，因此下一个符合普通流的元素会略过absolute元素排到其上一个元素的后方\n\n### fixed与文档流\nfixed脱离文档流，相对于浏览器窗口来定位，且不占位\n如图\n``` css\n.parent { border: solid 1px blue; width: 300px; } \n.parent > div { border: solid 1px red; height: 100px; width: 300px; } \n.fixed { position: fixed; left: 100px; top: 100px; background: yellow; }\n```\n![image](http://o905ne85q.bkt.clouddn.com/%28FNOAFPIA%5B80%25F%7D6%5B0CQ2%7DE.png)\n似乎跟相对于文档定位时的absolute元素没什么两样，即\n- fixed元素脱离文档流\n- fixed元素不占位\n\n接来下我们将页面填充满，如图，[查看页面效果](http://o9bc2k1st.bkt.clouddn.com/position-fixed-absolute.html)\n![image](http://o905ne85q.bkt.clouddn.com/K4OGL%5BF5~XP9NLRW%254X%7B55X.png)\n当我们进行页面滚动的时候，fixed元素位置没有发生变化，可见：\n\n- fixed相对于浏览器窗口来定位，不管是否有static定位以外的父元素\n- absolute元素会随着页面的滚动而滚动，而fixed不会\n\n也就是说，fixed元素相对于浏览器窗口进行定位，而无有static定位以外的父元素的absolute，则相对于document进行定位\n\n## z-index\n-----\n### z-index简述\n- z-index属性设置元素的堆叠顺序，拥有更高堆叠顺序的元素总是会处于堆叠顺序较低的元素的前面\n- z-index只能在position属性值为relative或absolute或fixed的元素上有效\n\n### z-index在同级元素下的效果\n如图，[查看页面效果](http://o9bc2k1st.bkt.clouddn.com/position-z-index-same-level.html)\n![image](http://o905ne85q.bkt.clouddn.com/%60X74TE9%7D%28OFY%7BUK$MAW%5B%7B5O.png)\n可见：\n- 当同级元素不设置z-index或者z-index相等时，后面的元素会叠在前面的元素上方\n- 当同级元素z-index不同时，z-index大的元素会叠在z-index小的元素上方\n\n### z-index在不同级元素下的效果\n如图，[查看页面效果](http://o9bc2k1st.bkt.clouddn.com/position-z-index-diff-level-1.html)\n![image](http://o905ne85q.bkt.clouddn.com/Q%7BFVVGE6NSP8WB~_3P7SZ$G.png)\n仔细看会发现个很有意思的现象，parent1和parent2为同级元素，parent2叠在parent1上方，但是parent2子元素却位于parent1子元素的下方。\nparent1和parent2的position均为relative，是不是有些难以理解？这是因为：\n- 当向上追溯找不到含有z-index值的父元素的情况下，则可以视为自由的z-index元素\n- 自由的z-index元素可以与其他自由的定位元素来比较z-index的值，决定其堆叠顺序\n\n在这里，parent1和parent2均无设置z-index值，故在这里子元素的堆叠顺序是由自己的z-index值决定的。\n接下来我们为两个parent均加上z-index，如图，[查看页面效果](http://o9bc2k1st.bkt.clouddn.com/position-z-index-diff-level-2.html)\n![image](http://o905ne85q.bkt.clouddn.com/PMVG4833%60U%29JC9%5BWK5W%601NC.png)\n\n经测试，在parent2的z-index大于或者等于parent1的z-index的时候，parent2以及它的子元素均位于parent1以及其子元素的上方。\n而当我们设置parent2的z-index小于parent1的z-index的时候，如图\n![image](http://o905ne85q.bkt.clouddn.com/@22C%5D%5D9~A7%28%29%5B%60LZLD@%29%7BRF.png)\n此时parent2以及它的子元素均位于parent1以及其子元素的下方。\n可见：\n- z-index值只决定同一父元素中的同级子元素的堆叠顺序\n- 父元素的z-index值为子元素定义了堆叠顺序，即子元素依赖于父元素z-index值来获得页面中的堆叠顺序\n\n现在我们将parent2的z-index值取消，留下parent1的z-index值为2。\n如图，[查看页面效果](http://o9bc2k1st.bkt.clouddn.com/position-z-index-diff-level-3.html)\n![image](http://o905ne85q.bkt.clouddn.com/G%5D6CTV7PXO%28UD7B%5B%7B%60%28U693.png)\n可见：\n- 自由的z-index元素可以与父元素的同级兄弟定位元素来比较z-index的值，决定其堆叠顺序\n\n### z-index与position: fixed\n当初一直认为fixed的元素有种优先级特别高的感觉，但在z-index比较上却有了新发现，如图\n![image](http://o905ne85q.bkt.clouddn.com/IN7X7L4FJ%5DYT%7DZPG~8_I%60@R.png)\n经测试，在不设置z-index值或者z-index值相等时，fixed元素和absolute元素堆叠顺序均由元素在文档中的先后位置决定，后出现的会在上面。\n接下来我们给这几个子元素加上z-index值，如图\n![image](http://o905ne85q.bkt.clouddn.com/FMC%60R%25%25LLKVM9OQ1~5~%29GQ3.png)\n这时候我们会有种想法，会不会fixed元素和absolute元素的堆叠规则一样呢？\n现在我们将fixed元素移到parent元素外面，且parent元素z-index值依然为空，如图，[查看页面效果](http://o9bc2k1st.bkt.clouddn.com/position-z-index-fixed.html)\n![image](http://o905ne85q.bkt.clouddn.com/A%284RG%7BTP~2$%29%29ZE5Y2HW%7BOD.png)\n可见：\n- 尽管fixed定位方式与absolute不一致，它们的堆叠规则是一致的\n\n### z-index总结\n- 无z-index或者z-index值相等时，堆叠顺序均由元素在文档中的先后位置决定，后出现的会在上面\n- 当向上追溯找不到含有z-index值的父元素的情况下，则可以视为自由的z-index元素\n- 自由的z-index元素可以与其他自由的定位元素或者父元素的同级兄弟定位元素来比较z-index的值，决定其堆叠顺序\n- z-index值只决定同一父元素中的同级子元素的堆叠顺序\n- 父元素的z-index值为子元素定义了堆叠顺序，即子元素依赖于父元素z-index值来获得页面中的堆叠顺序\n\n- 参考\n[浅析CSS——元素重叠及position定位的z-index顺序](http://www.cnblogs.com/mind/archive/2012/04/01/2198995.html)\n\n- 相关代码保存在[about-position](https://github.com/godbasin/godbasin.github.io/tree/blog-codes/about-position)\n\n## 结束语\n不得不说，写这篇文章的过程自己对position和z-index相关的原理和规则也熟悉了很多，总结也是一种学习的方式呢。\n\n","source":"_posts/about-position.md","raw":"---\ntitle: 有关CSS的position和z-index\ndate: 2016-06-25 12:03:10\ncategories: CSS炒饭\ntags: 分享\n---\n今天刚好kk妹子问我关于position的一些问题，就打算整理一下，希望用比较清晰明了的方式解释一下CSS的position是怎么个玩法。\n顺便也进行一下z-index相关的说明。\n<!--more-->\n## CSS position属性\n-----\n### w3c的position\n这里借用[w3c](http://www.w3school.com.cn/cssref/pr_class_position.asp)上的说明\n> - absolute\t\n> 生成绝对定位的元素，相对于static定位以外的第一个父元素进行定位。\n> 元素的位置通过\"left\", \"top\", \"right\"以及\"bottom\"属性进行规定。\n> - fixed\t\n> 生成绝对定位的元素，相对于浏览器窗口进行定位。\n> 元素的位置通过\"left\", \"top\", \"right\"以及\"bottom\"属性进行规定。\n> - relative\t\n> 生成相对定位的元素，相对于其正常位置进行定位。\n> 因此，\"left:20\"会向元素的 LEFT位置添加 20像素。\n> - static\t\n> 默认值。没有定位，元素出现在正常的流中（忽略top, bottom, left, right或者z-index声明）。\n> - inherit\t\n> 规定应该从父元素继承position属性的值。\n\n### 文档流\n- 什么是文档流\n相信大家刚开始接触position属性的时候，都会被“文档流”、“流”这样的概念给吓坏了。\n- 正常的文档流也叫普通流，在HTML里面的写法就是从上到下，从左到右的排版布局\n\n### static与文档流\n\n如图，[查看页面效果](http://o9bc2k1st.bkt.clouddn.com/position-static.html)\n``` css\na, p, div { border: solid 1px red; }\n.static { position: static; left: 100px; top: 100px; }\n```\n![image](http://o905ne85q.bkt.clouddn.com/53ETM3GNX7ZV65W%5DW~%28%7BZK3.png)\n可见，此时添加定位（left: 100px; top: 100px;）是无效的\n\n### relative与文档流\nrelative保持原有文档流，但相对本身的原始位置发生位移，且占空间\n如图，[查看页面效果](http://o9bc2k1st.bkt.clouddn.com/position-relative.html)\n``` css\na, p, div { border: solid 1px red; }\n.relative { position: relative; left: 100px; top: 100px; }\n```\n![image](http://o905ne85q.bkt.clouddn.com/PN1G~%5DQFF@E7AVRQJ9Z8%28JH.png)\n可见：\n- relative元素也遵循从上到下，从左到右的排版布局\n- relative相对于其正常位置进行定位，在这里设置了relative的元素相对其原本位置（position=static）进行位移\n- relative元素占有原本位置，因此下一个元素会排到该元素后方\n- relative元素占位不会随着定位的改变而改变。也就是说relative在文档流中占有的位置与其原本位置（position=static）相同\n这里有个需要注意的地方： 虽然relative元素占位与static相同，但会溢出父元素，撑开整个页面（document）。\n如图，[查看页面效果](http://o9bc2k1st.bkt.clouddn.com/position-relative-occupation.html)\n![image](http://o905ne85q.bkt.clouddn.com/LHRK4@9K$YE1%25KMB%29G9%60~%7B8.png)\n可以relative元素撑开父元素看到页面底部有滚动条。\n此时给父元素设置overflow: hidden;则可以隐藏溢出部分，如图\n![image](http://o905ne85q.bkt.clouddn.com/KGE~71FX8H7DW6VNYC1T00M.png)\n\n### absolute与文档流\nabsolute脱离文档流，相对于其包含块来定位，且不占位\n如图\n``` css\n.parent{ border: solid 1px blue; width: 300px; } \n.parent > div{ border: solid 1px red; height: 100px; width: 300px; } \n.absolute{ position: absolute; left: 100px; height: 100px; }\n```\n![image](http://o905ne85q.bkt.clouddn.com/75%5D1@NRTQ8$U9KTQ66SPL2A.png)\n可见：\n- absolute元素脱离文档流\n- absolute元素不占位，因此下一个符合普通流的元素会略过absolute元素排到其上一个元素的后方\n\n此时对于absolute元素的占位依然不大清晰，接下来我们给父元素添加margin-left: 200px的样式，如图\n![image](http://o905ne85q.bkt.clouddn.com/07J25Y0F~@O%5D@ZAGZ~%25%60%28%29Y.png)\n很明显，absolute元素位置没有发生改变，这是因为该元素相对于document进行定位。\n\n- absolute元素的定位是相对于static定位以外的第一个父元素进行定位\n- 当absolute的父元素position为static，则会继续往上查找，直到找到一个为relative/absolute/fixed的父元素作为定位参照物\n- 当absolute没有position为非static的父元素时，则会进行全局定位，即相对于文档document进行定位\n\n所以我们可以给父元素加上position=relative的样式，如图\n![image](http://o905ne85q.bkt.clouddn.com/~NPVE%7D%7DZFR3$PH%609%5DFJQF2Y.png)\n此时absolute元素则相对于父元素进行定位，[查看页面效果](http://o9bc2k1st.bkt.clouddn.com/position-absolute.html)。\n\n### 无定位的absolute\n在使用absolute进行定位时，若我们只是将元素设置为position: absolute，而不对其进行定位（top, bottom, left, right），会是怎样的情况呢？\n如图，[查看页面效果](http://o9bc2k1st.bkt.clouddn.com/position-absolute-without-position.html)\n![image](http://o905ne85q.bkt.clouddn.com/CG_14%7DVI%28TDCYFK%7BE$8SC%287.png)\n可见：\n- 未设置定位的absolute元素，其定位与其原本位置（position=static）相同\n- 此时absolute元素依然不占位，因此下一个符合普通流的元素会略过absolute元素排到其上一个元素的后方\n\n### fixed与文档流\nfixed脱离文档流，相对于浏览器窗口来定位，且不占位\n如图\n``` css\n.parent { border: solid 1px blue; width: 300px; } \n.parent > div { border: solid 1px red; height: 100px; width: 300px; } \n.fixed { position: fixed; left: 100px; top: 100px; background: yellow; }\n```\n![image](http://o905ne85q.bkt.clouddn.com/%28FNOAFPIA%5B80%25F%7D6%5B0CQ2%7DE.png)\n似乎跟相对于文档定位时的absolute元素没什么两样，即\n- fixed元素脱离文档流\n- fixed元素不占位\n\n接来下我们将页面填充满，如图，[查看页面效果](http://o9bc2k1st.bkt.clouddn.com/position-fixed-absolute.html)\n![image](http://o905ne85q.bkt.clouddn.com/K4OGL%5BF5~XP9NLRW%254X%7B55X.png)\n当我们进行页面滚动的时候，fixed元素位置没有发生变化，可见：\n\n- fixed相对于浏览器窗口来定位，不管是否有static定位以外的父元素\n- absolute元素会随着页面的滚动而滚动，而fixed不会\n\n也就是说，fixed元素相对于浏览器窗口进行定位，而无有static定位以外的父元素的absolute，则相对于document进行定位\n\n## z-index\n-----\n### z-index简述\n- z-index属性设置元素的堆叠顺序，拥有更高堆叠顺序的元素总是会处于堆叠顺序较低的元素的前面\n- z-index只能在position属性值为relative或absolute或fixed的元素上有效\n\n### z-index在同级元素下的效果\n如图，[查看页面效果](http://o9bc2k1st.bkt.clouddn.com/position-z-index-same-level.html)\n![image](http://o905ne85q.bkt.clouddn.com/%60X74TE9%7D%28OFY%7BUK$MAW%5B%7B5O.png)\n可见：\n- 当同级元素不设置z-index或者z-index相等时，后面的元素会叠在前面的元素上方\n- 当同级元素z-index不同时，z-index大的元素会叠在z-index小的元素上方\n\n### z-index在不同级元素下的效果\n如图，[查看页面效果](http://o9bc2k1st.bkt.clouddn.com/position-z-index-diff-level-1.html)\n![image](http://o905ne85q.bkt.clouddn.com/Q%7BFVVGE6NSP8WB~_3P7SZ$G.png)\n仔细看会发现个很有意思的现象，parent1和parent2为同级元素，parent2叠在parent1上方，但是parent2子元素却位于parent1子元素的下方。\nparent1和parent2的position均为relative，是不是有些难以理解？这是因为：\n- 当向上追溯找不到含有z-index值的父元素的情况下，则可以视为自由的z-index元素\n- 自由的z-index元素可以与其他自由的定位元素来比较z-index的值，决定其堆叠顺序\n\n在这里，parent1和parent2均无设置z-index值，故在这里子元素的堆叠顺序是由自己的z-index值决定的。\n接下来我们为两个parent均加上z-index，如图，[查看页面效果](http://o9bc2k1st.bkt.clouddn.com/position-z-index-diff-level-2.html)\n![image](http://o905ne85q.bkt.clouddn.com/PMVG4833%60U%29JC9%5BWK5W%601NC.png)\n\n经测试，在parent2的z-index大于或者等于parent1的z-index的时候，parent2以及它的子元素均位于parent1以及其子元素的上方。\n而当我们设置parent2的z-index小于parent1的z-index的时候，如图\n![image](http://o905ne85q.bkt.clouddn.com/@22C%5D%5D9~A7%28%29%5B%60LZLD@%29%7BRF.png)\n此时parent2以及它的子元素均位于parent1以及其子元素的下方。\n可见：\n- z-index值只决定同一父元素中的同级子元素的堆叠顺序\n- 父元素的z-index值为子元素定义了堆叠顺序，即子元素依赖于父元素z-index值来获得页面中的堆叠顺序\n\n现在我们将parent2的z-index值取消，留下parent1的z-index值为2。\n如图，[查看页面效果](http://o9bc2k1st.bkt.clouddn.com/position-z-index-diff-level-3.html)\n![image](http://o905ne85q.bkt.clouddn.com/G%5D6CTV7PXO%28UD7B%5B%7B%60%28U693.png)\n可见：\n- 自由的z-index元素可以与父元素的同级兄弟定位元素来比较z-index的值，决定其堆叠顺序\n\n### z-index与position: fixed\n当初一直认为fixed的元素有种优先级特别高的感觉，但在z-index比较上却有了新发现，如图\n![image](http://o905ne85q.bkt.clouddn.com/IN7X7L4FJ%5DYT%7DZPG~8_I%60@R.png)\n经测试，在不设置z-index值或者z-index值相等时，fixed元素和absolute元素堆叠顺序均由元素在文档中的先后位置决定，后出现的会在上面。\n接下来我们给这几个子元素加上z-index值，如图\n![image](http://o905ne85q.bkt.clouddn.com/FMC%60R%25%25LLKVM9OQ1~5~%29GQ3.png)\n这时候我们会有种想法，会不会fixed元素和absolute元素的堆叠规则一样呢？\n现在我们将fixed元素移到parent元素外面，且parent元素z-index值依然为空，如图，[查看页面效果](http://o9bc2k1st.bkt.clouddn.com/position-z-index-fixed.html)\n![image](http://o905ne85q.bkt.clouddn.com/A%284RG%7BTP~2$%29%29ZE5Y2HW%7BOD.png)\n可见：\n- 尽管fixed定位方式与absolute不一致，它们的堆叠规则是一致的\n\n### z-index总结\n- 无z-index或者z-index值相等时，堆叠顺序均由元素在文档中的先后位置决定，后出现的会在上面\n- 当向上追溯找不到含有z-index值的父元素的情况下，则可以视为自由的z-index元素\n- 自由的z-index元素可以与其他自由的定位元素或者父元素的同级兄弟定位元素来比较z-index的值，决定其堆叠顺序\n- z-index值只决定同一父元素中的同级子元素的堆叠顺序\n- 父元素的z-index值为子元素定义了堆叠顺序，即子元素依赖于父元素z-index值来获得页面中的堆叠顺序\n\n- 参考\n[浅析CSS——元素重叠及position定位的z-index顺序](http://www.cnblogs.com/mind/archive/2012/04/01/2198995.html)\n\n- 相关代码保存在[about-position](https://github.com/godbasin/godbasin.github.io/tree/blog-codes/about-position)\n\n## 结束语\n不得不说，写这篇文章的过程自己对position和z-index相关的原理和规则也熟悉了很多，总结也是一种学习的方式呢。\n\n","slug":"about-position","published":1,"updated":"2016-06-25T09:27:00.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cipv4ddic000qq0l5asg880f2","content":"<p>今天刚好kk妹子问我关于position的一些问题，就打算整理一下，希望用比较清晰明了的方式解释一下CSS的position是怎么个玩法。<br>顺便也进行一下z-index相关的说明。<br><a id=\"more\"></a></p>\n<h2 id=\"CSS-position属性\"><a href=\"#CSS-position属性\" class=\"headerlink\" title=\"CSS position属性\"></a>CSS position属性</h2><hr>\n<h3 id=\"w3c的position\"><a href=\"#w3c的position\" class=\"headerlink\" title=\"w3c的position\"></a>w3c的position</h3><p>这里借用<a href=\"http://www.w3school.com.cn/cssref/pr_class_position.asp\" target=\"_blank\" rel=\"external\">w3c</a>上的说明</p>\n<blockquote>\n<ul>\n<li>absolute<br>生成绝对定位的元素，相对于static定位以外的第一个父元素进行定位。<br>元素的位置通过”left”, “top”, “right”以及”bottom”属性进行规定。</li>\n<li>fixed<br>生成绝对定位的元素，相对于浏览器窗口进行定位。<br>元素的位置通过”left”, “top”, “right”以及”bottom”属性进行规定。</li>\n<li>relative<br>生成相对定位的元素，相对于其正常位置进行定位。<br>因此，”left:20”会向元素的 LEFT位置添加 20像素。</li>\n<li>static<br>默认值。没有定位，元素出现在正常的流中（忽略top, bottom, left, right或者z-index声明）。</li>\n<li>inherit<br>规定应该从父元素继承position属性的值。</li>\n</ul>\n</blockquote>\n<h3 id=\"文档流\"><a href=\"#文档流\" class=\"headerlink\" title=\"文档流\"></a>文档流</h3><ul>\n<li>什么是文档流<br>相信大家刚开始接触position属性的时候，都会被“文档流”、“流”这样的概念给吓坏了。</li>\n<li>正常的文档流也叫普通流，在HTML里面的写法就是从上到下，从左到右的排版布局</li>\n</ul>\n<h3 id=\"static与文档流\"><a href=\"#static与文档流\" class=\"headerlink\" title=\"static与文档流\"></a>static与文档流</h3><p>如图，<a href=\"http://o9bc2k1st.bkt.clouddn.com/position-static.html\" target=\"_blank\" rel=\"external\">查看页面效果</a><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">a</span>, <span class=\"selector-tag\">p</span>, <span class=\"selector-tag\">div</span> &#123; <span class=\"attribute\">border</span>: solid <span class=\"number\">1px</span> red; &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.static</span> &#123; <span class=\"attribute\">position</span>: static; <span class=\"attribute\">left</span>: <span class=\"number\">100px</span>; <span class=\"attribute\">top</span>: <span class=\"number\">100px</span>; &#125;</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"http://o905ne85q.bkt.clouddn.com/53ETM3GNX7ZV65W%5DW~%28%7BZK3.png\" alt=\"image\"><br>可见，此时添加定位（left: 100px; top: 100px;）是无效的</p>\n<h3 id=\"relative与文档流\"><a href=\"#relative与文档流\" class=\"headerlink\" title=\"relative与文档流\"></a>relative与文档流</h3><p>relative保持原有文档流，但相对本身的原始位置发生位移，且占空间<br>如图，<a href=\"http://o9bc2k1st.bkt.clouddn.com/position-relative.html\" target=\"_blank\" rel=\"external\">查看页面效果</a><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">a</span>, <span class=\"selector-tag\">p</span>, <span class=\"selector-tag\">div</span> &#123; <span class=\"attribute\">border</span>: solid <span class=\"number\">1px</span> red; &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.relative</span> &#123; <span class=\"attribute\">position</span>: relative; <span class=\"attribute\">left</span>: <span class=\"number\">100px</span>; <span class=\"attribute\">top</span>: <span class=\"number\">100px</span>; &#125;</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"http://o905ne85q.bkt.clouddn.com/PN1G~%5DQFF@E7AVRQJ9Z8%28JH.png\" alt=\"image\"><br>可见：</p>\n<ul>\n<li>relative元素也遵循从上到下，从左到右的排版布局</li>\n<li>relative相对于其正常位置进行定位，在这里设置了relative的元素相对其原本位置（position=static）进行位移</li>\n<li>relative元素占有原本位置，因此下一个元素会排到该元素后方</li>\n<li>relative元素占位不会随着定位的改变而改变。也就是说relative在文档流中占有的位置与其原本位置（position=static）相同<br>这里有个需要注意的地方： 虽然relative元素占位与static相同，但会溢出父元素，撑开整个页面（document）。<br>如图，<a href=\"http://o9bc2k1st.bkt.clouddn.com/position-relative-occupation.html\" target=\"_blank\" rel=\"external\">查看页面效果</a><br><img src=\"http://o905ne85q.bkt.clouddn.com/LHRK4@9K$YE1%25KMB%29G9%60~%7B8.png\" alt=\"image\"><br>可以relative元素撑开父元素看到页面底部有滚动条。<br>此时给父元素设置overflow: hidden;则可以隐藏溢出部分，如图<br><img src=\"http://o905ne85q.bkt.clouddn.com/KGE~71FX8H7DW6VNYC1T00M.png\" alt=\"image\"></li>\n</ul>\n<h3 id=\"absolute与文档流\"><a href=\"#absolute与文档流\" class=\"headerlink\" title=\"absolute与文档流\"></a>absolute与文档流</h3><p>absolute脱离文档流，相对于其包含块来定位，且不占位<br>如图<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.parent</span>&#123; <span class=\"attribute\">border</span>: solid <span class=\"number\">1px</span> blue; <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>; &#125; </span><br><span class=\"line\"><span class=\"selector-class\">.parent</span> &gt; <span class=\"selector-tag\">div</span>&#123; <span class=\"attribute\">border</span>: solid <span class=\"number\">1px</span> red; <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>; <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>; &#125; </span><br><span class=\"line\"><span class=\"selector-class\">.absolute</span>&#123; <span class=\"attribute\">position</span>: absolute; <span class=\"attribute\">left</span>: <span class=\"number\">100px</span>; <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>; &#125;</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"http://o905ne85q.bkt.clouddn.com/75%5D1@NRTQ8$U9KTQ66SPL2A.png\" alt=\"image\"><br>可见：</p>\n<ul>\n<li>absolute元素脱离文档流</li>\n<li>absolute元素不占位，因此下一个符合普通流的元素会略过absolute元素排到其上一个元素的后方</li>\n</ul>\n<p>此时对于absolute元素的占位依然不大清晰，接下来我们给父元素添加margin-left: 200px的样式，如图<br><img src=\"http://o905ne85q.bkt.clouddn.com/07J25Y0F~@O%5D@ZAGZ~%25%60%28%29Y.png\" alt=\"image\"><br>很明显，absolute元素位置没有发生改变，这是因为该元素相对于document进行定位。</p>\n<ul>\n<li>absolute元素的定位是相对于static定位以外的第一个父元素进行定位</li>\n<li>当absolute的父元素position为static，则会继续往上查找，直到找到一个为relative/absolute/fixed的父元素作为定位参照物</li>\n<li>当absolute没有position为非static的父元素时，则会进行全局定位，即相对于文档document进行定位</li>\n</ul>\n<p>所以我们可以给父元素加上position=relative的样式，如图<br><img src=\"http://o905ne85q.bkt.clouddn.com/~NPVE%7D%7DZFR3$PH%609%5DFJQF2Y.png\" alt=\"image\"><br>此时absolute元素则相对于父元素进行定位，<a href=\"http://o9bc2k1st.bkt.clouddn.com/position-absolute.html\" target=\"_blank\" rel=\"external\">查看页面效果</a>。</p>\n<h3 id=\"无定位的absolute\"><a href=\"#无定位的absolute\" class=\"headerlink\" title=\"无定位的absolute\"></a>无定位的absolute</h3><p>在使用absolute进行定位时，若我们只是将元素设置为position: absolute，而不对其进行定位（top, bottom, left, right），会是怎样的情况呢？<br>如图，<a href=\"http://o9bc2k1st.bkt.clouddn.com/position-absolute-without-position.html\" target=\"_blank\" rel=\"external\">查看页面效果</a><br><img src=\"http://o905ne85q.bkt.clouddn.com/CG_14%7DVI%28TDCYFK%7BE$8SC%287.png\" alt=\"image\"><br>可见：</p>\n<ul>\n<li>未设置定位的absolute元素，其定位与其原本位置（position=static）相同</li>\n<li>此时absolute元素依然不占位，因此下一个符合普通流的元素会略过absolute元素排到其上一个元素的后方</li>\n</ul>\n<h3 id=\"fixed与文档流\"><a href=\"#fixed与文档流\" class=\"headerlink\" title=\"fixed与文档流\"></a>fixed与文档流</h3><p>fixed脱离文档流，相对于浏览器窗口来定位，且不占位<br>如图<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.parent</span> &#123; <span class=\"attribute\">border</span>: solid <span class=\"number\">1px</span> blue; <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>; &#125; </span><br><span class=\"line\"><span class=\"selector-class\">.parent</span> &gt; <span class=\"selector-tag\">div</span> &#123; <span class=\"attribute\">border</span>: solid <span class=\"number\">1px</span> red; <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>; <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>; &#125; </span><br><span class=\"line\"><span class=\"selector-class\">.fixed</span> &#123; <span class=\"attribute\">position</span>: fixed; <span class=\"attribute\">left</span>: <span class=\"number\">100px</span>; <span class=\"attribute\">top</span>: <span class=\"number\">100px</span>; <span class=\"attribute\">background</span>: yellow; &#125;</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"http://o905ne85q.bkt.clouddn.com/%28FNOAFPIA%5B80%25F%7D6%5B0CQ2%7DE.png\" alt=\"image\"><br>似乎跟相对于文档定位时的absolute元素没什么两样，即</p>\n<ul>\n<li>fixed元素脱离文档流</li>\n<li>fixed元素不占位</li>\n</ul>\n<p>接来下我们将页面填充满，如图，<a href=\"http://o9bc2k1st.bkt.clouddn.com/position-fixed-absolute.html\" target=\"_blank\" rel=\"external\">查看页面效果</a><br><img src=\"http://o905ne85q.bkt.clouddn.com/K4OGL%5BF5~XP9NLRW%254X%7B55X.png\" alt=\"image\"><br>当我们进行页面滚动的时候，fixed元素位置没有发生变化，可见：</p>\n<ul>\n<li>fixed相对于浏览器窗口来定位，不管是否有static定位以外的父元素</li>\n<li>absolute元素会随着页面的滚动而滚动，而fixed不会</li>\n</ul>\n<p>也就是说，fixed元素相对于浏览器窗口进行定位，而无有static定位以外的父元素的absolute，则相对于document进行定位</p>\n<h2 id=\"z-index\"><a href=\"#z-index\" class=\"headerlink\" title=\"z-index\"></a>z-index</h2><hr>\n<h3 id=\"z-index简述\"><a href=\"#z-index简述\" class=\"headerlink\" title=\"z-index简述\"></a>z-index简述</h3><ul>\n<li>z-index属性设置元素的堆叠顺序，拥有更高堆叠顺序的元素总是会处于堆叠顺序较低的元素的前面</li>\n<li>z-index只能在position属性值为relative或absolute或fixed的元素上有效</li>\n</ul>\n<h3 id=\"z-index在同级元素下的效果\"><a href=\"#z-index在同级元素下的效果\" class=\"headerlink\" title=\"z-index在同级元素下的效果\"></a>z-index在同级元素下的效果</h3><p>如图，<a href=\"http://o9bc2k1st.bkt.clouddn.com/position-z-index-same-level.html\" target=\"_blank\" rel=\"external\">查看页面效果</a><br><img src=\"http://o905ne85q.bkt.clouddn.com/%60X74TE9%7D%28OFY%7BUK$MAW%5B%7B5O.png\" alt=\"image\"><br>可见：</p>\n<ul>\n<li>当同级元素不设置z-index或者z-index相等时，后面的元素会叠在前面的元素上方</li>\n<li>当同级元素z-index不同时，z-index大的元素会叠在z-index小的元素上方</li>\n</ul>\n<h3 id=\"z-index在不同级元素下的效果\"><a href=\"#z-index在不同级元素下的效果\" class=\"headerlink\" title=\"z-index在不同级元素下的效果\"></a>z-index在不同级元素下的效果</h3><p>如图，<a href=\"http://o9bc2k1st.bkt.clouddn.com/position-z-index-diff-level-1.html\" target=\"_blank\" rel=\"external\">查看页面效果</a><br><img src=\"http://o905ne85q.bkt.clouddn.com/Q%7BFVVGE6NSP8WB~_3P7SZ$G.png\" alt=\"image\"><br>仔细看会发现个很有意思的现象，parent1和parent2为同级元素，parent2叠在parent1上方，但是parent2子元素却位于parent1子元素的下方。<br>parent1和parent2的position均为relative，是不是有些难以理解？这是因为：</p>\n<ul>\n<li>当向上追溯找不到含有z-index值的父元素的情况下，则可以视为自由的z-index元素</li>\n<li>自由的z-index元素可以与其他自由的定位元素来比较z-index的值，决定其堆叠顺序</li>\n</ul>\n<p>在这里，parent1和parent2均无设置z-index值，故在这里子元素的堆叠顺序是由自己的z-index值决定的。<br>接下来我们为两个parent均加上z-index，如图，<a href=\"http://o9bc2k1st.bkt.clouddn.com/position-z-index-diff-level-2.html\" target=\"_blank\" rel=\"external\">查看页面效果</a><br><img src=\"http://o905ne85q.bkt.clouddn.com/PMVG4833%60U%29JC9%5BWK5W%601NC.png\" alt=\"image\"></p>\n<p>经测试，在parent2的z-index大于或者等于parent1的z-index的时候，parent2以及它的子元素均位于parent1以及其子元素的上方。<br>而当我们设置parent2的z-index小于parent1的z-index的时候，如图<br><img src=\"http://o905ne85q.bkt.clouddn.com/@22C%5D%5D9~A7%28%29%5B%60LZLD@%29%7BRF.png\" alt=\"image\"><br>此时parent2以及它的子元素均位于parent1以及其子元素的下方。<br>可见：</p>\n<ul>\n<li>z-index值只决定同一父元素中的同级子元素的堆叠顺序</li>\n<li>父元素的z-index值为子元素定义了堆叠顺序，即子元素依赖于父元素z-index值来获得页面中的堆叠顺序</li>\n</ul>\n<p>现在我们将parent2的z-index值取消，留下parent1的z-index值为2。<br>如图，<a href=\"http://o9bc2k1st.bkt.clouddn.com/position-z-index-diff-level-3.html\" target=\"_blank\" rel=\"external\">查看页面效果</a><br><img src=\"http://o905ne85q.bkt.clouddn.com/G%5D6CTV7PXO%28UD7B%5B%7B%60%28U693.png\" alt=\"image\"><br>可见：</p>\n<ul>\n<li>自由的z-index元素可以与父元素的同级兄弟定位元素来比较z-index的值，决定其堆叠顺序</li>\n</ul>\n<h3 id=\"z-index与position-fixed\"><a href=\"#z-index与position-fixed\" class=\"headerlink\" title=\"z-index与position: fixed\"></a>z-index与position: fixed</h3><p>当初一直认为fixed的元素有种优先级特别高的感觉，但在z-index比较上却有了新发现，如图<br><img src=\"http://o905ne85q.bkt.clouddn.com/IN7X7L4FJ%5DYT%7DZPG~8_I%60@R.png\" alt=\"image\"><br>经测试，在不设置z-index值或者z-index值相等时，fixed元素和absolute元素堆叠顺序均由元素在文档中的先后位置决定，后出现的会在上面。<br>接下来我们给这几个子元素加上z-index值，如图<br><img src=\"http://o905ne85q.bkt.clouddn.com/FMC%60R%25%25LLKVM9OQ1~5~%29GQ3.png\" alt=\"image\"><br>这时候我们会有种想法，会不会fixed元素和absolute元素的堆叠规则一样呢？<br>现在我们将fixed元素移到parent元素外面，且parent元素z-index值依然为空，如图，<a href=\"http://o9bc2k1st.bkt.clouddn.com/position-z-index-fixed.html\" target=\"_blank\" rel=\"external\">查看页面效果</a><br><img src=\"http://o905ne85q.bkt.clouddn.com/A%284RG%7BTP~2$%29%29ZE5Y2HW%7BOD.png\" alt=\"image\"><br>可见：</p>\n<ul>\n<li>尽管fixed定位方式与absolute不一致，它们的堆叠规则是一致的</li>\n</ul>\n<h3 id=\"z-index总结\"><a href=\"#z-index总结\" class=\"headerlink\" title=\"z-index总结\"></a>z-index总结</h3><ul>\n<li>无z-index或者z-index值相等时，堆叠顺序均由元素在文档中的先后位置决定，后出现的会在上面</li>\n<li>当向上追溯找不到含有z-index值的父元素的情况下，则可以视为自由的z-index元素</li>\n<li>自由的z-index元素可以与其他自由的定位元素或者父元素的同级兄弟定位元素来比较z-index的值，决定其堆叠顺序</li>\n<li>z-index值只决定同一父元素中的同级子元素的堆叠顺序</li>\n<li><p>父元素的z-index值为子元素定义了堆叠顺序，即子元素依赖于父元素z-index值来获得页面中的堆叠顺序</p>\n</li>\n<li><p>参考<br><a href=\"http://www.cnblogs.com/mind/archive/2012/04/01/2198995.html\" target=\"_blank\" rel=\"external\">浅析CSS——元素重叠及position定位的z-index顺序</a></p>\n</li>\n<li><p>相关代码保存在<a href=\"https://github.com/godbasin/godbasin.github.io/tree/blog-codes/about-position\" target=\"_blank\" rel=\"external\">about-position</a></p>\n</li>\n</ul>\n<h2 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h2><p>不得不说，写这篇文章的过程自己对position和z-index相关的原理和规则也熟悉了很多，总结也是一种学习的方式呢。</p>\n","excerpt":"<p>今天刚好kk妹子问我关于position的一些问题，就打算整理一下，希望用比较清晰明了的方式解释一下CSS的position是怎么个玩法。<br>顺便也进行一下z-index相关的说明。<br>","more":"</p>\n<h2 id=\"CSS-position属性\"><a href=\"#CSS-position属性\" class=\"headerlink\" title=\"CSS position属性\"></a>CSS position属性</h2><hr>\n<h3 id=\"w3c的position\"><a href=\"#w3c的position\" class=\"headerlink\" title=\"w3c的position\"></a>w3c的position</h3><p>这里借用<a href=\"http://www.w3school.com.cn/cssref/pr_class_position.asp\">w3c</a>上的说明</p>\n<blockquote>\n<ul>\n<li>absolute<br>生成绝对定位的元素，相对于static定位以外的第一个父元素进行定位。<br>元素的位置通过”left”, “top”, “right”以及”bottom”属性进行规定。</li>\n<li>fixed<br>生成绝对定位的元素，相对于浏览器窗口进行定位。<br>元素的位置通过”left”, “top”, “right”以及”bottom”属性进行规定。</li>\n<li>relative<br>生成相对定位的元素，相对于其正常位置进行定位。<br>因此，”left:20”会向元素的 LEFT位置添加 20像素。</li>\n<li>static<br>默认值。没有定位，元素出现在正常的流中（忽略top, bottom, left, right或者z-index声明）。</li>\n<li>inherit<br>规定应该从父元素继承position属性的值。</li>\n</ul>\n</blockquote>\n<h3 id=\"文档流\"><a href=\"#文档流\" class=\"headerlink\" title=\"文档流\"></a>文档流</h3><ul>\n<li>什么是文档流<br>相信大家刚开始接触position属性的时候，都会被“文档流”、“流”这样的概念给吓坏了。</li>\n<li>正常的文档流也叫普通流，在HTML里面的写法就是从上到下，从左到右的排版布局</li>\n</ul>\n<h3 id=\"static与文档流\"><a href=\"#static与文档流\" class=\"headerlink\" title=\"static与文档流\"></a>static与文档流</h3><p>如图，<a href=\"http://o9bc2k1st.bkt.clouddn.com/position-static.html\">查看页面效果</a><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">a</span>, <span class=\"selector-tag\">p</span>, <span class=\"selector-tag\">div</span> &#123; <span class=\"attribute\">border</span>: solid <span class=\"number\">1px</span> red; &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.static</span> &#123; <span class=\"attribute\">position</span>: static; <span class=\"attribute\">left</span>: <span class=\"number\">100px</span>; <span class=\"attribute\">top</span>: <span class=\"number\">100px</span>; &#125;</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"http://o905ne85q.bkt.clouddn.com/53ETM3GNX7ZV65W%5DW~%28%7BZK3.png\" alt=\"image\"><br>可见，此时添加定位（left: 100px; top: 100px;）是无效的</p>\n<h3 id=\"relative与文档流\"><a href=\"#relative与文档流\" class=\"headerlink\" title=\"relative与文档流\"></a>relative与文档流</h3><p>relative保持原有文档流，但相对本身的原始位置发生位移，且占空间<br>如图，<a href=\"http://o9bc2k1st.bkt.clouddn.com/position-relative.html\">查看页面效果</a><br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">a</span>, <span class=\"selector-tag\">p</span>, <span class=\"selector-tag\">div</span> &#123; <span class=\"attribute\">border</span>: solid <span class=\"number\">1px</span> red; &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.relative</span> &#123; <span class=\"attribute\">position</span>: relative; <span class=\"attribute\">left</span>: <span class=\"number\">100px</span>; <span class=\"attribute\">top</span>: <span class=\"number\">100px</span>; &#125;</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"http://o905ne85q.bkt.clouddn.com/PN1G~%5DQFF@E7AVRQJ9Z8%28JH.png\" alt=\"image\"><br>可见：</p>\n<ul>\n<li>relative元素也遵循从上到下，从左到右的排版布局</li>\n<li>relative相对于其正常位置进行定位，在这里设置了relative的元素相对其原本位置（position=static）进行位移</li>\n<li>relative元素占有原本位置，因此下一个元素会排到该元素后方</li>\n<li>relative元素占位不会随着定位的改变而改变。也就是说relative在文档流中占有的位置与其原本位置（position=static）相同<br>这里有个需要注意的地方： 虽然relative元素占位与static相同，但会溢出父元素，撑开整个页面（document）。<br>如图，<a href=\"http://o9bc2k1st.bkt.clouddn.com/position-relative-occupation.html\">查看页面效果</a><br><img src=\"http://o905ne85q.bkt.clouddn.com/LHRK4@9K$YE1%25KMB%29G9%60~%7B8.png\" alt=\"image\"><br>可以relative元素撑开父元素看到页面底部有滚动条。<br>此时给父元素设置overflow: hidden;则可以隐藏溢出部分，如图<br><img src=\"http://o905ne85q.bkt.clouddn.com/KGE~71FX8H7DW6VNYC1T00M.png\" alt=\"image\"></li>\n</ul>\n<h3 id=\"absolute与文档流\"><a href=\"#absolute与文档流\" class=\"headerlink\" title=\"absolute与文档流\"></a>absolute与文档流</h3><p>absolute脱离文档流，相对于其包含块来定位，且不占位<br>如图<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.parent</span>&#123; <span class=\"attribute\">border</span>: solid <span class=\"number\">1px</span> blue; <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>; &#125; </span><br><span class=\"line\"><span class=\"selector-class\">.parent</span> &gt; <span class=\"selector-tag\">div</span>&#123; <span class=\"attribute\">border</span>: solid <span class=\"number\">1px</span> red; <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>; <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>; &#125; </span><br><span class=\"line\"><span class=\"selector-class\">.absolute</span>&#123; <span class=\"attribute\">position</span>: absolute; <span class=\"attribute\">left</span>: <span class=\"number\">100px</span>; <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>; &#125;</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"http://o905ne85q.bkt.clouddn.com/75%5D1@NRTQ8$U9KTQ66SPL2A.png\" alt=\"image\"><br>可见：</p>\n<ul>\n<li>absolute元素脱离文档流</li>\n<li>absolute元素不占位，因此下一个符合普通流的元素会略过absolute元素排到其上一个元素的后方</li>\n</ul>\n<p>此时对于absolute元素的占位依然不大清晰，接下来我们给父元素添加margin-left: 200px的样式，如图<br><img src=\"http://o905ne85q.bkt.clouddn.com/07J25Y0F~@O%5D@ZAGZ~%25%60%28%29Y.png\" alt=\"image\"><br>很明显，absolute元素位置没有发生改变，这是因为该元素相对于document进行定位。</p>\n<ul>\n<li>absolute元素的定位是相对于static定位以外的第一个父元素进行定位</li>\n<li>当absolute的父元素position为static，则会继续往上查找，直到找到一个为relative/absolute/fixed的父元素作为定位参照物</li>\n<li>当absolute没有position为非static的父元素时，则会进行全局定位，即相对于文档document进行定位</li>\n</ul>\n<p>所以我们可以给父元素加上position=relative的样式，如图<br><img src=\"http://o905ne85q.bkt.clouddn.com/~NPVE%7D%7DZFR3$PH%609%5DFJQF2Y.png\" alt=\"image\"><br>此时absolute元素则相对于父元素进行定位，<a href=\"http://o9bc2k1st.bkt.clouddn.com/position-absolute.html\">查看页面效果</a>。</p>\n<h3 id=\"无定位的absolute\"><a href=\"#无定位的absolute\" class=\"headerlink\" title=\"无定位的absolute\"></a>无定位的absolute</h3><p>在使用absolute进行定位时，若我们只是将元素设置为position: absolute，而不对其进行定位（top, bottom, left, right），会是怎样的情况呢？<br>如图，<a href=\"http://o9bc2k1st.bkt.clouddn.com/position-absolute-without-position.html\">查看页面效果</a><br><img src=\"http://o905ne85q.bkt.clouddn.com/CG_14%7DVI%28TDCYFK%7BE$8SC%287.png\" alt=\"image\"><br>可见：</p>\n<ul>\n<li>未设置定位的absolute元素，其定位与其原本位置（position=static）相同</li>\n<li>此时absolute元素依然不占位，因此下一个符合普通流的元素会略过absolute元素排到其上一个元素的后方</li>\n</ul>\n<h3 id=\"fixed与文档流\"><a href=\"#fixed与文档流\" class=\"headerlink\" title=\"fixed与文档流\"></a>fixed与文档流</h3><p>fixed脱离文档流，相对于浏览器窗口来定位，且不占位<br>如图<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.parent</span> &#123; <span class=\"attribute\">border</span>: solid <span class=\"number\">1px</span> blue; <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>; &#125; </span><br><span class=\"line\"><span class=\"selector-class\">.parent</span> &gt; <span class=\"selector-tag\">div</span> &#123; <span class=\"attribute\">border</span>: solid <span class=\"number\">1px</span> red; <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>; <span class=\"attribute\">width</span>: <span class=\"number\">300px</span>; &#125; </span><br><span class=\"line\"><span class=\"selector-class\">.fixed</span> &#123; <span class=\"attribute\">position</span>: fixed; <span class=\"attribute\">left</span>: <span class=\"number\">100px</span>; <span class=\"attribute\">top</span>: <span class=\"number\">100px</span>; <span class=\"attribute\">background</span>: yellow; &#125;</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"http://o905ne85q.bkt.clouddn.com/%28FNOAFPIA%5B80%25F%7D6%5B0CQ2%7DE.png\" alt=\"image\"><br>似乎跟相对于文档定位时的absolute元素没什么两样，即</p>\n<ul>\n<li>fixed元素脱离文档流</li>\n<li>fixed元素不占位</li>\n</ul>\n<p>接来下我们将页面填充满，如图，<a href=\"http://o9bc2k1st.bkt.clouddn.com/position-fixed-absolute.html\">查看页面效果</a><br><img src=\"http://o905ne85q.bkt.clouddn.com/K4OGL%5BF5~XP9NLRW%254X%7B55X.png\" alt=\"image\"><br>当我们进行页面滚动的时候，fixed元素位置没有发生变化，可见：</p>\n<ul>\n<li>fixed相对于浏览器窗口来定位，不管是否有static定位以外的父元素</li>\n<li>absolute元素会随着页面的滚动而滚动，而fixed不会</li>\n</ul>\n<p>也就是说，fixed元素相对于浏览器窗口进行定位，而无有static定位以外的父元素的absolute，则相对于document进行定位</p>\n<h2 id=\"z-index\"><a href=\"#z-index\" class=\"headerlink\" title=\"z-index\"></a>z-index</h2><hr>\n<h3 id=\"z-index简述\"><a href=\"#z-index简述\" class=\"headerlink\" title=\"z-index简述\"></a>z-index简述</h3><ul>\n<li>z-index属性设置元素的堆叠顺序，拥有更高堆叠顺序的元素总是会处于堆叠顺序较低的元素的前面</li>\n<li>z-index只能在position属性值为relative或absolute或fixed的元素上有效</li>\n</ul>\n<h3 id=\"z-index在同级元素下的效果\"><a href=\"#z-index在同级元素下的效果\" class=\"headerlink\" title=\"z-index在同级元素下的效果\"></a>z-index在同级元素下的效果</h3><p>如图，<a href=\"http://o9bc2k1st.bkt.clouddn.com/position-z-index-same-level.html\">查看页面效果</a><br><img src=\"http://o905ne85q.bkt.clouddn.com/%60X74TE9%7D%28OFY%7BUK$MAW%5B%7B5O.png\" alt=\"image\"><br>可见：</p>\n<ul>\n<li>当同级元素不设置z-index或者z-index相等时，后面的元素会叠在前面的元素上方</li>\n<li>当同级元素z-index不同时，z-index大的元素会叠在z-index小的元素上方</li>\n</ul>\n<h3 id=\"z-index在不同级元素下的效果\"><a href=\"#z-index在不同级元素下的效果\" class=\"headerlink\" title=\"z-index在不同级元素下的效果\"></a>z-index在不同级元素下的效果</h3><p>如图，<a href=\"http://o9bc2k1st.bkt.clouddn.com/position-z-index-diff-level-1.html\">查看页面效果</a><br><img src=\"http://o905ne85q.bkt.clouddn.com/Q%7BFVVGE6NSP8WB~_3P7SZ$G.png\" alt=\"image\"><br>仔细看会发现个很有意思的现象，parent1和parent2为同级元素，parent2叠在parent1上方，但是parent2子元素却位于parent1子元素的下方。<br>parent1和parent2的position均为relative，是不是有些难以理解？这是因为：</p>\n<ul>\n<li>当向上追溯找不到含有z-index值的父元素的情况下，则可以视为自由的z-index元素</li>\n<li>自由的z-index元素可以与其他自由的定位元素来比较z-index的值，决定其堆叠顺序</li>\n</ul>\n<p>在这里，parent1和parent2均无设置z-index值，故在这里子元素的堆叠顺序是由自己的z-index值决定的。<br>接下来我们为两个parent均加上z-index，如图，<a href=\"http://o9bc2k1st.bkt.clouddn.com/position-z-index-diff-level-2.html\">查看页面效果</a><br><img src=\"http://o905ne85q.bkt.clouddn.com/PMVG4833%60U%29JC9%5BWK5W%601NC.png\" alt=\"image\"></p>\n<p>经测试，在parent2的z-index大于或者等于parent1的z-index的时候，parent2以及它的子元素均位于parent1以及其子元素的上方。<br>而当我们设置parent2的z-index小于parent1的z-index的时候，如图<br><img src=\"http://o905ne85q.bkt.clouddn.com/@22C%5D%5D9~A7%28%29%5B%60LZLD@%29%7BRF.png\" alt=\"image\"><br>此时parent2以及它的子元素均位于parent1以及其子元素的下方。<br>可见：</p>\n<ul>\n<li>z-index值只决定同一父元素中的同级子元素的堆叠顺序</li>\n<li>父元素的z-index值为子元素定义了堆叠顺序，即子元素依赖于父元素z-index值来获得页面中的堆叠顺序</li>\n</ul>\n<p>现在我们将parent2的z-index值取消，留下parent1的z-index值为2。<br>如图，<a href=\"http://o9bc2k1st.bkt.clouddn.com/position-z-index-diff-level-3.html\">查看页面效果</a><br><img src=\"http://o905ne85q.bkt.clouddn.com/G%5D6CTV7PXO%28UD7B%5B%7B%60%28U693.png\" alt=\"image\"><br>可见：</p>\n<ul>\n<li>自由的z-index元素可以与父元素的同级兄弟定位元素来比较z-index的值，决定其堆叠顺序</li>\n</ul>\n<h3 id=\"z-index与position-fixed\"><a href=\"#z-index与position-fixed\" class=\"headerlink\" title=\"z-index与position: fixed\"></a>z-index与position: fixed</h3><p>当初一直认为fixed的元素有种优先级特别高的感觉，但在z-index比较上却有了新发现，如图<br><img src=\"http://o905ne85q.bkt.clouddn.com/IN7X7L4FJ%5DYT%7DZPG~8_I%60@R.png\" alt=\"image\"><br>经测试，在不设置z-index值或者z-index值相等时，fixed元素和absolute元素堆叠顺序均由元素在文档中的先后位置决定，后出现的会在上面。<br>接下来我们给这几个子元素加上z-index值，如图<br><img src=\"http://o905ne85q.bkt.clouddn.com/FMC%60R%25%25LLKVM9OQ1~5~%29GQ3.png\" alt=\"image\"><br>这时候我们会有种想法，会不会fixed元素和absolute元素的堆叠规则一样呢？<br>现在我们将fixed元素移到parent元素外面，且parent元素z-index值依然为空，如图，<a href=\"http://o9bc2k1st.bkt.clouddn.com/position-z-index-fixed.html\">查看页面效果</a><br><img src=\"http://o905ne85q.bkt.clouddn.com/A%284RG%7BTP~2$%29%29ZE5Y2HW%7BOD.png\" alt=\"image\"><br>可见：</p>\n<ul>\n<li>尽管fixed定位方式与absolute不一致，它们的堆叠规则是一致的</li>\n</ul>\n<h3 id=\"z-index总结\"><a href=\"#z-index总结\" class=\"headerlink\" title=\"z-index总结\"></a>z-index总结</h3><ul>\n<li>无z-index或者z-index值相等时，堆叠顺序均由元素在文档中的先后位置决定，后出现的会在上面</li>\n<li>当向上追溯找不到含有z-index值的父元素的情况下，则可以视为自由的z-index元素</li>\n<li>自由的z-index元素可以与其他自由的定位元素或者父元素的同级兄弟定位元素来比较z-index的值，决定其堆叠顺序</li>\n<li>z-index值只决定同一父元素中的同级子元素的堆叠顺序</li>\n<li><p>父元素的z-index值为子元素定义了堆叠顺序，即子元素依赖于父元素z-index值来获得页面中的堆叠顺序</p>\n</li>\n<li><p>参考<br><a href=\"http://www.cnblogs.com/mind/archive/2012/04/01/2198995.html\">浅析CSS——元素重叠及position定位的z-index顺序</a></p>\n</li>\n<li><p>相关代码保存在<a href=\"https://github.com/godbasin/godbasin.github.io/tree/blog-codes/about-position\">about-position</a></p>\n</li>\n</ul>\n<h2 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h2><p>不得不说，写这篇文章的过程自己对position和z-index相关的原理和规则也熟悉了很多，总结也是一种学习的方式呢。</p>"},{"title":"jQuery插件--Canvas实现图片裁剪","date":"2016-06-22T11:44:20.000Z","_content":"需要对图片进行裁剪时，可使用该jQuery插件。本文介绍实现方法。\n<!--more-->\n\n代码放在github上，有兴趣的小伙伴可以下载看\n[picture-cut](https://github.com/godbasin/godbasin.github.io/tree/blog-codes/picture-cut)\n\n最终效果图如下[点击查看页面](http://o92md66rk.bkt.clouddn.com/index.html)\n![image](http://o905ne85q.bkt.clouddn.com/picture-cut.png)\n\n## 插件介绍\n-----\n### 使用方法\n- html\n``` html\n<img class=\"img-to-cut\" src=\"img/1.png\" />\n<img class=\"img-to-cut\" src=\"img/2.png\" />\n<img class=\"img-to-cut\" src=\"img/3.png\" />\n<!--需加上一个包裹的外壳-->\n<section id=\"bsphotocut-con\"></section>\n```\n- js\n``` javascript\n//初始化能进行裁剪的图片：此处使用class='img-to-cut'\n$(\".img-to-cut\").click(function() {\n\t$(this).bsPhotoCut({\n\t\t\"section\": \"#bsphotocut-con\", //外框\n\t\t\"ratio\": \"0\", //裁剪框宽度和高度比例n:m, 为0则不限比例\n\t\t\"success\": function(src, obj) { //src为返回图片src, obj为调用此插件的DOM对象this\n\t\t\tvar _img = $(\"<img src='\" + src + \"' />\");\n\t\t\t$(\"body\").append(_img);\n\t\t}\n\t});\n});\n```\n### 插件封装方法\n- 使用jQuery拓展属性$.fn.xxx来进行封装\n- 这里有超详细教程[《jQuery插件开发精品教程，让你的jQuery提升一个台阶》](http://www.cnblogs.com/Wayou/p/jquery_plugin_tutorial.html)\n- 本插件的封装不是特别完美，因为涉及事件绑定，当时还没想到很好的办法，欢迎小伙伴们提意见\n\n## 图片裁剪原理\n-----\n### 使用HTML5 Canvas实现裁剪过程\n- 创建两个canvas：canvas1--装载图片 canvas2--装载裁剪框\n### canvas1\n- 装载图片，实现图片居中处理，具体相关原理可参考[picture-align插件](https://github.com/godbasin/godbasin.github.io/blob/blog-codes/picture-align/js/style.js)\n\n### canvas2\n- 装载裁剪框，若有限制比例则按照比例缩放\n- 裁剪框溢出canvas1时候的处理\n\n### 获取裁剪后图片\n- 使用Canvas函数getImageData可读取特定区域的图片数据\n- 使用Canvas函数putImageData可导出图片数据至canvas\n- 使用Canvas函数toDataURL可将canvas导出为图片格式\n- 这里需要注意，getImageData可能产生跨域问题，解决办法可自行google（似乎没有特别好的解决方法）\n``` javascript\ncutOver: function(obj) {\n\tvar _options = obj.options,\n\t\t//获取canvas1图片数据\n\t\tcanvas1 = document.getElementById(_options.canvas_id + \"1\"),\n\t\tctx1 = canvas1.getContext('2d'),\n\t\t//导出canvas1图片数据，可能有跨域问题哦\n\t\timgData = ctx1.getImageData(_options.canvas_left, _options.canvas_top, _options.canvas_width, _options.canvas_height),\n\t\tcanvas3 = document.createElement(\"canvas\"),\n\t\tctx3 = canvas3.getContext('2d'),\n\t\t_image;\n\tcanvas3.width = _options.canvas_width;\n\tcanvas3.height = _options.canvas_height;\n\t//将图片数据输出到canvas3\n\tctx3.putImageData(imgData, 0, 0);\n\t//将canvas3转换成图片\n\t_image = canvas3.toDataURL(\"image/jpg\");\n\treturn _image;\n}\n```\n\n\n## 鼠标或者触屏事件处理\n-----\n- 鼠标事件为mousedown/mousemove/mouseup，相应js文件为mousestyle.js\n  - 鼠标获取坐标位置可参考[js判断某个位置是否特定元素]()\n- 触屏事件为touchstart/touchmove/touchend，相应js文件为touchstyle.js\n  - 触屏事件获取坐标位置为event.touches[0].clientX和event.touches[0].clientY\n- 在裁剪过程中，全程绑定开始事件（mousedown/touchstart）的检测\n``` javascript\n//此处为鼠标事件部分代码\nfunction mouseStart() {\n\t//getMousePos为获取鼠标坐标的方法，此处不详细讲解\n\tmousestartX = that.getMousePos(event).x - _l;\n\tmousestartY = that.getMousePos(event).y - _t;\n\t//判断鼠标位置是否为裁剪框的角，并针对不同角绑定不同的移动事件\n\tif (((_left - 20) < mousestartX && mousestartX < (_left + 20)) && ((_top - 20) < mousestartY && mousestartY < (_top + 20))) {\n\t\t//此处为裁剪框左上角，可调整裁剪框大小\n\t\tdocument.addEventListener(\"mousemove\", changeLeftTop, false);\n\t\tdocument.addEventListener(\"mouseup\", mouseEnd, false);\n\t} else if (((_right - 20) < mousestartX && mousestartX < (_right + 20)) && ((_bottom - 20) < mousestartY && mousestartY < (_bottom + 20))) {\n\t\t//此处为裁剪框右下角，可调整裁剪框大小\n\t\tdocument.addEventListener(\"mousemove\", changeRightBottom, false);\n\t\tdocument.addEventListener(\"mouseup\", mouseEnd, false);\n\t} else if ((_left + 20) < mousestartX && (_right - 20) > mousestartX && (_top + 20) < mousestartY && (_bottom - 20) > mousestartY) {\n\t\t//此处为裁剪框里面，可移动裁剪框\n\t\tdocument.addEventListener(\"mousemove\", changeMove, false);\n\t\tdocument.addEventListener(\"mouseup\", mouseEnd, false);\n\t} else {\n\t\treturn;\n\t}\n}\n```\n- 触发开始事件后，开始绑定移动（mousemove/touchmove）和结束事件（mouseup/touchend）的检测\n  - 具体的实现这里不详细说明，大家可查看源文件获取\n\n## 结束语\n-----\n曾经我很喜欢用下划线命名变量，被小伙伴们吐槽过很多遍，这些代码还处于那个时代的产物，小伙伴们请见谅呀。","source":"_posts/picture-cut.md","raw":"---\ntitle: jQuery插件--Canvas实现图片裁剪\ndate: 2016-06-22 19:44:20\ncategories: jQuery杂烩\ntags: 自制插件\n---\n需要对图片进行裁剪时，可使用该jQuery插件。本文介绍实现方法。\n<!--more-->\n\n代码放在github上，有兴趣的小伙伴可以下载看\n[picture-cut](https://github.com/godbasin/godbasin.github.io/tree/blog-codes/picture-cut)\n\n最终效果图如下[点击查看页面](http://o92md66rk.bkt.clouddn.com/index.html)\n![image](http://o905ne85q.bkt.clouddn.com/picture-cut.png)\n\n## 插件介绍\n-----\n### 使用方法\n- html\n``` html\n<img class=\"img-to-cut\" src=\"img/1.png\" />\n<img class=\"img-to-cut\" src=\"img/2.png\" />\n<img class=\"img-to-cut\" src=\"img/3.png\" />\n<!--需加上一个包裹的外壳-->\n<section id=\"bsphotocut-con\"></section>\n```\n- js\n``` javascript\n//初始化能进行裁剪的图片：此处使用class='img-to-cut'\n$(\".img-to-cut\").click(function() {\n\t$(this).bsPhotoCut({\n\t\t\"section\": \"#bsphotocut-con\", //外框\n\t\t\"ratio\": \"0\", //裁剪框宽度和高度比例n:m, 为0则不限比例\n\t\t\"success\": function(src, obj) { //src为返回图片src, obj为调用此插件的DOM对象this\n\t\t\tvar _img = $(\"<img src='\" + src + \"' />\");\n\t\t\t$(\"body\").append(_img);\n\t\t}\n\t});\n});\n```\n### 插件封装方法\n- 使用jQuery拓展属性$.fn.xxx来进行封装\n- 这里有超详细教程[《jQuery插件开发精品教程，让你的jQuery提升一个台阶》](http://www.cnblogs.com/Wayou/p/jquery_plugin_tutorial.html)\n- 本插件的封装不是特别完美，因为涉及事件绑定，当时还没想到很好的办法，欢迎小伙伴们提意见\n\n## 图片裁剪原理\n-----\n### 使用HTML5 Canvas实现裁剪过程\n- 创建两个canvas：canvas1--装载图片 canvas2--装载裁剪框\n### canvas1\n- 装载图片，实现图片居中处理，具体相关原理可参考[picture-align插件](https://github.com/godbasin/godbasin.github.io/blob/blog-codes/picture-align/js/style.js)\n\n### canvas2\n- 装载裁剪框，若有限制比例则按照比例缩放\n- 裁剪框溢出canvas1时候的处理\n\n### 获取裁剪后图片\n- 使用Canvas函数getImageData可读取特定区域的图片数据\n- 使用Canvas函数putImageData可导出图片数据至canvas\n- 使用Canvas函数toDataURL可将canvas导出为图片格式\n- 这里需要注意，getImageData可能产生跨域问题，解决办法可自行google（似乎没有特别好的解决方法）\n``` javascript\ncutOver: function(obj) {\n\tvar _options = obj.options,\n\t\t//获取canvas1图片数据\n\t\tcanvas1 = document.getElementById(_options.canvas_id + \"1\"),\n\t\tctx1 = canvas1.getContext('2d'),\n\t\t//导出canvas1图片数据，可能有跨域问题哦\n\t\timgData = ctx1.getImageData(_options.canvas_left, _options.canvas_top, _options.canvas_width, _options.canvas_height),\n\t\tcanvas3 = document.createElement(\"canvas\"),\n\t\tctx3 = canvas3.getContext('2d'),\n\t\t_image;\n\tcanvas3.width = _options.canvas_width;\n\tcanvas3.height = _options.canvas_height;\n\t//将图片数据输出到canvas3\n\tctx3.putImageData(imgData, 0, 0);\n\t//将canvas3转换成图片\n\t_image = canvas3.toDataURL(\"image/jpg\");\n\treturn _image;\n}\n```\n\n\n## 鼠标或者触屏事件处理\n-----\n- 鼠标事件为mousedown/mousemove/mouseup，相应js文件为mousestyle.js\n  - 鼠标获取坐标位置可参考[js判断某个位置是否特定元素]()\n- 触屏事件为touchstart/touchmove/touchend，相应js文件为touchstyle.js\n  - 触屏事件获取坐标位置为event.touches[0].clientX和event.touches[0].clientY\n- 在裁剪过程中，全程绑定开始事件（mousedown/touchstart）的检测\n``` javascript\n//此处为鼠标事件部分代码\nfunction mouseStart() {\n\t//getMousePos为获取鼠标坐标的方法，此处不详细讲解\n\tmousestartX = that.getMousePos(event).x - _l;\n\tmousestartY = that.getMousePos(event).y - _t;\n\t//判断鼠标位置是否为裁剪框的角，并针对不同角绑定不同的移动事件\n\tif (((_left - 20) < mousestartX && mousestartX < (_left + 20)) && ((_top - 20) < mousestartY && mousestartY < (_top + 20))) {\n\t\t//此处为裁剪框左上角，可调整裁剪框大小\n\t\tdocument.addEventListener(\"mousemove\", changeLeftTop, false);\n\t\tdocument.addEventListener(\"mouseup\", mouseEnd, false);\n\t} else if (((_right - 20) < mousestartX && mousestartX < (_right + 20)) && ((_bottom - 20) < mousestartY && mousestartY < (_bottom + 20))) {\n\t\t//此处为裁剪框右下角，可调整裁剪框大小\n\t\tdocument.addEventListener(\"mousemove\", changeRightBottom, false);\n\t\tdocument.addEventListener(\"mouseup\", mouseEnd, false);\n\t} else if ((_left + 20) < mousestartX && (_right - 20) > mousestartX && (_top + 20) < mousestartY && (_bottom - 20) > mousestartY) {\n\t\t//此处为裁剪框里面，可移动裁剪框\n\t\tdocument.addEventListener(\"mousemove\", changeMove, false);\n\t\tdocument.addEventListener(\"mouseup\", mouseEnd, false);\n\t} else {\n\t\treturn;\n\t}\n}\n```\n- 触发开始事件后，开始绑定移动（mousemove/touchmove）和结束事件（mouseup/touchend）的检测\n  - 具体的实现这里不详细说明，大家可查看源文件获取\n\n## 结束语\n-----\n曾经我很喜欢用下划线命名变量，被小伙伴们吐槽过很多遍，这些代码还处于那个时代的产物，小伙伴们请见谅呀。","slug":"picture-cut","published":1,"updated":"2016-06-24T14:14:14.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cipv4ddih000uq0l506w77syh","content":"<p>需要对图片进行裁剪时，可使用该jQuery插件。本文介绍实现方法。<br><a id=\"more\"></a></p>\n<p>代码放在github上，有兴趣的小伙伴可以下载看<br><a href=\"https://github.com/godbasin/godbasin.github.io/tree/blog-codes/picture-cut\" target=\"_blank\" rel=\"external\">picture-cut</a></p>\n<p>最终效果图如下<a href=\"http://o92md66rk.bkt.clouddn.com/index.html\" target=\"_blank\" rel=\"external\">点击查看页面</a><br><img src=\"http://o905ne85q.bkt.clouddn.com/picture-cut.png\" alt=\"image\"></p>\n<h2 id=\"插件介绍\"><a href=\"#插件介绍\" class=\"headerlink\" title=\"插件介绍\"></a>插件介绍</h2><hr>\n<h3 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h3><ul>\n<li><p>html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">class</span>=<span class=\"string\">\"img-to-cut\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"img/1.png\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">class</span>=<span class=\"string\">\"img-to-cut\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"img/2.png\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">class</span>=<span class=\"string\">\"img-to-cut\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"img/3.png\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--需加上一个包裹的外壳--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">id</span>=<span class=\"string\">\"bsphotocut-con\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//初始化能进行裁剪的图片：此处使用class='img-to-cut'</span></span><br><span class=\"line\">$(<span class=\"string\">\".img-to-cut\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  $(<span class=\"keyword\">this</span>).bsPhotoCut(&#123;</span><br><span class=\"line\">    <span class=\"string\">\"section\"</span>: <span class=\"string\">\"#bsphotocut-con\"</span>, <span class=\"comment\">//外框</span></span><br><span class=\"line\">    <span class=\"string\">\"ratio\"</span>: <span class=\"string\">\"0\"</span>, <span class=\"comment\">//裁剪框宽度和高度比例n:m, 为0则不限比例</span></span><br><span class=\"line\">    <span class=\"string\">\"success\"</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">src, obj</span>) </span>&#123; <span class=\"comment\">//src为返回图片src, obj为调用此插件的DOM对象this</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> _img = $(<span class=\"string\">\"&lt;img src='\"</span> + src + <span class=\"string\">\"' /&gt;\"</span>);</span><br><span class=\"line\">      $(<span class=\"string\">\"body\"</span>).append(_img);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"插件封装方法\"><a href=\"#插件封装方法\" class=\"headerlink\" title=\"插件封装方法\"></a>插件封装方法</h3><ul>\n<li>使用jQuery拓展属性$.fn.xxx来进行封装</li>\n<li>这里有超详细教程<a href=\"http://www.cnblogs.com/Wayou/p/jquery_plugin_tutorial.html\" target=\"_blank\" rel=\"external\">《jQuery插件开发精品教程，让你的jQuery提升一个台阶》</a></li>\n<li>本插件的封装不是特别完美，因为涉及事件绑定，当时还没想到很好的办法，欢迎小伙伴们提意见</li>\n</ul>\n<h2 id=\"图片裁剪原理\"><a href=\"#图片裁剪原理\" class=\"headerlink\" title=\"图片裁剪原理\"></a>图片裁剪原理</h2><hr>\n<h3 id=\"使用HTML5-Canvas实现裁剪过程\"><a href=\"#使用HTML5-Canvas实现裁剪过程\" class=\"headerlink\" title=\"使用HTML5 Canvas实现裁剪过程\"></a>使用HTML5 Canvas实现裁剪过程</h3><ul>\n<li>创建两个canvas：canvas1–装载图片 canvas2–装载裁剪框<h3 id=\"canvas1\"><a href=\"#canvas1\" class=\"headerlink\" title=\"canvas1\"></a>canvas1</h3></li>\n<li>装载图片，实现图片居中处理，具体相关原理可参考<a href=\"https://github.com/godbasin/godbasin.github.io/blob/blog-codes/picture-align/js/style.js\" target=\"_blank\" rel=\"external\">picture-align插件</a></li>\n</ul>\n<h3 id=\"canvas2\"><a href=\"#canvas2\" class=\"headerlink\" title=\"canvas2\"></a>canvas2</h3><ul>\n<li>装载裁剪框，若有限制比例则按照比例缩放</li>\n<li>裁剪框溢出canvas1时候的处理</li>\n</ul>\n<h3 id=\"获取裁剪后图片\"><a href=\"#获取裁剪后图片\" class=\"headerlink\" title=\"获取裁剪后图片\"></a>获取裁剪后图片</h3><ul>\n<li>使用Canvas函数getImageData可读取特定区域的图片数据</li>\n<li>使用Canvas函数putImageData可导出图片数据至canvas</li>\n<li>使用Canvas函数toDataURL可将canvas导出为图片格式</li>\n<li>这里需要注意，getImageData可能产生跨域问题，解决办法可自行google（似乎没有特别好的解决方法）<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cutOver: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> _options = obj.options,</span><br><span class=\"line\">    <span class=\"comment\">//获取canvas1图片数据</span></span><br><span class=\"line\">    canvas1 = <span class=\"built_in\">document</span>.getElementById(_options.canvas_id + <span class=\"string\">\"1\"</span>),</span><br><span class=\"line\">    ctx1 = canvas1.getContext(<span class=\"string\">'2d'</span>),</span><br><span class=\"line\">    <span class=\"comment\">//导出canvas1图片数据，可能有跨域问题哦</span></span><br><span class=\"line\">    imgData = ctx1.getImageData(_options.canvas_left, _options.canvas_top, _options.canvas_width, _options.canvas_height),</span><br><span class=\"line\">    canvas3 = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"canvas\"</span>),</span><br><span class=\"line\">    ctx3 = canvas3.getContext(<span class=\"string\">'2d'</span>),</span><br><span class=\"line\">    _image;</span><br><span class=\"line\">  canvas3.width = _options.canvas_width;</span><br><span class=\"line\">  canvas3.height = _options.canvas_height;</span><br><span class=\"line\">  <span class=\"comment\">//将图片数据输出到canvas3</span></span><br><span class=\"line\">  ctx3.putImageData(imgData, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"comment\">//将canvas3转换成图片</span></span><br><span class=\"line\">  _image = canvas3.toDataURL(<span class=\"string\">\"image/jpg\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> _image;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"鼠标或者触屏事件处理\"><a href=\"#鼠标或者触屏事件处理\" class=\"headerlink\" title=\"鼠标或者触屏事件处理\"></a>鼠标或者触屏事件处理</h2><hr>\n<ul>\n<li>鼠标事件为mousedown/mousemove/mouseup，相应js文件为mousestyle.js<ul>\n<li>鼠标获取坐标位置可参考<a href=\"\">js判断某个位置是否特定元素</a></li>\n</ul>\n</li>\n<li>触屏事件为touchstart/touchmove/touchend，相应js文件为touchstyle.js<ul>\n<li>触屏事件获取坐标位置为event.touches[0].clientX和event.touches[0].clientY</li>\n</ul>\n</li>\n<li><p>在裁剪过程中，全程绑定开始事件（mousedown/touchstart）的检测</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//此处为鼠标事件部分代码</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mouseStart</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//getMousePos为获取鼠标坐标的方法，此处不详细讲解</span></span><br><span class=\"line\">  mousestartX = that.getMousePos(event).x - _l;</span><br><span class=\"line\">  mousestartY = that.getMousePos(event).y - _t;</span><br><span class=\"line\">  <span class=\"comment\">//判断鼠标位置是否为裁剪框的角，并针对不同角绑定不同的移动事件</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (((_left - <span class=\"number\">20</span>) &lt; mousestartX &amp;&amp; mousestartX &lt; (_left + <span class=\"number\">20</span>)) &amp;&amp; ((_top - <span class=\"number\">20</span>) &lt; mousestartY &amp;&amp; mousestartY &lt; (_top + <span class=\"number\">20</span>))) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//此处为裁剪框左上角，可调整裁剪框大小</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">\"mousemove\"</span>, changeLeftTop, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">\"mouseup\"</span>, mouseEnd, <span class=\"literal\">false</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (((_right - <span class=\"number\">20</span>) &lt; mousestartX &amp;&amp; mousestartX &lt; (_right + <span class=\"number\">20</span>)) &amp;&amp; ((_bottom - <span class=\"number\">20</span>) &lt; mousestartY &amp;&amp; mousestartY &lt; (_bottom + <span class=\"number\">20</span>))) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//此处为裁剪框右下角，可调整裁剪框大小</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">\"mousemove\"</span>, changeRightBottom, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">\"mouseup\"</span>, mouseEnd, <span class=\"literal\">false</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ((_left + <span class=\"number\">20</span>) &lt; mousestartX &amp;&amp; (_right - <span class=\"number\">20</span>) &gt; mousestartX &amp;&amp; (_top + <span class=\"number\">20</span>) &lt; mousestartY &amp;&amp; (_bottom - <span class=\"number\">20</span>) &gt; mousestartY) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//此处为裁剪框里面，可移动裁剪框</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">\"mousemove\"</span>, changeMove, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">\"mouseup\"</span>, mouseEnd, <span class=\"literal\">false</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>触发开始事件后，开始绑定移动（mousemove/touchmove）和结束事件（mouseup/touchend）的检测</p>\n<ul>\n<li>具体的实现这里不详细说明，大家可查看源文件获取</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h2><hr>\n<p>曾经我很喜欢用下划线命名变量，被小伙伴们吐槽过很多遍，这些代码还处于那个时代的产物，小伙伴们请见谅呀。</p>\n","excerpt":"<p>需要对图片进行裁剪时，可使用该jQuery插件。本文介绍实现方法。<br>","more":"</p>\n<p>代码放在github上，有兴趣的小伙伴可以下载看<br><a href=\"https://github.com/godbasin/godbasin.github.io/tree/blog-codes/picture-cut\">picture-cut</a></p>\n<p>最终效果图如下<a href=\"http://o92md66rk.bkt.clouddn.com/index.html\">点击查看页面</a><br><img src=\"http://o905ne85q.bkt.clouddn.com/picture-cut.png\" alt=\"image\"></p>\n<h2 id=\"插件介绍\"><a href=\"#插件介绍\" class=\"headerlink\" title=\"插件介绍\"></a>插件介绍</h2><hr>\n<h3 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h3><ul>\n<li><p>html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">class</span>=<span class=\"string\">\"img-to-cut\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"img/1.png\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">class</span>=<span class=\"string\">\"img-to-cut\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"img/2.png\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">class</span>=<span class=\"string\">\"img-to-cut\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"img/3.png\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--需加上一个包裹的外壳--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">id</span>=<span class=\"string\">\"bsphotocut-con\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>js</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//初始化能进行裁剪的图片：此处使用class='img-to-cut'</span></span><br><span class=\"line\">$(<span class=\"string\">\".img-to-cut\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  $(<span class=\"keyword\">this</span>).bsPhotoCut(&#123;</span><br><span class=\"line\">    <span class=\"string\">\"section\"</span>: <span class=\"string\">\"#bsphotocut-con\"</span>, <span class=\"comment\">//外框</span></span><br><span class=\"line\">    <span class=\"string\">\"ratio\"</span>: <span class=\"string\">\"0\"</span>, <span class=\"comment\">//裁剪框宽度和高度比例n:m, 为0则不限比例</span></span><br><span class=\"line\">    <span class=\"string\">\"success\"</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">src, obj</span>) </span>&#123; <span class=\"comment\">//src为返回图片src, obj为调用此插件的DOM对象this</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> _img = $(<span class=\"string\">\"&lt;img src='\"</span> + src + <span class=\"string\">\"' /&gt;\"</span>);</span><br><span class=\"line\">      $(<span class=\"string\">\"body\"</span>).append(_img);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"插件封装方法\"><a href=\"#插件封装方法\" class=\"headerlink\" title=\"插件封装方法\"></a>插件封装方法</h3><ul>\n<li>使用jQuery拓展属性$.fn.xxx来进行封装</li>\n<li>这里有超详细教程<a href=\"http://www.cnblogs.com/Wayou/p/jquery_plugin_tutorial.html\">《jQuery插件开发精品教程，让你的jQuery提升一个台阶》</a></li>\n<li>本插件的封装不是特别完美，因为涉及事件绑定，当时还没想到很好的办法，欢迎小伙伴们提意见</li>\n</ul>\n<h2 id=\"图片裁剪原理\"><a href=\"#图片裁剪原理\" class=\"headerlink\" title=\"图片裁剪原理\"></a>图片裁剪原理</h2><hr>\n<h3 id=\"使用HTML5-Canvas实现裁剪过程\"><a href=\"#使用HTML5-Canvas实现裁剪过程\" class=\"headerlink\" title=\"使用HTML5 Canvas实现裁剪过程\"></a>使用HTML5 Canvas实现裁剪过程</h3><ul>\n<li>创建两个canvas：canvas1–装载图片 canvas2–装载裁剪框<h3 id=\"canvas1\"><a href=\"#canvas1\" class=\"headerlink\" title=\"canvas1\"></a>canvas1</h3></li>\n<li>装载图片，实现图片居中处理，具体相关原理可参考<a href=\"https://github.com/godbasin/godbasin.github.io/blob/blog-codes/picture-align/js/style.js\">picture-align插件</a></li>\n</ul>\n<h3 id=\"canvas2\"><a href=\"#canvas2\" class=\"headerlink\" title=\"canvas2\"></a>canvas2</h3><ul>\n<li>装载裁剪框，若有限制比例则按照比例缩放</li>\n<li>裁剪框溢出canvas1时候的处理</li>\n</ul>\n<h3 id=\"获取裁剪后图片\"><a href=\"#获取裁剪后图片\" class=\"headerlink\" title=\"获取裁剪后图片\"></a>获取裁剪后图片</h3><ul>\n<li>使用Canvas函数getImageData可读取特定区域的图片数据</li>\n<li>使用Canvas函数putImageData可导出图片数据至canvas</li>\n<li>使用Canvas函数toDataURL可将canvas导出为图片格式</li>\n<li>这里需要注意，getImageData可能产生跨域问题，解决办法可自行google（似乎没有特别好的解决方法）<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cutOver: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> _options = obj.options,</span><br><span class=\"line\">    <span class=\"comment\">//获取canvas1图片数据</span></span><br><span class=\"line\">    canvas1 = <span class=\"built_in\">document</span>.getElementById(_options.canvas_id + <span class=\"string\">\"1\"</span>),</span><br><span class=\"line\">    ctx1 = canvas1.getContext(<span class=\"string\">'2d'</span>),</span><br><span class=\"line\">    <span class=\"comment\">//导出canvas1图片数据，可能有跨域问题哦</span></span><br><span class=\"line\">    imgData = ctx1.getImageData(_options.canvas_left, _options.canvas_top, _options.canvas_width, _options.canvas_height),</span><br><span class=\"line\">    canvas3 = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"canvas\"</span>),</span><br><span class=\"line\">    ctx3 = canvas3.getContext(<span class=\"string\">'2d'</span>),</span><br><span class=\"line\">    _image;</span><br><span class=\"line\">  canvas3.width = _options.canvas_width;</span><br><span class=\"line\">  canvas3.height = _options.canvas_height;</span><br><span class=\"line\">  <span class=\"comment\">//将图片数据输出到canvas3</span></span><br><span class=\"line\">  ctx3.putImageData(imgData, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"comment\">//将canvas3转换成图片</span></span><br><span class=\"line\">  _image = canvas3.toDataURL(<span class=\"string\">\"image/jpg\"</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> _image;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"鼠标或者触屏事件处理\"><a href=\"#鼠标或者触屏事件处理\" class=\"headerlink\" title=\"鼠标或者触屏事件处理\"></a>鼠标或者触屏事件处理</h2><hr>\n<ul>\n<li>鼠标事件为mousedown/mousemove/mouseup，相应js文件为mousestyle.js<ul>\n<li>鼠标获取坐标位置可参考<a href=\"\">js判断某个位置是否特定元素</a></li>\n</ul>\n</li>\n<li>触屏事件为touchstart/touchmove/touchend，相应js文件为touchstyle.js<ul>\n<li>触屏事件获取坐标位置为event.touches[0].clientX和event.touches[0].clientY</li>\n</ul>\n</li>\n<li><p>在裁剪过程中，全程绑定开始事件（mousedown/touchstart）的检测</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//此处为鼠标事件部分代码</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mouseStart</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//getMousePos为获取鼠标坐标的方法，此处不详细讲解</span></span><br><span class=\"line\">  mousestartX = that.getMousePos(event).x - _l;</span><br><span class=\"line\">  mousestartY = that.getMousePos(event).y - _t;</span><br><span class=\"line\">  <span class=\"comment\">//判断鼠标位置是否为裁剪框的角，并针对不同角绑定不同的移动事件</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (((_left - <span class=\"number\">20</span>) &lt; mousestartX &amp;&amp; mousestartX &lt; (_left + <span class=\"number\">20</span>)) &amp;&amp; ((_top - <span class=\"number\">20</span>) &lt; mousestartY &amp;&amp; mousestartY &lt; (_top + <span class=\"number\">20</span>))) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//此处为裁剪框左上角，可调整裁剪框大小</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">\"mousemove\"</span>, changeLeftTop, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">\"mouseup\"</span>, mouseEnd, <span class=\"literal\">false</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (((_right - <span class=\"number\">20</span>) &lt; mousestartX &amp;&amp; mousestartX &lt; (_right + <span class=\"number\">20</span>)) &amp;&amp; ((_bottom - <span class=\"number\">20</span>) &lt; mousestartY &amp;&amp; mousestartY &lt; (_bottom + <span class=\"number\">20</span>))) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//此处为裁剪框右下角，可调整裁剪框大小</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">\"mousemove\"</span>, changeRightBottom, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">\"mouseup\"</span>, mouseEnd, <span class=\"literal\">false</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ((_left + <span class=\"number\">20</span>) &lt; mousestartX &amp;&amp; (_right - <span class=\"number\">20</span>) &gt; mousestartX &amp;&amp; (_top + <span class=\"number\">20</span>) &lt; mousestartY &amp;&amp; (_bottom - <span class=\"number\">20</span>) &gt; mousestartY) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//此处为裁剪框里面，可移动裁剪框</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">\"mousemove\"</span>, changeMove, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">\"mouseup\"</span>, mouseEnd, <span class=\"literal\">false</span>);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>触发开始事件后，开始绑定移动（mousemove/touchmove）和结束事件（mouseup/touchend）的检测</p>\n<ul>\n<li>具体的实现这里不详细说明，大家可查看源文件获取</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h2><hr>\n<p>曾经我很喜欢用下划线命名变量，被小伙伴们吐槽过很多遍，这些代码还处于那个时代的产物，小伙伴们请见谅呀。</p>"},{"title":"js判断某个位置是否特定元素","date":"2016-06-18T16:15:36.000Z","_content":"需要获取鼠标所在位置是否为某种特定元素，然后进行相关处理。本文介绍一种实现方法。\n<!--more-->\n\n## 常用坐标相关属性\n-----\n首先，获取鼠标坐标的兼容问题大家都很熟悉了。\n此处粘贴一些常用坐标相关属性：\n``` javascript\nscrollHeight //获取对象的滚动高度\nscrollLeft //设置或获取位于对象左边界和窗口中目前可见内容的最左端之间的距离\nscrollTop //设置或获取位于对象最顶端和窗口中可见内容的最顶端之间的距离\nscrollWidth //获取对象的滚动宽度\noffsetHeight //获取对象相对于版面或由父坐标 offsetParent 属性指定的父坐标的高度\noffsetLeft //获取对象相对于版面或由 offsetParent 属性指定的父坐标的计算左侧位置\noffsetTop //获取对象相对于版面或由 offsetTop 属性指定的父坐标的计算顶端位置\nevent.clientX //相对文档的水平座标\nevent.clientY //相对文档的垂直座标\nevent.offsetX //相对容器的水平坐标\nevent.offsetY //相对容器的垂直坐标\ndocument.documentElement.scrollTop 垂直方向滚动的值\nevent.clientX + document.documentElement.scrollTop //相对文档的水平座标+垂直方向滚动的量\n```\n\n## 绑定鼠标事件\n-----\n现在我们来获取鼠标位置\n此处需对IE事件、FireFox事件等兼容\n- 绑定方式有几种\n  - 1.在元素中，onXXX（事件）绑定\n  - 2.在Javascript代码中，获得元素并为元素的onXXX（事件）绑定\n\n``` javascript\nif (document.addEventListener) {\n\telement.addEventListener(event, eventFunction);//IE之外的绑定事件方法\n}else{\n\telement.attachEvent(event, eventFunction);//IE \n}\n```\n## 获取鼠标坐标\n-----\nIE中可以直接使用 event对象，而 FF中则不可以\n- 1.window.event || arguments.callee.caller.arguments[0]获取event对象\n- 2.将 event 作为参数来传递, function xxx(e){var e = e || window.event;}\n\n## 计算鼠标位置\n-----\n``` javascript\nvar eventX = e.pageX - scrollX || e.clientX ;\nvar eventY = e.pageY - scrollY || e.clientY ;\n```\n\n## 获取当前位置是否有特定元素\n-----\n- 给需要检测的元素绑定id或者自定义属性\n- 通过不断获取当前元素父元素，直至获取成功（通过自定义属性判断）或者元素为body\n\n```javascript\nfunction fnGetTable(oEl) {\n\twhile (null !== oEl && $(oEl).attr(\"自定义属性\") !== \"特定属性值\" && target.tagName !== \"BODY\") {\n\t\toEl = oEl.parentElement;\n\t}\n\treturn oEl;\n}\n```\n\n## 实例：下拉菜单点击外围自动关闭\n-----\n- 通过点击当前元素时绑定到事件\n\n``` javascript\nif (document.addEventListener) {\n\telement.addEventListener(event, clickOutside);//IE之外的绑定事件方法\n}else{\n\telement.attachEvent(event, clickOutside);//IE \n}\n```\n\n- clickOutside对象维护队列，该队列对象为id和callback事件\n\n``` javascript\nfunction clickOutside() {\t\n\tvar list = {}; //队列, 对象为id和callback事件\n\treturn function(id, cb) {\n\t\tlist.id.push(id); //id队列\n\t\tlist.cb[id] = cb; //callback事件队列\n\t\t//绑定点击事件\n\t\t$(document).off(\"click\").on(\"click\", function(e) {\n\t\t\tvar e = e || window.event,\n\t\t\t\teventX = e.pageX - scrollX || e.clientX,\n\t\t\t\teventY = e.pageY - scrollY || e.clientY,\n\t\t\t\ttarget = document.elementFromPoint(eventX, eventY),\n\t\t\t\tid = $(target).attr(\"id\");\n\t\t\t//判断当前事件位置是否有ID队列里元素\n\t\t\twhile (list.id.indexOf(id) == -1 && target.tagName != \"BODY\") {\n\t\t\t\ttarget = target.parentElement;\n\t\t\t\tid = $(target).attr(\"id\");\n\t\t\t}\n\t\t\t//若有相关元素，则调用对应callback事件，完了移出队列\n\t\t\tfor (i in list.id) {\n\t\t\t\tif (list.id[i] != id) {\n\t\t\t\t\tlist.cb[list.id[i]]();\n\t\t\t\t\tlist.cb.splice(list.id[i], 1);\n\t\t\t\t\tlist.id.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//若队列为空，关闭事件绑定\n\t\t\tif (!list.id.length) $(document).off(\"click\");\n\t\t});\n\t};\n}\n```\n\n## 结束语\n-----\n解决办法很多，优化方法也很多，代码都是在一次又一次重构和提炼中变得出彩的呢。","source":"_posts/position-object.md","raw":"---\ntitle: js判断某个位置是否特定元素\ndate: 2016-06-19 00:15:36\ncategories: js什锦\ntags: 逻辑实现\n---\n需要获取鼠标所在位置是否为某种特定元素，然后进行相关处理。本文介绍一种实现方法。\n<!--more-->\n\n## 常用坐标相关属性\n-----\n首先，获取鼠标坐标的兼容问题大家都很熟悉了。\n此处粘贴一些常用坐标相关属性：\n``` javascript\nscrollHeight //获取对象的滚动高度\nscrollLeft //设置或获取位于对象左边界和窗口中目前可见内容的最左端之间的距离\nscrollTop //设置或获取位于对象最顶端和窗口中可见内容的最顶端之间的距离\nscrollWidth //获取对象的滚动宽度\noffsetHeight //获取对象相对于版面或由父坐标 offsetParent 属性指定的父坐标的高度\noffsetLeft //获取对象相对于版面或由 offsetParent 属性指定的父坐标的计算左侧位置\noffsetTop //获取对象相对于版面或由 offsetTop 属性指定的父坐标的计算顶端位置\nevent.clientX //相对文档的水平座标\nevent.clientY //相对文档的垂直座标\nevent.offsetX //相对容器的水平坐标\nevent.offsetY //相对容器的垂直坐标\ndocument.documentElement.scrollTop 垂直方向滚动的值\nevent.clientX + document.documentElement.scrollTop //相对文档的水平座标+垂直方向滚动的量\n```\n\n## 绑定鼠标事件\n-----\n现在我们来获取鼠标位置\n此处需对IE事件、FireFox事件等兼容\n- 绑定方式有几种\n  - 1.在元素中，onXXX（事件）绑定\n  - 2.在Javascript代码中，获得元素并为元素的onXXX（事件）绑定\n\n``` javascript\nif (document.addEventListener) {\n\telement.addEventListener(event, eventFunction);//IE之外的绑定事件方法\n}else{\n\telement.attachEvent(event, eventFunction);//IE \n}\n```\n## 获取鼠标坐标\n-----\nIE中可以直接使用 event对象，而 FF中则不可以\n- 1.window.event || arguments.callee.caller.arguments[0]获取event对象\n- 2.将 event 作为参数来传递, function xxx(e){var e = e || window.event;}\n\n## 计算鼠标位置\n-----\n``` javascript\nvar eventX = e.pageX - scrollX || e.clientX ;\nvar eventY = e.pageY - scrollY || e.clientY ;\n```\n\n## 获取当前位置是否有特定元素\n-----\n- 给需要检测的元素绑定id或者自定义属性\n- 通过不断获取当前元素父元素，直至获取成功（通过自定义属性判断）或者元素为body\n\n```javascript\nfunction fnGetTable(oEl) {\n\twhile (null !== oEl && $(oEl).attr(\"自定义属性\") !== \"特定属性值\" && target.tagName !== \"BODY\") {\n\t\toEl = oEl.parentElement;\n\t}\n\treturn oEl;\n}\n```\n\n## 实例：下拉菜单点击外围自动关闭\n-----\n- 通过点击当前元素时绑定到事件\n\n``` javascript\nif (document.addEventListener) {\n\telement.addEventListener(event, clickOutside);//IE之外的绑定事件方法\n}else{\n\telement.attachEvent(event, clickOutside);//IE \n}\n```\n\n- clickOutside对象维护队列，该队列对象为id和callback事件\n\n``` javascript\nfunction clickOutside() {\t\n\tvar list = {}; //队列, 对象为id和callback事件\n\treturn function(id, cb) {\n\t\tlist.id.push(id); //id队列\n\t\tlist.cb[id] = cb; //callback事件队列\n\t\t//绑定点击事件\n\t\t$(document).off(\"click\").on(\"click\", function(e) {\n\t\t\tvar e = e || window.event,\n\t\t\t\teventX = e.pageX - scrollX || e.clientX,\n\t\t\t\teventY = e.pageY - scrollY || e.clientY,\n\t\t\t\ttarget = document.elementFromPoint(eventX, eventY),\n\t\t\t\tid = $(target).attr(\"id\");\n\t\t\t//判断当前事件位置是否有ID队列里元素\n\t\t\twhile (list.id.indexOf(id) == -1 && target.tagName != \"BODY\") {\n\t\t\t\ttarget = target.parentElement;\n\t\t\t\tid = $(target).attr(\"id\");\n\t\t\t}\n\t\t\t//若有相关元素，则调用对应callback事件，完了移出队列\n\t\t\tfor (i in list.id) {\n\t\t\t\tif (list.id[i] != id) {\n\t\t\t\t\tlist.cb[list.id[i]]();\n\t\t\t\t\tlist.cb.splice(list.id[i], 1);\n\t\t\t\t\tlist.id.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t//若队列为空，关闭事件绑定\n\t\t\tif (!list.id.length) $(document).off(\"click\");\n\t\t});\n\t};\n}\n```\n\n## 结束语\n-----\n解决办法很多，优化方法也很多，代码都是在一次又一次重构和提炼中变得出彩的呢。","slug":"position-object","published":1,"updated":"2016-06-24T14:03:13.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cipv4ddj0000xq0l5ubt7exk6","content":"<p>需要获取鼠标所在位置是否为某种特定元素，然后进行相关处理。本文介绍一种实现方法。<br><a id=\"more\"></a></p>\n<h2 id=\"常用坐标相关属性\"><a href=\"#常用坐标相关属性\" class=\"headerlink\" title=\"常用坐标相关属性\"></a>常用坐标相关属性</h2><hr>\n<p>首先，获取鼠标坐标的兼容问题大家都很熟悉了。<br>此处粘贴一些常用坐标相关属性：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scrollHeight <span class=\"comment\">//获取对象的滚动高度</span></span><br><span class=\"line\">scrollLeft <span class=\"comment\">//设置或获取位于对象左边界和窗口中目前可见内容的最左端之间的距离</span></span><br><span class=\"line\">scrollTop <span class=\"comment\">//设置或获取位于对象最顶端和窗口中可见内容的最顶端之间的距离</span></span><br><span class=\"line\">scrollWidth <span class=\"comment\">//获取对象的滚动宽度</span></span><br><span class=\"line\">offsetHeight <span class=\"comment\">//获取对象相对于版面或由父坐标 offsetParent 属性指定的父坐标的高度</span></span><br><span class=\"line\">offsetLeft <span class=\"comment\">//获取对象相对于版面或由 offsetParent 属性指定的父坐标的计算左侧位置</span></span><br><span class=\"line\">offsetTop <span class=\"comment\">//获取对象相对于版面或由 offsetTop 属性指定的父坐标的计算顶端位置</span></span><br><span class=\"line\">event.clientX <span class=\"comment\">//相对文档的水平座标</span></span><br><span class=\"line\">event.clientY <span class=\"comment\">//相对文档的垂直座标</span></span><br><span class=\"line\">event.offsetX <span class=\"comment\">//相对容器的水平坐标</span></span><br><span class=\"line\">event.offsetY <span class=\"comment\">//相对容器的垂直坐标</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.documentElement.scrollTop 垂直方向滚动的值</span><br><span class=\"line\">event.clientX + <span class=\"built_in\">document</span>.documentElement.scrollTop <span class=\"comment\">//相对文档的水平座标+垂直方向滚动的量</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"绑定鼠标事件\"><a href=\"#绑定鼠标事件\" class=\"headerlink\" title=\"绑定鼠标事件\"></a>绑定鼠标事件</h2><hr>\n<p>现在我们来获取鼠标位置<br>此处需对IE事件、FireFox事件等兼容</p>\n<ul>\n<li>绑定方式有几种<ul>\n<li>1.在元素中，onXXX（事件）绑定</li>\n<li>2.在Javascript代码中，获得元素并为元素的onXXX（事件）绑定</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.addEventListener) &#123;</span><br><span class=\"line\">  element.addEventListener(event, eventFunction);<span class=\"comment\">//IE之外的绑定事件方法</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">  element.attachEvent(event, eventFunction);<span class=\"comment\">//IE </span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"获取鼠标坐标\"><a href=\"#获取鼠标坐标\" class=\"headerlink\" title=\"获取鼠标坐标\"></a>获取鼠标坐标</h2><hr>\n<p>IE中可以直接使用 event对象，而 FF中则不可以</p>\n<ul>\n<li>1.window.event || arguments.callee.caller.arguments[0]获取event对象</li>\n<li>2.将 event 作为参数来传递, function xxx(e){var e = e || window.event;}</li>\n</ul>\n<h2 id=\"计算鼠标位置\"><a href=\"#计算鼠标位置\" class=\"headerlink\" title=\"计算鼠标位置\"></a>计算鼠标位置</h2><hr>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> eventX = e.pageX - scrollX || e.clientX ;</span><br><span class=\"line\"><span class=\"keyword\">var</span> eventY = e.pageY - scrollY || e.clientY ;</span><br></pre></td></tr></table></figure>\n<h2 id=\"获取当前位置是否有特定元素\"><a href=\"#获取当前位置是否有特定元素\" class=\"headerlink\" title=\"获取当前位置是否有特定元素\"></a>获取当前位置是否有特定元素</h2><hr>\n<ul>\n<li>给需要检测的元素绑定id或者自定义属性</li>\n<li>通过不断获取当前元素父元素，直至获取成功（通过自定义属性判断）或者元素为body</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fnGetTable</span>(<span class=\"params\">oEl</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"literal\">null</span> !== oEl &amp;&amp; $(oEl).attr(<span class=\"string\">\"自定义属性\"</span>) !== <span class=\"string\">\"特定属性值\"</span> &amp;&amp; target.tagName !== <span class=\"string\">\"BODY\"</span>) &#123;</span><br><span class=\"line\">    oEl = oEl.parentElement;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> oEl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"实例：下拉菜单点击外围自动关闭\"><a href=\"#实例：下拉菜单点击外围自动关闭\" class=\"headerlink\" title=\"实例：下拉菜单点击外围自动关闭\"></a>实例：下拉菜单点击外围自动关闭</h2><hr>\n<ul>\n<li>通过点击当前元素时绑定到事件</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.addEventListener) &#123;</span><br><span class=\"line\">  element.addEventListener(event, clickOutside);<span class=\"comment\">//IE之外的绑定事件方法</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">  element.attachEvent(event, clickOutside);<span class=\"comment\">//IE </span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>clickOutside对象维护队列，该队列对象为id和callback事件</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">clickOutside</span>(<span class=\"params\"></span>) </span>&#123;\t</span><br><span class=\"line\">  <span class=\"keyword\">var</span> list = &#123;&#125;; <span class=\"comment\">//队列, 对象为id和callback事件</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">id, cb</span>) </span>&#123;</span><br><span class=\"line\">    list.id.push(id); <span class=\"comment\">//id队列</span></span><br><span class=\"line\">    list.cb[id] = cb; <span class=\"comment\">//callback事件队列</span></span><br><span class=\"line\">    <span class=\"comment\">//绑定点击事件</span></span><br><span class=\"line\">    $(<span class=\"built_in\">document</span>).off(<span class=\"string\">\"click\"</span>).on(<span class=\"string\">\"click\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> e = e || <span class=\"built_in\">window</span>.event,</span><br><span class=\"line\">        eventX = e.pageX - scrollX || e.clientX,</span><br><span class=\"line\">        eventY = e.pageY - scrollY || e.clientY,</span><br><span class=\"line\">        target = <span class=\"built_in\">document</span>.elementFromPoint(eventX, eventY),</span><br><span class=\"line\">        id = $(target).attr(<span class=\"string\">\"id\"</span>);</span><br><span class=\"line\">      <span class=\"comment\">//判断当前事件位置是否有ID队列里元素</span></span><br><span class=\"line\">      <span class=\"keyword\">while</span> (list.id.indexOf(id) == <span class=\"number\">-1</span> &amp;&amp; target.tagName != <span class=\"string\">\"BODY\"</span>) &#123;</span><br><span class=\"line\">        target = target.parentElement;</span><br><span class=\"line\">        id = $(target).attr(<span class=\"string\">\"id\"</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">//若有相关元素，则调用对应callback事件，完了移出队列</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (i <span class=\"keyword\">in</span> list.id) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (list.id[i] != id) &#123;</span><br><span class=\"line\">          list.cb[list.id[i]]();</span><br><span class=\"line\">          list.cb.splice(list.id[i], <span class=\"number\">1</span>);</span><br><span class=\"line\">          list.id.splice(i, <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">//若队列为空，关闭事件绑定</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!list.id.length) $(<span class=\"built_in\">document</span>).off(<span class=\"string\">\"click\"</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h2><hr>\n<p>解决办法很多，优化方法也很多，代码都是在一次又一次重构和提炼中变得出彩的呢。</p>\n","excerpt":"<p>需要获取鼠标所在位置是否为某种特定元素，然后进行相关处理。本文介绍一种实现方法。<br>","more":"</p>\n<h2 id=\"常用坐标相关属性\"><a href=\"#常用坐标相关属性\" class=\"headerlink\" title=\"常用坐标相关属性\"></a>常用坐标相关属性</h2><hr>\n<p>首先，获取鼠标坐标的兼容问题大家都很熟悉了。<br>此处粘贴一些常用坐标相关属性：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scrollHeight <span class=\"comment\">//获取对象的滚动高度</span></span><br><span class=\"line\">scrollLeft <span class=\"comment\">//设置或获取位于对象左边界和窗口中目前可见内容的最左端之间的距离</span></span><br><span class=\"line\">scrollTop <span class=\"comment\">//设置或获取位于对象最顶端和窗口中可见内容的最顶端之间的距离</span></span><br><span class=\"line\">scrollWidth <span class=\"comment\">//获取对象的滚动宽度</span></span><br><span class=\"line\">offsetHeight <span class=\"comment\">//获取对象相对于版面或由父坐标 offsetParent 属性指定的父坐标的高度</span></span><br><span class=\"line\">offsetLeft <span class=\"comment\">//获取对象相对于版面或由 offsetParent 属性指定的父坐标的计算左侧位置</span></span><br><span class=\"line\">offsetTop <span class=\"comment\">//获取对象相对于版面或由 offsetTop 属性指定的父坐标的计算顶端位置</span></span><br><span class=\"line\">event.clientX <span class=\"comment\">//相对文档的水平座标</span></span><br><span class=\"line\">event.clientY <span class=\"comment\">//相对文档的垂直座标</span></span><br><span class=\"line\">event.offsetX <span class=\"comment\">//相对容器的水平坐标</span></span><br><span class=\"line\">event.offsetY <span class=\"comment\">//相对容器的垂直坐标</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.documentElement.scrollTop 垂直方向滚动的值</span><br><span class=\"line\">event.clientX + <span class=\"built_in\">document</span>.documentElement.scrollTop <span class=\"comment\">//相对文档的水平座标+垂直方向滚动的量</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"绑定鼠标事件\"><a href=\"#绑定鼠标事件\" class=\"headerlink\" title=\"绑定鼠标事件\"></a>绑定鼠标事件</h2><hr>\n<p>现在我们来获取鼠标位置<br>此处需对IE事件、FireFox事件等兼容</p>\n<ul>\n<li>绑定方式有几种<ul>\n<li>1.在元素中，onXXX（事件）绑定</li>\n<li>2.在Javascript代码中，获得元素并为元素的onXXX（事件）绑定</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.addEventListener) &#123;</span><br><span class=\"line\">  element.addEventListener(event, eventFunction);<span class=\"comment\">//IE之外的绑定事件方法</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">  element.attachEvent(event, eventFunction);<span class=\"comment\">//IE </span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"获取鼠标坐标\"><a href=\"#获取鼠标坐标\" class=\"headerlink\" title=\"获取鼠标坐标\"></a>获取鼠标坐标</h2><hr>\n<p>IE中可以直接使用 event对象，而 FF中则不可以</p>\n<ul>\n<li>1.window.event || arguments.callee.caller.arguments[0]获取event对象</li>\n<li>2.将 event 作为参数来传递, function xxx(e){var e = e || window.event;}</li>\n</ul>\n<h2 id=\"计算鼠标位置\"><a href=\"#计算鼠标位置\" class=\"headerlink\" title=\"计算鼠标位置\"></a>计算鼠标位置</h2><hr>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> eventX = e.pageX - scrollX || e.clientX ;</span><br><span class=\"line\"><span class=\"keyword\">var</span> eventY = e.pageY - scrollY || e.clientY ;</span><br></pre></td></tr></table></figure>\n<h2 id=\"获取当前位置是否有特定元素\"><a href=\"#获取当前位置是否有特定元素\" class=\"headerlink\" title=\"获取当前位置是否有特定元素\"></a>获取当前位置是否有特定元素</h2><hr>\n<ul>\n<li>给需要检测的元素绑定id或者自定义属性</li>\n<li>通过不断获取当前元素父元素，直至获取成功（通过自定义属性判断）或者元素为body</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fnGetTable</span>(<span class=\"params\">oEl</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (<span class=\"literal\">null</span> !== oEl &amp;&amp; $(oEl).attr(<span class=\"string\">\"自定义属性\"</span>) !== <span class=\"string\">\"特定属性值\"</span> &amp;&amp; target.tagName !== <span class=\"string\">\"BODY\"</span>) &#123;</span><br><span class=\"line\">    oEl = oEl.parentElement;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> oEl;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"实例：下拉菜单点击外围自动关闭\"><a href=\"#实例：下拉菜单点击外围自动关闭\" class=\"headerlink\" title=\"实例：下拉菜单点击外围自动关闭\"></a>实例：下拉菜单点击外围自动关闭</h2><hr>\n<ul>\n<li>通过点击当前元素时绑定到事件</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.addEventListener) &#123;</span><br><span class=\"line\">  element.addEventListener(event, clickOutside);<span class=\"comment\">//IE之外的绑定事件方法</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">  element.attachEvent(event, clickOutside);<span class=\"comment\">//IE </span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>clickOutside对象维护队列，该队列对象为id和callback事件</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">clickOutside</span>(<span class=\"params\"></span>) </span>&#123;\t</span><br><span class=\"line\">  <span class=\"keyword\">var</span> list = &#123;&#125;; <span class=\"comment\">//队列, 对象为id和callback事件</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">id, cb</span>) </span>&#123;</span><br><span class=\"line\">    list.id.push(id); <span class=\"comment\">//id队列</span></span><br><span class=\"line\">    list.cb[id] = cb; <span class=\"comment\">//callback事件队列</span></span><br><span class=\"line\">    <span class=\"comment\">//绑定点击事件</span></span><br><span class=\"line\">    $(<span class=\"built_in\">document</span>).off(<span class=\"string\">\"click\"</span>).on(<span class=\"string\">\"click\"</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> e = e || <span class=\"built_in\">window</span>.event,</span><br><span class=\"line\">        eventX = e.pageX - scrollX || e.clientX,</span><br><span class=\"line\">        eventY = e.pageY - scrollY || e.clientY,</span><br><span class=\"line\">        target = <span class=\"built_in\">document</span>.elementFromPoint(eventX, eventY),</span><br><span class=\"line\">        id = $(target).attr(<span class=\"string\">\"id\"</span>);</span><br><span class=\"line\">      <span class=\"comment\">//判断当前事件位置是否有ID队列里元素</span></span><br><span class=\"line\">      <span class=\"keyword\">while</span> (list.id.indexOf(id) == <span class=\"number\">-1</span> &amp;&amp; target.tagName != <span class=\"string\">\"BODY\"</span>) &#123;</span><br><span class=\"line\">        target = target.parentElement;</span><br><span class=\"line\">        id = $(target).attr(<span class=\"string\">\"id\"</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">//若有相关元素，则调用对应callback事件，完了移出队列</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (i <span class=\"keyword\">in</span> list.id) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (list.id[i] != id) &#123;</span><br><span class=\"line\">          list.cb[list.id[i]]();</span><br><span class=\"line\">          list.cb.splice(list.id[i], <span class=\"number\">1</span>);</span><br><span class=\"line\">          list.id.splice(i, <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">//若队列为空，关闭事件绑定</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!list.id.length) $(<span class=\"built_in\">document</span>).off(<span class=\"string\">\"click\"</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h2><hr>\n<p>解决办法很多，优化方法也很多，代码都是在一次又一次重构和提炼中变得出彩的呢。</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cipv4ddel0003q0l5425nof5h","category_id":"cipv4ddeu0005q0l54ls1uv0z","_id":"cipv4ddew0007q0l5ldkd940r"},{"post_id":"cipv4ddf10008q0l52igban40","category_id":"cipv4ddeu0005q0l54ls1uv0z","_id":"cipv4ddf4000aq0l5ouyd4jrx"},{"post_id":"cipv4ddg7000cq0l567tfyawl","category_id":"cipv4ddga000eq0l5rae0psyl","_id":"cipv4ddgb000gq0l597f0059v"},{"post_id":"cipv4ddhf000hq0l58l24z07s","category_id":"cipv4ddga000eq0l5rae0psyl","_id":"cipv4ddhh000jq0l5s8eik7rk"},{"post_id":"cipv4ddhk000lq0l5un26bd62","category_id":"cipv4ddhn000nq0l5qjmiakze","_id":"cipv4ddho000pq0l5rwq431ag"},{"post_id":"cipv4ddic000qq0l5asg880f2","category_id":"cipv4ddie000sq0l5vyjivfqt","_id":"cipv4ddie000tq0l5ohvkx0w0"},{"post_id":"cipv4ddih000uq0l506w77syh","category_id":"cipv4ddga000eq0l5rae0psyl","_id":"cipv4ddik000wq0l58m9ghltb"},{"post_id":"cipv4ddj0000xq0l5ubt7exk6","category_id":"cipv4ddhn000nq0l5qjmiakze","_id":"cipv4ddj3000zq0l5923h2g8i"}],"PostTag":[{"post_id":"cipv4ddel0003q0l5425nof5h","tag_id":"cipv4dder0004q0l5d7nodgok","_id":"cipv4ddev0006q0l560xttkj7"},{"post_id":"cipv4ddf10008q0l52igban40","tag_id":"cipv4ddf30009q0l5nnp81czm","_id":"cipv4ddf4000bq0l5kphp7vcr"},{"post_id":"cipv4ddg7000cq0l567tfyawl","tag_id":"cipv4ddga000dq0l5gbwpm1md","_id":"cipv4ddgb000fq0l5blv90cw2"},{"post_id":"cipv4ddhf000hq0l58l24z07s","tag_id":"cipv4ddhg000iq0l55nz9klvh","_id":"cipv4ddhh000kq0l5qmaf4wdb"},{"post_id":"cipv4ddhk000lq0l5un26bd62","tag_id":"cipv4ddhm000mq0l5t265oe0h","_id":"cipv4ddho000oq0l5irk0xc2u"},{"post_id":"cipv4ddic000qq0l5asg880f2","tag_id":"cipv4dder0004q0l5d7nodgok","_id":"cipv4ddid000rq0l5omasr02w"},{"post_id":"cipv4ddih000uq0l506w77syh","tag_id":"cipv4ddhg000iq0l55nz9klvh","_id":"cipv4ddij000vq0l5u0jctsh4"},{"post_id":"cipv4ddj0000xq0l5ubt7exk6","tag_id":"cipv4ddga000dq0l5gbwpm1md","_id":"cipv4ddj2000yq0l51lrh038f"}],"Tag":[{"name":"分享","_id":"cipv4dder0004q0l5d7nodgok"},{"name":"教程","_id":"cipv4ddf30009q0l5nnp81czm"},{"name":"逻辑实现","_id":"cipv4ddga000dq0l5gbwpm1md"},{"name":"自制插件","_id":"cipv4ddhg000iq0l55nz9klvh"},{"name":"原创部件","_id":"cipv4ddhm000mq0l5t265oe0h"}]}}